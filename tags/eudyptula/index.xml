<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Eudyptula on Connected</title>
    <link>https://ayedaemon.github.io/tags/eudyptula/</link>
    <description>Recent content in Eudyptula on Connected</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 May 2023 02:32:12 +0530</lastBuildDate><atom:link href="https://ayedaemon.github.io/tags/eudyptula/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eudyptula Task 7</title>
      <link>https://ayedaemon.github.io/post/2023/05/eudyptula-task-7/</link>
      <pubDate>Mon, 01 May 2023 02:32:12 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2023/05/eudyptula-task-7/</guid>
      <description>Task 7 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">This</span> <span class="n">is</span> <span class="n">Task</span> <span class="mi">07</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Eudyptula</span> <span class="n">Challenge</span>
</span></span><span class="line"><span class="cl"><span class="o">------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Great</span> <span class="n">work</span> <span class="n">with</span> <span class="n">that</span> <span class="n">misc</span> <span class="n">device</span> <span class="n">driver</span><span class="o">.</span>  <span class="n">Isn</span><span class="s1">&#39;t that a nice and simple</span>
</span></span><span class="line"><span class="cl"><span class="n">way</span> <span class="n">to</span> <span class="n">write</span> <span class="n">a</span> <span class="n">character</span> <span class="n">driver</span><span class="err">?</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Just</span> <span class="n">when</span> <span class="n">you</span> <span class="n">think</span> <span class="n">this</span> <span class="n">challenge</span> <span class="n">is</span> <span class="n">all</span> <span class="n">about</span> <span class="n">writing</span> <span class="n">kernel</span> <span class="n">code</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="n">this</span> <span class="n">task</span> <span class="n">is</span> <span class="n">a</span> <span class="n">throwback</span> <span class="n">to</span> <span class="n">your</span> <span class="n">second</span> <span class="n">one</span><span class="o">.</span>  <span class="n">Yes</span><span class="p">,</span> <span class="n">that</span><span class="s1">&#39;s right,</span>
</span></span><span class="line"><span class="cl"><span class="n">building</span> <span class="n">kernels</span><span class="o">.</span>  <span class="n">Turns</span> <span class="n">out</span> <span class="n">that</span><span class="s1">&#39;s what most developers end up doing,</span>
</span></span><span class="line"><span class="cl"><span class="n">tons</span> <span class="ow">and</span> <span class="n">tons</span> <span class="n">of</span> <span class="n">rebuilds</span><span class="p">,</span> <span class="ow">not</span> <span class="n">writing</span> <span class="n">new</span> <span class="n">code</span><span class="o">.</span>  <span class="n">Sad</span><span class="p">,</span> <span class="n">but</span> <span class="n">it</span> <span class="n">is</span> <span class="n">a</span> <span class="n">good</span>
</span></span><span class="line"><span class="cl"><span class="n">skill</span> <span class="n">to</span> <span class="n">know</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">The</span> <span class="n">tasks</span> <span class="n">this</span> <span class="nb">round</span> <span class="n">are</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="o">-</span> <span class="n">Download</span> <span class="n">the</span> <span class="n">linux</span><span class="o">-</span><span class="n">next</span> <span class="n">kernel</span> <span class="k">for</span> <span class="n">today</span><span class="o">.</span>  <span class="n">Or</span> <span class="n">tomorrow</span><span class="p">,</span> <span class="n">just</span> <span class="n">use</span>
</span></span><span class="line"><span class="cl">    <span class="n">the</span> <span class="n">latest</span> <span class="n">one</span><span class="o">.</span>  <span class="n">It</span> <span class="n">changes</span> <span class="n">every</span> <span class="n">day</span> <span class="n">so</span> <span class="n">there</span> <span class="n">is</span> <span class="n">no</span> <span class="n">specific</span> <span class="n">one</span>
</span></span><span class="line"><span class="cl">    <span class="n">you</span> <span class="n">need</span> <span class="n">to</span> <span class="n">pick</span><span class="o">.</span>  <span class="n">Build</span> <span class="n">it</span><span class="o">.</span>  <span class="n">Boot</span> <span class="n">it</span><span class="o">.</span>  <span class="n">Provide</span> <span class="n">proof</span> <span class="n">that</span> <span class="n">you</span> <span class="n">built</span>
</span></span><span class="line"><span class="cl">    <span class="ow">and</span> <span class="n">booted</span> <span class="n">it</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">What</span> <span class="n">is</span> <span class="n">the</span> <span class="n">linux</span><span class="o">-</span><span class="n">next</span> <span class="n">kernel</span><span class="err">?</span>  <span class="n">Ah</span><span class="p">,</span> <span class="n">that</span><span class="s1">&#39;s part of the challenge.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">For</span> <span class="n">a</span> <span class="n">hint</span><span class="p">,</span> <span class="n">you</span> <span class="n">should</span> <span class="n">read</span> <span class="n">the</span> <span class="n">excellent</span> <span class="n">documentation</span> <span class="n">about</span> <span class="n">how</span> <span class="n">the</span>
</span></span><span class="line"><span class="cl"><span class="n">Linux</span> <span class="n">kernel</span> <span class="n">is</span> <span class="n">developed</span> <span class="ow">in</span> <span class="n">Documentation</span><span class="o">/</span><span class="n">development</span><span class="o">-</span><span class="n">process</span><span class="o">/</span> <span class="ow">in</span> <span class="n">the</span>
</span></span><span class="line"><span class="cl"><span class="n">kernel</span> <span class="n">source</span> <span class="n">itself</span><span class="o">.</span>  <span class="n">It</span><span class="s1">&#39;s a great read, and should tell you all you</span>
</span></span><span class="line"><span class="cl"><span class="n">never</span> <span class="n">wanted</span> <span class="n">to</span> <span class="n">know</span> <span class="n">about</span> <span class="n">what</span> <span class="n">Linux</span> <span class="n">kernel</span> <span class="n">developers</span> <span class="k">do</span> <span class="ow">and</span> <span class="n">how</span> <span class="n">they</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span> <span class="n">it</span><span class="o">.</span>
</span></span></code></pre></div><h1 id="what-is-linux">What is Linux??</h1>
<p>Before jumping on Linux-next&hellip;let&rsquo;s start with an overview of the Linux kernel and its significance within the Linux operating system.</p>
<p>Linux is an open-source operating system kernel that was initially developed by Linus Torvalds in 1991. The kernel serves as the core component of the Linux operating system, providing essential functionalities and acting as an intermediary between the hardware and the software layers.</p>
<p>The Linux kernel plays a crucial role in managing system resources, handling hardware devices, and providing a foundation for software applications to run efficiently. Some of its key responsibilities include process management, memory management, device driver handling, file system management, and networking.</p>
<p>One of the defining characteristics of Linux is its open-source nature. This means that the source code of the kernel is freely available to the public, allowing individuals and communities to examine, modify, and distribute it according to their needs. This openness has fostered a vibrant ecosystem of developers who collaborate to improve and enhance the kernel&rsquo;s capabilities.</p>
<p>Linux is renowned for its stability, security, and scalability. Its robust design and efficient resource management make it suitable for a wide range of computing devices, from small embedded systems and smartphones to large-scale servers and supercomputers. Moreover, Linux serves as the foundation for numerous Linux distributions, which are complete operating systems that package the Linux kernel with additional software and user-friendly interfaces.</p>
<p>By harnessing the power of open-source collaboration, Linux has grown into a highly versatile and widely adopted operating system, powering various domains such as enterprise computing, cloud infrastructure, scientific research, mobile devices, and more. Its flexibility, reliability, and vast community support make it an attractive choice for individuals, businesses, and organizations seeking a powerful and customizable operating system.</p>
<p>Now that we have a basic understanding of Linux and its kernel, we can delve into the concept of Linux-next and its significance within the development process.</p>
<h2 id="big-picture-of-linux-development">Big picture of linux development</h2>
<p>The development of the Linux kernel in the open-source world is a remarkable (somewhat scary for me) and dynamic process that involves collaboration among thousands of developers worldwide. Here&rsquo;s a big picture overview of the Linux kernel development process:</p>
<ol>
<li>
<p><strong>Collaboration and Community</strong>: The Linux kernel development thrives on collaboration and community engagement. It is led by Linus Torvalds, the original creator of Linux, along with a core group of maintainers who oversee different subsystems of the kernel. The development process follows a meritocratic model where contributions are reviewed and integrated based on their technical merits.</p>
</li>
<li>
<p><strong>Patch Submission</strong>: Developers from diverse backgrounds and organizations contribute to the Linux kernel. They propose changes, enhancements, bug fixes, and new features in the form of patches. These patches are submitted to the relevant subsystem maintainers or mailing lists for review.</p>
</li>
<li>
<p><strong>Review and Feedback</strong>: The submitted patches undergo a thorough review process, where experienced developers provide feedback, suggestions, and technical guidance. The review process ensures that the proposed changes align with the kernel&rsquo;s standards, maintain compatibility, and adhere to best practices.</p>
</li>
<li>
<p><strong>Iterative Development</strong>: Developers iterate on their patches based on the feedback received during the review process. They make necessary modifications, address concerns, and refine their code to meet the kernel&rsquo;s quality standards.</p>
</li>
<li>
<p><strong>Testing and Integration</strong>: Once the patches are considered ready, they are tested extensively. Various testing frameworks, such as the Linux Test Project (LTP) and KernelCI, are used to ensure that the changes do not introduce regressions and maintain stability. The patches are then integrated into the &ldquo;mainline&rdquo; development branch.</p>
</li>
<li>
<p><strong>Mainline Integration</strong>: The mainline development branch is where the accepted patches are merged into the official Linux kernel source code. Linus Torvalds oversees this process and has the final authority to accept or reject patches based on technical considerations. The mainline branch represents the most up-to-date version of the Linux kernel and serves as the basis for future releases.</p>
</li>
<li>
<p><strong>Stable Releases and Long-Term Support</strong>: The Linux kernel follows a time-based release model, with new stable versions being released approximately every two to three months. These releases incorporate the accumulated changes from the mainline branch, undergo further testing, and receive bug fixes. Additionally, long-term support (LTS) versions are maintained for an extended period to ensure stability and compatibility for enterprise and embedded systems.</p>
</li>
<li>
<p><strong>Ecosystem and Distribution</strong>: The Linux kernel forms the foundation for numerous Linux distributions. These distributions package the kernel with additional software, libraries, and user interfaces to create complete operating systems suitable for various use cases. The distributions play a crucial role in making Linux accessible to a wide range of users, providing installation, customization, and support options.</p>
</li>
</ol>
<p>The Linux kernel development follows a patch cycle that involves several release candidate (RC) versions before a stable release is made. Here&rsquo;s an overview of the Linux patch cycle and RC versions:</p>
<ol>
<li>
<p><strong>Development Cycle</strong>: The development cycle begins after a stable release is made. During this cycle, new features, enhancements, bug fixes, and improvements are introduced into the Linux kernel.</p>
</li>
<li>
<p><strong>Patch Submission</strong>: Developers submit patches for review and inclusion in the next kernel release. These patches can come from individual contributors, companies, or organizations.</p>
</li>
<li>
<p><strong>Mainline Integration</strong>: The submitted patches go through a review process, where they are examined for technical correctness, adherence to coding standards, and compatibility with existing code. Accepted patches are integrated into the mainline development branch of the Linux kernel.</p>
</li>
<li>
<p><strong>Merge Window</strong>: The merge window is a specific period at the beginning of the development cycle when major changes and new features are merged into the mainline development branch. During this time, the Linux kernel developers are more open to accepting substantial modifications.</p>
</li>
<li>
<p><strong>Release Candidates (RC)</strong>: After the merge window closes, the Linux kernel development enters the release candidate phase. Release candidates are pre-release versions of the kernel that undergo testing and further refinement before the final stable release. Each release candidate is identified by the tag <code>-rc&lt;number&gt;</code>.</p>
<ul>
<li>RC1: The first release candidate marks the beginning of the testing phase for the upcoming release. It includes the merged changes from the merge window.</li>
<li>RC2, RC3, and so on: Successive release candidates incorporate additional bug fixes, improvements, and patches that are considered stable enough to be tested.</li>
</ul>
</li>
<li>
<p><strong>Testing and Bug Fixing</strong>: During the release candidate phase, extensive testing is performed by developers, testers, and the wider community. Any bugs, regressions, or issues discovered during this testing period are addressed and fixed in subsequent release candidates.</p>
</li>
<li>
<p><strong>Stable Release</strong>: Once the release candidates have undergone sufficient testing and the kernel is deemed stable, the final stable release is made. The stable release incorporates all the accepted changes and bug fixes from the release candidates.</p>
</li>
<li>
<p><strong>Long-Term Support (LTS) Releases</strong>: In addition to the regular stable releases, certain versions of the Linux kernel are designated as Long-Term Support (LTS) releases. These LTS versions receive extended maintenance and bug fix support for a specified period to ensure stability and compatibility for enterprise and embedded systems.</p>
</li>
</ol>
<p>Here is how the 5.4 development cycle went:</p>
<table>
<thead>
<tr>
<th>Date</th>
<th>Release</th>
</tr>
</thead>
<tbody>
<tr>
<td>September 15, 2019</td>
<td>5.3 stable release</td>
</tr>
<tr>
<td>September 30, 2019</td>
<td>5.4-rc1, merge window closes</td>
</tr>
<tr>
<td>October 6, 2019</td>
<td>5.4-rc2</td>
</tr>
<tr>
<td>October 13, 2019</td>
<td>5.4-rc3</td>
</tr>
<tr>
<td>October 20, 2019</td>
<td>5.4-rc4</td>
</tr>
<tr>
<td>October 27, 2019</td>
<td>5.4-rc5</td>
</tr>
<tr>
<td>November 3, 2019</td>
<td>5.4-rc6</td>
</tr>
<tr>
<td>November 10, 2019</td>
<td>5.4-rc7</td>
</tr>
<tr>
<td>November 17, 2019</td>
<td>5.4-rc8</td>
</tr>
<tr>
<td>November 24, 2019</td>
<td>5.4 stable release</td>
</tr>
</tbody>
</table>
<p><em>Table taken from kernel.org/doc</em></p>
<h2 id="next-trees">Next trees</h2>
<p>&ldquo;Linux Next&rdquo; refers to a specific development branch of the Linux kernel. The Linux Next branch serves as a staging area for upcoming changes and new features that are planned for inclusion in future versions of the Linux kernel. It acts as a testing ground where patches from different developers and subsystems are integrated and tested together.</p>
<p>The purpose of the Linux Next branch is to catch any potential conflicts or issues that may arise when combining different changes before they are merged into the mainline Linux kernel. By testing these changes in advance, it helps ensure the overall stability and quality of the Linux kernel.</p>
<p>The Linux Next branch is maintained by the Linux Next project, which is led by Stephen Rothwell and is supported by several Linux kernel developers. It provides a convenient way for developers to collaborate, test, and integrate their changes before they are submitted for inclusion in the mainline kernel.</p>
<p>There is a great <a href="https://www.youtube.com/watch?v=vyenmLqJQjs">Youtube video</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> where Greg Kroah-Hartman explains the whole development workflow. <strong>A MUST WATCH!!</strong></p>
<h1 id="working-with-linux-next">Working with linux-next</h1>
<p>Now that we understand how the Linux development process works, we can see where the <code>-next</code> trees fall into the overall process. Let&rsquo;s look at how these trees can be used to contribute to kernel development.</p>
<h2 id="initial-setup">Initial setup</h2>
<ul>
<li>Clone the linux tree</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git clone https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
</span></span></code></pre></div><ul>
<li>Add a <code>linux-next</code> remote.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">cd linux
</span></span><span class="line"><span class="cl">git remote add linux-next https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
</span></span></code></pre></div><ul>
<li>Fetch the changes and tags from <code>linux-next</code>.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git fetch linux-next
</span></span><span class="line"><span class="cl">git fetch --tags linux-next
</span></span></code></pre></div><h2 id="regular-tracking">Regular tracking</h2>
<p>Linux <code>-next</code> trees are built every day&hellip; so you need to update it everyday before your work to make sure that you are not working on an older code base.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git checkout master
</span></span><span class="line"><span class="cl">git remote update
</span></span></code></pre></div><ul>
<li>Check newer tags</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git tag -l &#34;next-*&#34; | tail
</span></span></code></pre></div><ul>
<li>Checkout a new branch from the branch you want to work</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">git checkout -b my_local_branch next-20230427
</span></span></code></pre></div><p>Now the next steps are very simple and straight-forward.</p>
<ul>
<li>Make changes to the code base.</li>
<li>Test it with <code>./scripts/checkpatch.pl</code> script for any issues which you need to solve before submitting it as a patch.</li>
<li>Check <code>git status</code> and <code>git diff</code> before making a commit.</li>
<li>Make a patch using <code>git format-patch</code> command.</li>
<li>Now you have a well tested and formatted patch, all you need to do is find the maintainer using <code>./scripts/get_maintainer.pl</code> script and then send the patch to all those people using <code>git send-mail</code>.</li>
</ul>
<p><em><strong>Note:</strong> All of the above-discussed tools and techniques are completely optional; this is just what I would do.</em></p>
<h1 id="resources">Resources</h1>
<ul>
<li><a href="http://vger.kernel.org/vger-lists.html">Linux development subscription lists (mails)</a></li>
<li><a href="https://git.kernel.org/">All linux trees (git)</a></li>
<li><a href="https://www.kernel.org/doc/man-pages/linux-next.html">Linux-next man page</a></li>
<li><a href="https://www.kernel.org/doc/html/latest/process/2.Process.html">Linux kernel development process (official doc)</a></li>
<li><a href="https://www.youtube.com/watch?v=vyenmLqJQjs">Youtube: Linux Kernel Development, Greg Kroah-Hartman - Git Merge 2016</a></li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.youtube.com/watch?v=vyenmLqJQjs">https://www.youtube.com/watch?v=vyenmLqJQjs</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Eudyptula Task 6</title>
      <link>https://ayedaemon.github.io/post/2022/09/eudyptula-task-6/</link>
      <pubDate>Sun, 18 Sep 2022 13:57:01 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2022/09/eudyptula-task-6/</guid>
      <description>Task 6 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 06 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Nice job with the module loading macros, those are tricky, but a very
</span></span><span class="line"><span class="cl">valuable skill to know about, especially when running across them in
</span></span><span class="line"><span class="cl">real kernel code.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Speaking of real kernel code, let&#39;s write some!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The task this time is this:
</span></span><span class="line"><span class="cl">  - Take the kernel module you wrote for task 01, and modify it to be a
</span></span><span class="line"><span class="cl">    misc char device driver.  The misc interface is a very simple way to
</span></span><span class="line"><span class="cl">    be able to create a character device, without having to worry about
</span></span><span class="line"><span class="cl">    all of the sysfs and character device registration mess.  And what a
</span></span><span class="line"><span class="cl">    mess it is, so stick to the simple interfaces wherever possible.
</span></span><span class="line"><span class="cl">  - The misc device should be created with a dynamic minor number, no
</span></span><span class="line"><span class="cl">    need running off and trying to reserve a real minor number for your
</span></span><span class="line"><span class="cl">    test module, that would be crazy.
</span></span><span class="line"><span class="cl">  - The misc device should implement the read and write functions.
</span></span><span class="line"><span class="cl">  - The misc device node should show up in /dev/eudyptula.
</span></span><span class="line"><span class="cl">  - When the character device node is read from, your assigned id is
</span></span><span class="line"><span class="cl">    returned to the caller.
</span></span><span class="line"><span class="cl">  - When the character device node is written to, the data sent to the
</span></span><span class="line"><span class="cl">    kernel needs to be checked.  If it matches your assigned id, then
</span></span><span class="line"><span class="cl">    return a correct write return value.  If the value does not match
</span></span><span class="line"><span class="cl">    your assigned id, return the &#34;invalid value&#34; error value.
</span></span><span class="line"><span class="cl">  - The misc device should be registered when your module is loaded, and
</span></span><span class="line"><span class="cl">    unregistered when it is unloaded.
</span></span><span class="line"><span class="cl">  - Provide some &#34;proof&#34; this all works properly.
</span></span></code></pre></div><h3 id="device-drivers">Device drivers??</h3>
<p>When a user adds a new part to a computer system, such a printer, the computer doesn&rsquo;t immediately understand how to connect with it and identify it. This requires some sort of translator that can mediate between the component and our operating system/Computer. These translators are called <strong>device drivers</strong>. The operating system and other software are typically instructed on how to interface with another piece of hardware by device drivers, which are typically extremely small pieces of software.</p>
<p>For example, In some laptops there is a dedicated <em>CAPSLOCK</em> LED, which toggles to indicate the state of the key itself. It seems like a really easy and straightforward concept. A key and a led are there; when the key is pressed, the led toggles; when the key is pressed again, the led toggles once more. However, There is lot more going on than what meets the eye.</p>
<p>When the <em>CAPSLOCK</em> key is pressed, userspace application that connects with the relevant mediator/translator and transmits the message to it. The translator then manages this message, analyses it, and then executes some operations on the associated hardware device (LED).</p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 432 377"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='24' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='96' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='96' y='244' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='96' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='104' y='84' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='104' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='212' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='120' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='128' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='324' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='128' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='128' y='356' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='136' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='212' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='136' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='144' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='212' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='144' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='152' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='160' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='160' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='52' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='168' y='84' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='168' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='132' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>┬</text>
<text text-anchor='middle' x='168' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>┼</text>
<text text-anchor='middle' x='168' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='168' y='324' fill='currentColor' style='font-size:1em'>▼</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='168' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='176' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='176' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>m</text>
<text text-anchor='middle' x='184' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='212' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='208' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='324' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='356' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='216' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='324' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='216' y='356' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='84' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='232' y='84' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='232' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='240' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='240' y='244' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='240' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='52' fill='currentColor' style='font-size:1em'>U</text>
<text text-anchor='middle' x='352' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='340' fill='currentColor' style='font-size:1em'>H</text>
<text text-anchor='middle' x='360' y='52' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='360' y='132' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='212' fill='currentColor' style='font-size:1em'>K</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='368' y='52' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='368' y='212' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='368' y='340' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='376' y='52' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='376' y='212' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='376' y='340' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='384' y='52' fill='currentColor' style='font-size:1em'>S</text>
<text text-anchor='middle' x='384' y='212' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='384' y='340' fill='currentColor' style='font-size:1em'>W</text>
<text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='392' y='212' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>A</text>
<text text-anchor='middle' x='400' y='212' fill='currentColor' style='font-size:1em'>L</text>
<text text-anchor='middle' x='400' y='340' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='408' y='340' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='416' y='52' fill='currentColor' style='font-size:1em'>E</text>
</g>

    </svg>
  
</div>
<p>Now we know what are device drivers and how do they fit in the bigger picture. But that&rsquo;s not all!</p>
<p>In linux, these device drivers are usually implemented as kernel modules, that provides an interface between the actual hardare device and the userspace &ldquo;<a href="https://www.kernel.org/doc/html/latest/filesystems/vfs.html">files</a>&rdquo;. On the basis of speed, volume and way of organizing the data to be transfered from userspace to the device and vice versa, device drivers are categorized under 2 types. <em>(Note:- There is one more type of device called network device, but for this article it&rsquo;s better to not start discussing about those)</em></p>
<ol>
<li>Character devices (Slow and manages small amount of data; used for keyboards, mouse, etc)</li>
<li>Block devices (Fast and can manage bulk data with ease and efficiency; used mainly for storage devices)</li>
</ol>
<p>A typical linux <code>ls -l</code> command gives us a lot of information about the kind of device each file is.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ls -l /dev
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output (snipped)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># lrwxrwxrwx  1 root root          3    Sep 16 19:56 cdrom -&gt; sr0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----  1 root disk        8,0    Sep 16 19:56 sda</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----  1 root disk        8,1    Sep 16 19:56 sda1</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----  1 root disk        8,2    Sep 16 19:56 sda2</span>
</span></span><span class="line"><span class="cl"><span class="c1"># brw-rw----+ 1 root optical    11,0    Sep 16 19:56 sr0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># crw--w----  1 root tty         4,0    Sep 16 19:56 tty0</span>
</span></span><span class="line"><span class="cl"><span class="c1"># crw-rw-rw-  1 root root        1,5    Sep 16 19:56 zero</span>
</span></span></code></pre></div><p>First character of each line from the above output gives the type of the file it is, for example:</p>
<ul>
<li><code>l</code> indicates that the file is a link file.</li>
<li><code>b</code> is the indicator for block device.</li>
<li><code>c</code> is for the character device.</li>
</ul>
<p>Another important thing this gives out are unique identifiers associated with each device. These identifiers consists of <strong>two comma separated numbers</strong> - <code>major number</code> and <code>minor number</code>.</p>
<p>Major number tells about the driver associated with the device. In the output above, <code>sda</code>, <code>sda1</code> and <code>sda2</code> all are managed by driver <code>8</code>. The kernel uses the major number at open time to dispatch execution to the appropriate driver. While the minor number is used by driver (specified by major number) to differentiate among multiple devices handled by the driver.</p>
<p>If you wish to read more about this, here is a <a href="https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch03s02.html">good article about major and minor numbers.</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>At this point we can take a guess that these numbers are not random numbers, but they have a meaning to it. <a href="https://www.kernel.org/doc/html/latest/admin-guide/devices.html">Here</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> is the official registry of allocated devices numbers which we will have to keep in mind before writing a device driver.</p>
<h3 id="what-is-a-misc-char-device-driver">What is a misc char device driver??</h3>
<p>Well, it&rsquo;s quite clear, isn&rsquo;t it? A Misc driver is a driver that is used for miscellaneous devices. 🤭🤭</p>
<p>They mostly behave like a char drivers, but they are unique in that we don&rsquo;t need to worry about all the complicated number registration issues. We can simply write our driver module and assign it a static minor number or ask kernel to provide a dynamic minor number. All the misc devices have common major number <code>10</code>. And just like char device, it supports all the file operation calls like open, read, write, close and IOCTL.</p>
<p>This is quite useful when we want to write a basic driver for a simple functionality and save ourselves from the mess of allocating and registering a major number.</p>
<h4 id="your-first-misc-char-device-driver">Your first misc char device driver</h4>
<p>In linux kernel source, <code>struct miscdevice</code> is defined in <a href="https://elixir.bootlin.com/linux/latest/source/include/linux/miscdevice.h#L79"><code>linux/miscdevice.h</code> file</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">miscdevice</span>  <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">minor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="k">struct</span> <span class="n">file_operations</span> <span class="o">*</span><span class="n">fops</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">list_head</span> <span class="n">list</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">device</span> <span class="o">*</span><span class="n">parent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">device</span> <span class="o">*</span><span class="n">this_device</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="k">struct</span> <span class="n">attribute_group</span> <span class="o">**</span><span class="n">groups</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">nodename</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">umode_t</span> <span class="n">mode</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>For this task, we will need only 3 members of the above struct.</p>
<ol>
<li><code>int minor</code>: To allocate the minor number, either static or dynamic.</li>
<li><code>const char *name</code>: To give the name to the device.</li>
<li><code>const struct file_operations *fops</code> : To allow custom file operations like read and write.</li>
</ol>
<p>This will allow us to write a basic module that will work as misc device driver that can be loaded and unloaded from the kernel. Create a file with name <code>misc_char_device_driver.c</code> and paste the below code in that.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/miscdevice.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// message formatting - optional
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define pr_fmt(fmt) KBUILD_MODNAME &#34;: &#34; fmt
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Device name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MISC_DEVICE_NAME &#34;eudyptula&#34;
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Misc Device structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="k">struct</span> <span class="n">miscdevice</span> <span class="n">my_misc_device</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="n">minor</span> <span class="o">=</span> <span class="n">MISC_DYNAMIC_MINOR</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">MISC_DEVICE_NAME</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Entry point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_world_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="nf">misc_register</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Hello from module; Return %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">          <span class="k">return</span> <span class="o">-</span><span class="n">EFAULT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Exit point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_world_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">misc_deregister</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Exiting from module</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_world_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_world_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task6&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>Compile and load module using below <code>Makefile</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-makefile" data-lang="makefile"><span class="line"><span class="cl"><span class="nv">KDIR</span> <span class="o">:=</span> /lib/modules/<span class="k">$(</span>shell uname -r<span class="k">)</span>/build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">all</span><span class="o">:</span> <span class="n">clean</span> <span class="n">build</span> <span class="n">install</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">build</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> modules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span> <span class="n">uninstall</span>
</span></span><span class="line"><span class="cl">    <span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> clean
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">install</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    - sudo insmod misc_char_device_driver.ko
</span></span><span class="line"><span class="cl">    sudo lsmod <span class="p">|</span> grep misc_char_device_driver
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">uninstall</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    - sudo rmmod misc_char_device_driver
</span></span></code></pre></div><p>After compiling the above module and loading it, this will give me a character device in the <code>/dev/</code> directory.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">crw------- 1 root root 10, 122 Sep 17 13:21 /dev/eudyptula
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/o75ajIFH0QnQC3nCeD/giphy.gif#center" alt=""  />
</p>
<p>We can see that the file is a character type because of the initial <code>c</code> indicator. Also the major number is <code>10</code>, which is the common major number for all misc devices. The minor number in our case is random but if you want feel free to allocate a static one.</p>
<p>When loading and unloading this module, it&rsquo;ll also create some logs because of the <code>pr_info</code> function calls. These logs can be viewed via <code>dmesg | grep misc_char_device_driver</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[17543.585039] misc_char_device_driver: Hello from module; Return 0
</span></span><span class="line"><span class="cl">[17583.624421] misc_char_device_driver: Exiting from module
</span></span></code></pre></div><h4 id="adding-file-operations-to-driver">Adding file operations to driver</h4>
<p>Now we have a working character device that just exists but it does not support any file operations at this point. We can add the required file operations using the <code>const struct file_operations *fops</code> member of <code>struct miscdevice</code>. In linux kernel, <code>struct file_operations</code> is defined at <a href="https://elixir.bootlin.com/linux/latest/source/include/linux/fs.h#L1964"><code>linux/fs.h</code> file</a>. There are many file operations that are supported but we only need <code>read</code> and <code>write</code> for now.</p>
<p>Our new code will look something like this</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/miscdevice.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/fs.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// message formatting
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define pr_fmt(fmt) KBUILD_MODNAME &#34;: &#34; fmt
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Device name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define MISC_DEVICE_NAME &#34;eudyptula&#34;
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Custom read operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_read</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Read operation performed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Custom write operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_write</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Write operation performed</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Operations structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">const</span> <span class="k">struct</span> <span class="n">file_operations</span> <span class="n">misc_fops</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">read</span> <span class="o">=</span> <span class="n">misc_read</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">write</span> <span class="o">=</span> <span class="n">misc_write</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Misc Device structure
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="k">struct</span> <span class="n">miscdevice</span> <span class="n">my_misc_device</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">minor</span> <span class="o">=</span> <span class="n">MISC_DYNAMIC_MINOR</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">MISC_DEVICE_NAME</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="n">fops</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">misc_fops</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Entry point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_world_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">ret</span> <span class="o">=</span> <span class="nf">misc_register</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Hello from module; Return %d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">ret</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="o">-</span><span class="n">EFAULT</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Exit point
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_world_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">misc_deregister</span><span class="p">(</span><span class="o">&amp;</span><span class="n">my_misc_device</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;Exiting from module</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_world_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_world_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task6&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>After compiling the above module and loading it, this will provide additional functionality of read and write on the device. This can be tested by reading and writing to the <code>/dev/eudyptula</code> device now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Read operation</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>/dev/eudyptula <span class="nv">of</span><span class="o">=</span>/dev/null <span class="nv">count</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output in `dmesg`</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [23375.547714] misc_char_device_driver: Read operation performed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Write operation</span>
</span></span><span class="line"><span class="cl">dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>/dev/eudyptula <span class="nv">count</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output in `dmesg`</span>
</span></span><span class="line"><span class="cl"><span class="c1"># [23353.947901] misc_char_device_driver: Write operation performed</span>
</span></span></code></pre></div><h4 id="userspace---data---kernel-module">Userspace &lt;&ndash;[data]&ndash;&gt; kernel module</h4>
<p>Now it&rsquo;s time for the ultimate move, we have a misc character device driver that supports read and write operations to it, but it actually doesn&rsquo;t send any data from kernel to userland and vice-versa. This is because there is no shared memory where we can simply pass the variables or pointers to the location and do whatever we intend to do it.</p>
<p>Things are a bit different when have to transfer data between a kernel layer and userspace. Complete explaination is out of the scope for this article, but the short version is that the transfer is done with the help of 2 buffers, one on the kernel and other on the userspace. The userspace programs fill data in their buffer and address to that buffer is passed to the kernel. The kernel then uses that buffer to copy data to it&rsquo;s own buffer and with that we are done. <a href="https://stackoverflow.com/questions/8265657/how-does-copy-from-user-from-the-linux-kernel-work-internally">Here is a stackoverflow thread</a> on the same topic.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/fd1TSJqq3b4GI/giphy.gif#center" alt=""  />
</p>
<p>But we need not to worry about all this complexity, for us it&rsquo;ll be as hard as calling the <a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-from-user.html"><code>copy_from_user()</code></a> <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> and <a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-to-user.html"><code>copy_to_user()</code></a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> function from our kernel module.</p>
<p>With this, our new <code>read</code> and <code>write</code> functions will look something like below:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="c1">// Custom read operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_read</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">my_id</span> <span class="o">=</span> <span class="s">&#34;ayedaemon</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">my_id_len</span> <span class="o">=</span> <span class="nf">strlen</span><span class="p">(</span><span class="n">my_id</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;[begin] offt=%ld</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">*</span><span class="n">offt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">offt</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">((</span><span class="n">cnt</span> <span class="o">&lt;</span> <span class="n">my_id_len</span><span class="p">)</span> <span class="o">||</span>                        <span class="c1">// Check the size
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">(</span><span class="nf">copy_to_user</span><span class="p">(</span><span class="n">buff</span><span class="p">,</span> <span class="n">my_id</span><span class="p">,</span> <span class="n">my_id_len</span><span class="p">)))</span>       <span class="c1">// Copy to buffer
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="k">return</span> <span class="o">-</span><span class="n">EINVAL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="o">*</span><span class="n">offt</span> <span class="o">+=</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_info</span><span class="p">(</span><span class="s">&#34;[ end ] offt=%ld</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="o">*</span><span class="n">offt</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Custom write operation
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">static</span> <span class="kt">ssize_t</span> <span class="nf">misc_write</span><span class="p">(</span><span class="k">struct</span> <span class="n">file</span> <span class="o">*</span><span class="n">filp</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buff</span><span class="p">,</span> <span class="kt">size_t</span> <span class="n">cnt</span><span class="p">,</span> <span class="kt">loff_t</span> <span class="o">*</span><span class="n">offt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">my_id</span> <span class="o">=</span> <span class="s">&#34;ayedaemon&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">my_id_len</span> <span class="o">=</span> <span class="nf">strlen</span><span class="p">(</span><span class="n">my_id</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="n">temp</span><span class="p">[</span><span class="n">my_id_len</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span> <span class="c1">// size = 10; including the null byte
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">((</span><span class="n">cnt</span> <span class="o">!=</span> <span class="n">my_id_len</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">||</span>                                 <span class="c1">// Check input size (mainly to prevent overflows)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">(</span><span class="nf">copy_from_user</span><span class="p">(</span><span class="n">temp</span><span class="p">,</span> <span class="n">buff</span><span class="p">,</span> <span class="n">my_id_len</span><span class="p">))</span> <span class="o">||</span>              <span class="c1">// Copy 9 bytes from userland
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">(</span><span class="nf">strncmp</span><span class="p">(</span><span class="n">temp</span><span class="p">,</span> <span class="n">my_id</span><span class="p">,</span> <span class="n">my_id_len</span><span class="p">)))</span>                      <span class="c1">// finally, compare 9 bytes
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	  <span class="k">return</span> <span class="o">-</span><span class="n">EINVAL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">else</span>
</span></span><span class="line"><span class="cl">	  <span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>In the above code, <code>read</code> function first checks the size of the buffer and then copies the <code>my_id</code> value to userspace buffer. And in <code>write</code> function, we check input size, then copies the data from userspace to <code>temp</code> buffer and then compares the data to be same. There are other things in the code but those are for extra checks, just to make sure the module does not crash.</p>
<p>We can now test the code with our makefile and everything should be as we are expecting it to be.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## Read the value from device</span>
</span></span><span class="line"><span class="cl">cat /dev/eudyptula
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl"><span class="c1"># ayedaemon</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Write &#34;ayedaemon&#34; to the device</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;ayedaemon&#34;</span> &gt; /dev/eudyptula
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output - No output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Write anything apart from &#34;ayedaemon&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;something&#34;</span> &gt; /dev/eudyptula
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output - Gives error</span>
</span></span><span class="line"><span class="cl"><span class="c1"># bash: echo: write error: Invalid argument</span>
</span></span></code></pre></div><p><img loading="lazy" src="https://media.giphy.com/media/hZj44bR9FVI3K/giphy.gif#center" alt=""  />
</p>
<p>Now we have achieved the goal of this task, let&rsquo;s check the formatting of the code so that it follows the proper coding conventions that linux kernels developers have set.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./linux/scripts/checkpatch.pl -f misc_char_device_driver.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># total: 0 errors, 0 warnings, 99 lines checked</span>
</span></span><span class="line"><span class="cl"><span class="c1"># misc_char_device_driver.c has no obvious style problems and is ready for submission.</span>
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>There are mainly 2 types of device drivers - character and block. But there are also network device drivers which are completely different from the ones we discussed here. This article tries to provide basic introduction to misc character devices and details about how to write your own driver. All the code can be found in the <a href="https://github.com/ayedaemon/eudyptula">github repo here</a> <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup> for you to playaround.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch03s02.html">https://www.oreilly.com/library/view/linux-device-drivers/0596000081/ch03s02.html</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.kernel.org/doc/html/latest/admin-guide/devices.html">https://www.kernel.org/doc/html/latest/admin-guide/devices.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-from-user.html">https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-from-user.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-to-user.html">https://www.kernel.org/doc/htmldocs/kernel-api/API---copy-to-user.html</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://github.com/ayedaemon/eudyptula">https://github.com/ayedaemon/eudyptula</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Eudyptula Task5</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-5/</link>
      <pubDate>Wed, 22 Jun 2022 16:14:27 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-5/</guid>
      <description>Task 5 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 05 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Yeah, you survived the coding style mess!  Now, on to some &#34;real&#34;
</span></span><span class="line"><span class="cl">things, as I know you are getting bored by these so far.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">So, simple task this time around:
</span></span><span class="line"><span class="cl">  - take the kernel module you wrote for task 01, and modify it so that
</span></span><span class="line"><span class="cl">    when a USB keyboard is plugged in, the module will be automatically
</span></span><span class="line"><span class="cl">    loaded by the correct userspace hotplug tools (which are implemented
</span></span><span class="line"><span class="cl">    by depmod / kmod / udev / mdev / systemd, depending on what distro
</span></span><span class="line"><span class="cl">    you are using.)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Yes, so simple, and yet, it&#39;s a bit tricky.  As a hint, go read chapter
</span></span><span class="line"><span class="cl">14 of the book, &#34;Linux Device Drivers, 3rd edition.&#34;  Don&#39;t worry, it&#39;s
</span></span><span class="line"><span class="cl">free, and online, no need to go buy anything.
</span></span></code></pre></div><h3 id="what-is-usb">What is USB??</h3>
<p>Ofcourse, we know what a USB is!! We use it everyday with our digital devices like pen-drive, external harddisks, chargers, digital camera, keyboard, mice, wifi dongle, etc&hellip;USB devices and connectors are popular with everyone, even with people without any IT background. It is so famous and well known that it has got <a href="https://www.usb.org/">it&rsquo;s own website</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> and a <a href="https://en.wikipedia.org/wiki/USB">Wikipedia page</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.</p>
<p>In early days, just before USB appeared, peripherals like keyboards, mouse and printers were connected with serial and parallel ports. Problem with that was if you accidentally stuck a mouse into the socket for keyboard, it won&rsquo;t work. And that&rsquo;s not it, once you successfully connect the device in the correct socket..you now need to install the proper driver for it.</p>
<p>If all went well, a quick reboot after the driver install and you&rsquo;ll have your working device ready to be used. Naturally, people would want something better and easy than this - &ldquo;One port to rule them all&rdquo;</p>
<p><img loading="lazy" src="https://media.giphy.com/media/3ov9jNkYm8QqxakeCQ/giphy.gif#center" alt="usb"  />
</p>
<p>And soon, the USB (Universal Serial Bus) was born as a replacement for the serial, parallel and PS/2 ports.</p>
<p>The USB specification went on to have several revisions, with the major ones being 2.0 in 2001, 3.0 in 2008, and the very latest spec (4.0) released in 2019. Let&rsquo;s take a look at how USBs work.</p>
<h3 id="usb-in-linux">USB in linux</h3>
<p>Linux kernel has a dedicated sub-system to handle USB, you can read everything about it in detail from <a href="http://www.linux-usb.org/USB-guide/book1.html">here</a> <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<p>Let me start with a terminal command to begin explaining things. There are utilities that can help you to identify the system hardware&hellip;you can find any device connected to your system, more specifically you can get the USBs attached with <code>lsusb</code> command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -&gt;   lsusb --tree --verbose
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/6p, 5000M
</span></span><span class="line"><span class="cl">    ID PP01:VV02 Linux Foundation 3.0 root hub
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">/:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/12p, 480M
</span></span><span class="line"><span class="cl">    ID PP01:VV01 Linux Foundation 2.0 root hub
</span></span><span class="line"><span class="cl">    |__ Port 1: Dev 2, If 1, Class=Human Interface Device, Driver=usbhid, 12M
</span></span><span class="line"><span class="cl">        ID 046d:c534 Logitech, Inc. Unifying Receiver
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 1: Dev 2, If 0, Class=Human Interface Device, Driver=usbhid, 12M
</span></span><span class="line"><span class="cl">        ID 046d:c534 Logitech, Inc. Unifying Receiver
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 5: Dev 3, If 1, Class=Wireless, Driver=btusb, 12M
</span></span><span class="line"><span class="cl">        ID PP03:VV03 Lite-On Technology Corp. Qualcomm Atheros QCA9377 Bluetooth
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 5: Dev 3, If 0, Class=Wireless, Driver=btusb, 12M
</span></span><span class="line"><span class="cl">        ID PP03:VV03 Lite-On Technology Corp. Qualcomm Atheros QCA9377 Bluetooth
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 7: Dev 4, If 0, Class=Video, Driver=uvcvideo, 480M
</span></span><span class="line"><span class="cl">        ID PP04:VV04 Realtek Semiconductor Corp.
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    |__ Port 7: Dev 4, If 1, Class=Video, Driver=uvcvideo, 480M
</span></span><span class="line"><span class="cl">        ID PP04:VV04 Realtek Semiconductor Corp.
</span></span></code></pre></div><p>This output shows a list of USB host controllers (Bus 02 and Bus 01) and the actual physical devices connected to them. At then end of each line, the negotiated speed limits are shown in Mbits/s. There are different negotiated speeds for different kinds of devices.</p>
<ul>
<li>Full speed mode (12 Mbits/s) is used for communicating with keyboard, mice and other similar devices.</li>
<li>Hi-Speed mode (480 Mbit/s) is used for communication with storage devices, webcams, and other devices which demand more bandwidth.</li>
<li>Ports with 5000 Mbits/s (5Gbits/s) is USB 3.0 port.</li>
</ul>
<p>As the output shows, my laptop has two USB host controllers. One of them is USB3(5000 Mbits/s) and another is USB2(480 Mbits/s). Both of them are managed by <code>xhci_hcd/6p</code> and <code>xhci_hcd/12p</code> driver respectively.</p>
<p>The device numbers (Dev 1, Dev2, &hellip;) are just numbers given by kernel to identify each device. If you eject and plug the same USB you might get another device number for it.</p>
<p>Now, let&rsquo;s focus on bus #02. This bus has 3 types/class of devices connected to it:-</p>
<ol>
<li>Human Interface Device (for my keyboard and mice)</li>
<li>Wireless (for Bluetooth adapter card)</li>
<li>Video (for video camera)</li>
</ol>
<p>Each USB device contains a vendor ID and a product ID which helps programs to detect the device and load proper driver for it. To clarify, companies pay to acquire Vendor IDs from the USB Implementers Forum. A complete list of vendor IDs with their respective product ID can be found <a href="http://www.linux-usb.org/usb.ids">here</a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></p>
<p>USB implementation is complex by design. There are tons of things that are abstracted from the regular users&hellip; but for a kernel developer working on USB device drivers, it is very useful to know how things work beyond the simple abstraction layer.</p>
<h4 id="more-usb-info">More USB info</h4>
<p>There is some information that <code>lsusb</code> do not provide, to make things easy for end user&hellip; We can use <code>usb-devices</code> command for that stuff.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480 MxCh=12
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=01 MxPS=64 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0002 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  5 Spd=12  MxCh= 0
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=046d ProdID=c534 Rev=29.01
</span></span><span class="line"><span class="cl">S:  Manufacturer=Logitech
</span></span><span class="line"><span class="cl">S:  Product=USB Receiver
</span></span><span class="line"><span class="cl">C:  #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr=98mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=8ms
</span></span><span class="line"><span class="cl">I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=82(I) Atr=03(Int.) MxPS=  20 Ivl=2ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=5000 MxCh= 6
</span></span><span class="line"><span class="cl">D:  Ver= 3.00 Cls=09(hub  ) Sub=00 Prot=03 MxPS= 9 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0003 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span></code></pre></div><p>This definitely gives more information than the previous command&hellip; but it is all alien looking at first glance. Slowly, you can see that few bits are not so alien after all. We can get the <code>Bus</code>, <code>Port</code>, <code>Spd</code>(Speed), <code>Cls</code>, <code>Vendor</code>, <code>ProdID</code> from the above output as we were able to via <code>lsusb</code> command.</p>
<p>Now it&rsquo;s time to understand more about USBs and get into the abstraction layer and dig deeper.</p>
<p>Typically, USB devices uses it&rsquo;s own file-system on linux, which is a dynamically generated file-system that complements the normal device node system, and can be used to write user space device drivers. <em>Just remember that this is not always the case.</em></p>
<p>Irrespective of what the case is, you can get above output (or something similar) using multitude of tools/utilities&hellip; you can just focus on understanding the output of such tools/utilities for now.</p>
<p>The information in the above output is arranged in groups and each group has 1 character that actually indicates the <code>type</code> of the information written in that specific line. See below table for complete list:</p>
<table>
<thead>
<tr>
<th>Character</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>T</td>
<td>Topology information</td>
</tr>
<tr>
<td>D</td>
<td>Device Descriptor information</td>
</tr>
<tr>
<td>P</td>
<td>Similar to D; Product info (fetched from device descriptor info</td>
</tr>
<tr>
<td>S</td>
<td>String info; returned by device</td>
</tr>
<tr>
<td>C</td>
<td>Configuration Descriptor information</td>
</tr>
<tr>
<td>I</td>
<td>Interface Descriptor information</td>
</tr>
<tr>
<td>E</td>
<td>Endpoint Descriptor information</td>
</tr>
</tbody>
</table>
<p>To get a complete understanding of the above, we need more knowledge around how USB system works inside linux kernel&hellip; Or more specifically, how usb endpoints, Interfaces and configurations all fit together in the topology.</p>
<p>According to USB protocol (standardized by USB Implementers Forum or USB-IF folks), USB is a <em>cable bus that supports data exchange between host computer and a wide range of simultaneously accessible peripherals.</em></p>
<p>USB protocol uses <em>star-topology</em> starting from a single node called &ldquo;<strong>host</strong>&rdquo; or &ldquo;<strong>root-hub</strong>&rdquo; with branches to other nodes. These nodes could be another level <strong>hub</strong> or simply a functional <strong>peripheral device</strong> (device used by user).</p>
<p>Because of this topology, USB device can never start sending data without being asked first&hellip; So it makes USB host controller in-charge of asking every USB device if it has any data to send. This allows for a very easy plug-n-play type of system, where devices can be easily configured by the host computer.</p>
<p>To remove the necessity of special drivers for different kind of devices, USB protocol specifications has defined some set of standards that any device of a specific type can follow. These types are called classes. Complete list of USB specified classes can be found <a href="https://www.usb.org/defined-class-codes">here</a> <sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup> with their class codes.</p>
<p>The idea of installing drivers for each and every USB device (manually) and then rebooting the system is very scary to me. This type of specification helps a lot. Still if there are some special devices which you need to work with, then you can install the special device driver for that and it&rsquo;ll still work. It means, you get support for most kinds of USB devices by default and you can still add more support without changing anything in the design.</p>
<p>Unfortunately, USB protocol specification is a multi-layer protocol specification which makes USBs a lot more complex and abstracted than we expected. Fortunately, most of this complexity is handled by <strong>USB core subsystem</strong> <sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup>.</p>
<p>Linux Device drivers (normally implemented as a loadable kernel modules) have to set up few thing before they can actually start functioning as USB devices. Few of these things involve setting up configurations, interfaces and endpoints; And then binding USB device to USB interface.</p>
<h4 id="endpoints">Endpoints</h4>
<p>Most basic form of USB communication is through <strong>endpoints</strong>. Endpoints are like pipes which carry data in a single direction (<em>a unidirectional pipe</em>) only, either from my laptop to device (<strong>OUT endpoint</strong>) or from the USB device to my laptop (<strong>IN endpoint</strong>).</p>
<p>Each endpoint has an associated <strong>DescrptorType</strong> to it which defines how the data is transmitted through that endpoint. There can be 4 different type of such descriptors:-</p>
<ol>
<li>
<p>CONTROL</p>
<ul>
<li>Normally used to configure, retrieve info, send info or get status reports about the device.</li>
<li>Every USB has a control endpoint with associated number = 0</li>
</ul>
</li>
<li>
<p>INTERRUPT</p>
<ul>
<li>transfers small amounts of data at fixed rate every time somebody asks device for data.</li>
<li>Usually used with keyboard and mice; anywhere we need to send a signal to device using buttons or similar methods.</li>
</ul>
</li>
<li>
<p>BULK</p>
<ul>
<li>Transfer larger amounts to data with no data loss.</li>
<li>Common for printer, storage and network devices.</li>
</ul>
</li>
<li>
<p>ISOCHRONOUS</p>
<ul>
<li>Also transfer large amounts of data, but data loss is possible.</li>
<li>Usually for real time devices or any constant streaming data.</li>
<li>Commonly found in audio and video devices.</li>
</ul>
</li>
</ol>
<p>In linux kernel, this is implemented using <code>struct usb_host_endpoint</code> <sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_host_endpoint</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_endpoint_descriptor</span>		<span class="n">desc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_ss_ep_comp_descriptor</span>	<span class="n">ss_ep_comp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_ssp_isoc_ep_comp_descriptor</span>	<span class="n">ssp_isoc_ep_comp</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">list_head</span>		<span class="n">urb_list</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">void</span>				<span class="o">*</span><span class="n">hcpriv</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">ep_device</span>		<span class="o">*</span><span class="n">ep_dev</span><span class="p">;</span>	<span class="cm">/* For sysfs info */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">extra</span><span class="p">;</span>   <span class="cm">/* Extra descriptors */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">extralen</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">enabled</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">streams</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>Each endpoint has their own descriptor attached to it, which is defined with <code>struct usb_endpoint_descriptor</code> <sup id="fnref:8"><a href="#fn:8" class="footnote-ref" role="doc-noteref">8</a></sup> . This structure contains the actual information provided by the device.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cm">/* USB_DT_ENDPOINT: Endpoint descriptor */</span>
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_endpoint_descriptor</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bLength</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bDescriptorType</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bEndpointAddress</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bmAttributes</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__le16</span> <span class="n">wMaxPacketSize</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bInterval</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* NOTE:  these two are _only_ in audio endpoints. */</span>
</span></span><span class="line"><span class="cl">	<span class="cm">/* use USB_DT_ENDPOINT*_SIZE in bLength, not sizeof. */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bRefresh</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>  <span class="n">bSynchAddress</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="nf">__attribute__</span> <span class="p">((</span><span class="n">packed</span><span class="p">));</span>
</span></span></code></pre></div><p>We can already see that there is a <code>bDescriptorType</code> variable in the <code>struct usb_endpoint_descriptor</code>. This is what defines the type of the endpoint - either <em>Control</em>, <em>Interrupt</em>, <em>Bulk</em> or <em>Isochronous</em>. Along with this, this field also contains the direction of the endpoint - either <em>IN</em> or <em>OUT</em>. The bit-masks <code>USB_DIR_OUT</code> and <code>USB_DIR_IN</code> can be placed against this field to determine the direction of the endpoint.</p>
<h4 id="interfaces">Interfaces</h4>
<p>Zero or more of such endpoints are bundled up into an <strong>Interface</strong>. These interfaces handle only one type of USB connection - such as mouse, touch-pad, keyboard, storage, video stream, etc..
USB interfaces may have alternate settings, which are different choices for parameters of the interface. In kernel, this is implemented as <code>struct usb_interface</code> <sup id="fnref:9"><a href="#fn:9" class="footnote-ref" role="doc-noteref">9</a></sup> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_interface</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="cm">/* array of alternate settings for this interface,
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * stored in no particular order */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_host_interface</span> <span class="o">*</span><span class="n">altsetting</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_host_interface</span> <span class="o">*</span><span class="n">cur_altsetting</span><span class="p">;</span>	<span class="cm">/* the currently
</span></span></span><span class="line"><span class="cl"><span class="cm">					 * active alternate setting */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="n">num_altsetting</span><span class="p">;</span>	<span class="cm">/* number of alternate settings */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">minor</span><span class="p">;</span>			<span class="cm">/* minor number this interface is
</span></span></span><span class="line"><span class="cl"><span class="cm">					 * bound to */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">...</span> <span class="n">snip</span> <span class="n">snip</span> <span class="p">...</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p><code>struct usb_interface</code> is the structure which USB core passes to USB drivers and what the USB driver is then in charge of. Each <code>usb_interface</code> can have multiple settings, but only one setting will be used at a point in time. These settings are defined in another struct <code>struct usb_host_interface</code>. <sup id="fnref:10"><a href="#fn:10" class="footnote-ref" role="doc-noteref">10</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_host_interface</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface_descriptor</span>	<span class="n">desc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">extralen</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">extra</span><span class="p">;</span>   <span class="cm">/* Extra descriptors */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* array of desc.bNumEndpoints endpoints associated with this
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * interface setting.  these will be in no particular order.
</span></span></span><span class="line"><span class="cl"><span class="cm">	 */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_host_endpoint</span> <span class="o">*</span><span class="n">endpoint</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">;</span>		<span class="cm">/* iInterface string, if present */</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p><code>struct usb_host_interface</code> contains a <code>struct usb_host_endpoint</code> which is the USB endpoint structure we discussed above.</p>
<h4 id="configurations">Configurations</h4>
<p>One or more USB interfaces are themselves bundled in a USB configuration. A USB device can have multiple configurations and might switch between them in order to change the state of the device.</p>
<p>In linux kernel, It is defined as <code>struct usb_host_config</code> <sup id="fnref:11"><a href="#fn:11" class="footnote-ref" role="doc-noteref">11</a></sup> .</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_host_config</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_config_descriptor</span>	<span class="n">desc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">;</span>		<span class="cm">/* iConfiguration string, if present */</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* List of any Interface Association Descriptors in this
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * configuration. */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface_assoc_descriptor</span> <span class="o">*</span><span class="n">intf_assoc</span><span class="p">[</span><span class="n">USB_MAXIADS</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* the interfaces associated with this configuration,
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * stored in no particular order */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface</span> <span class="o">*</span><span class="n">interface</span><span class="p">[</span><span class="n">USB_MAXINTERFACES</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Interface information available even when this is not the
</span></span></span><span class="line"><span class="cl"><span class="cm">	 * active configuration */</span>
</span></span><span class="line"><span class="cl">	<span class="k">struct</span> <span class="n">usb_interface_cache</span> <span class="o">*</span><span class="n">intf_cache</span><span class="p">[</span><span class="n">USB_MAXINTERFACES</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">extra</span><span class="p">;</span>   <span class="cm">/* Extra descriptors */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">extralen</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>Linux defines the USB configurations as above <code>struct usb_host_config</code> and the entire USB device as <code>struct usb_device</code> <sup id="fnref:12"><a href="#fn:12" class="footnote-ref" role="doc-noteref">12</a></sup></p>



<div class="goat svg-container ">
  
    <svg
      xmlns="http://www.w3.org/2000/svg"
      font-family="Menlo,Lucida Console,monospace"
      
        viewBox="0 0 1048 985"
      >
      <g transform='translate(8,16)'>
<text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='0' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='868' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='884' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='900' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='916' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='0' y='932' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='0' y='964' fill='currentColor' style='font-size:1em'>-</text>
<text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='8' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='16' y='964' fill='currentColor' style='font-size:1em'>R</text>
<text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='24' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='32' y='964' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='40' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='48' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='68' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='56' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='56' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='64' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='64' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='68' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='72' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='72' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='68' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='80' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='80' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='68' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='88' y='116' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='88' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='468' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='88' y='516' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='88' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='88' y='868' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='88' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='88' y='964' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='96' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='96' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='104' y='964' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='112' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='580' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='112' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='112' y='836' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='112' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='112' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='120' y='964' fill='currentColor' style='font-size:1em'>l</text>
<text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='548' fill='currentColor' style='font-size:1em'>C</text>
<text text-anchor='middle' x='128' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='128' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='548' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='136' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='136' y='964' fill='currentColor' style='font-size:1em'>y</text>
<text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='548' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='144' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='144' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='148' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='152' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='212' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='152' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='340' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='548' fill='currentColor' style='font-size:1em'>F</text>
<text text-anchor='middle' x='152' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='612' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='152' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='708' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='740' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='152' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='152' y='804' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='152' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='152' y='964' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='212' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='160' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='548' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='160' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='612' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='160' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='160' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>G</text>
<text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='548' fill='currentColor' style='font-size:1em'>G</text>
<text text-anchor='middle' x='168' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='612' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='168' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='168' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='176' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='176' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='372' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='548' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='184' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='612' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='184' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='676' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='772' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='184' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='184' y='964' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='212' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='612' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='192' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='192' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='192' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='200' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='276' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='372' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='612' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='200' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='676' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='772' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='200' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='200' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='208' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='276' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='612' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='208' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='676' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='772' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='208' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='208' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='276' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='372' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='216' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='676' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='772' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='216' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='216' y='964' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='276' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='372' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='676' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='772' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='224' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='224' y='964' fill='currentColor' style='font-size:1em'>p</text>
<text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='212' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='612' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='232' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='232' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='232' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='372' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='676' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='772' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='240' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='240' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='248' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='276' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='372' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='676' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='772' fill='currentColor' style='font-size:1em'>1</text>
<text text-anchor='middle' x='256' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='256' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='264' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='272' y='964' fill='currentColor' style='font-size:1em'>,</text>
<text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='280' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='288' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='296' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='304' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='312' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='244' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='340' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='708' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='740' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='320' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='320' y='804' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='320' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='320' y='964' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='328' y='964' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='336' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='344' y='964' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='352' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='360' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='436' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='360' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='360' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='360' y='836' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='360' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='360' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='368' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='376' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='384' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='392' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='392' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='580' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='392' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='392' y='836' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='392' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='392' y='964' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='400' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='408' y='964' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='416' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='424' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='212' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='432' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='340' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='612' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='432' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='708' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='740' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='432' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='432' y='804' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='432' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='432' y='964' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='212' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='440' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='612' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='440' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='440' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='448' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='612' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='448' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='448' y='964' fill='currentColor' style='font-size:1em'>g</text>
<text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='456' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='456' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='456' y='964' fill='currentColor' style='font-size:1em'>u</text>
<text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='464' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='372' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='612' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='464' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='676' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='772' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='464' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='464' y='964' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='212' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='472' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='612' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='472' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='472' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='472' y='964' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='480' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='276' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='372' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='612' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='480' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='676' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='772' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='480' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='480' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='488' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='276' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='612' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='488' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='676' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='772' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='488' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='488' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='496' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='496' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='276' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='372' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='496' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='676' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='772' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='496' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='496' y='964' fill='currentColor' style='font-size:1em'>o</text>
<text text-anchor='middle' x='504' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='276' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='372' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='676' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='772' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='504' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='504' y='964' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='512' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='212' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='512' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='612' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='512' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='512' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='512' y='964' fill='currentColor' style='font-size:1em'>s</text>
<text text-anchor='middle' x='520' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='372' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='676' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='772' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='520' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='520' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='528' y='964' fill='currentColor' style='font-size:1em'>w</text>
<text text-anchor='middle' x='536' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='276' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='372' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='676' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='772' fill='currentColor' style='font-size:1em'>2</text>
<text text-anchor='middle' x='536' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='536' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='544' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='544' y='964' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='552' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='552' y='964' fill='currentColor' style='font-size:1em'>h</text>
<text text-anchor='middle' x='560' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='560' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='568' y='964' fill='currentColor' style='font-size:1em'>d</text>
<text text-anchor='middle' x='576' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='576' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='584' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='584' y='964' fill='currentColor' style='font-size:1em'>v</text>
<text text-anchor='middle' x='592' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='592' y='964' fill='currentColor' style='font-size:1em'>i</text>
<text text-anchor='middle' x='600' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='244' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='708' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='740' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='600' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='600' y='804' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='600' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='600' y='964' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='608' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='608' y='964' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='616' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='616' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='624' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='632' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='640' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='436' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='640' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='640' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='640' y='836' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='640' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='640' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='648' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='656' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='664' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='180' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='672' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='436' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='672' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='580' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='672' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='672' y='836' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='672' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='672' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='680' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='688' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='212' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='696' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='612' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='696' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='696' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='212' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='704' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='612' fill='currentColor' style='font-size:1em'>n</text>
<text text-anchor='middle' x='704' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='704' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='212' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='712' y='244' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='308' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='404' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='612' fill='currentColor' style='font-size:1em'>t</text>
<text text-anchor='middle' x='712' y='644' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='708' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='740' fill='currentColor' style='font-size:1em'>┌</text>
<text text-anchor='middle' x='712' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='712' y='804' fill='currentColor' style='font-size:1em'>└</text>
<text text-anchor='middle' x='712' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='712' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='720' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='720' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='720' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='212' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='728' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='612' fill='currentColor' style='font-size:1em'>r</text>
<text text-anchor='middle' x='728' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='728' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='212' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='736' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='612' fill='currentColor' style='font-size:1em'>f</text>
<text text-anchor='middle' x='736' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='736' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='212' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='744' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='276' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='372' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='612' fill='currentColor' style='font-size:1em'>a</text>
<text text-anchor='middle' x='744' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='676' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='772' fill='currentColor' style='font-size:1em'>E</text>
<text text-anchor='middle' x='744' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='744' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='212' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='752' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='612' fill='currentColor' style='font-size:1em'>c</text>
<text text-anchor='middle' x='752' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='752' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='752' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='212' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='760' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='276' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='372' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='612' fill='currentColor' style='font-size:1em'>e</text>
<text text-anchor='middle' x='760' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='676' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='772' fill='currentColor' style='font-size:1em'>D</text>
<text text-anchor='middle' x='760' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='760' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='276' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='372' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='676' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='772' fill='currentColor' style='font-size:1em'>P</text>
<text text-anchor='middle' x='768' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='768' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='212' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='776' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='276' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='372' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='612' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='776' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='676' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='772' fill='currentColor' style='font-size:1em'>O</text>
<text text-anchor='middle' x='776' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='776' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='276' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='372' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='676' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='772' fill='currentColor' style='font-size:1em'>I</text>
<text text-anchor='middle' x='784' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='784' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='276' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='372' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='676' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='772' fill='currentColor' style='font-size:1em'>N</text>
<text text-anchor='middle' x='792' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='792' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='276' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='372' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='676' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='772' fill='currentColor' style='font-size:1em'>T</text>
<text text-anchor='middle' x='800' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='800' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='808' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='276' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='372' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='676' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='772' fill='currentColor' style='font-size:1em'>3</text>
<text text-anchor='middle' x='816' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='816' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='824' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='832' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='840' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='848' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='856' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='864' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='244' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='308' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='340' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='404' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='644' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='708' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='740' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='804' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='872' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='244' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='308' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='340' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='404' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='644' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='708' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='740' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='880' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='880' y='804' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='880' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='880' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='888' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='896' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='904' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='180' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='436' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='580' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='836' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='912' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='180' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='920' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='436' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='920' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='580' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='920' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='920' y='836' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='920' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='920' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='116' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='468' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='516' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='868' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='928' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='936' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='936' y='116' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='936' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='468' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='936' y='516' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='936' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='936' y='868' fill='currentColor' style='font-size:1em'>┘</text>
<text text-anchor='middle' x='936' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='944' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='944' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='952' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='952' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='960' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='960' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='968' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='968' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='976' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='976' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='984' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='984' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='992' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='992' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1000' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1000' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1008' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1008' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1016' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1016' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1024' y='20' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1024' y='932' fill='currentColor' style='font-size:1em'>─</text>
<text text-anchor='middle' x='1032' y='20' fill='currentColor' style='font-size:1em'>┐</text>
<text text-anchor='middle' x='1032' y='36' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='52' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='68' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='84' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='100' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='116' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='132' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='148' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='164' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='180' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='196' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='212' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='228' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='244' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='260' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='276' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='292' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='308' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='324' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='340' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='356' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='372' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='388' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='404' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='420' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='436' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='452' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='468' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='484' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='500' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='516' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='532' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='548' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='564' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='580' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='596' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='612' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='628' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='644' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='660' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='676' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='692' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='708' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='724' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='740' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='756' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='772' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='788' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='804' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='820' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='836' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='852' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='868' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='884' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='900' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='916' fill='currentColor' style='font-size:1em'>│</text>
<text text-anchor='middle' x='1032' y='932' fill='currentColor' style='font-size:1em'>┘</text>
</g>

    </svg>
  
</div>
<p>So to summarize,</p>
<ul>
<li>Devices usually have 1 or more configurations.</li>
<li>Configs have 1 or more interfaces.</li>
<li>Interfaces have 1 or more settings.</li>
<li>Interfaces have 0 or more endpoints.</li>
</ul>
<h4 id="understanding-output-of-usb-devices">Understanding output of usb-devices</h4>
<p>Looking back at the output of <code>usb-devices</code> command, with the newly gained knowledge, we can now understand few more things from the command output.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND --&gt;    usb-devices
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=480 MxCh=12
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=01 MxPS=64 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0002 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  5 Spd=12  MxCh= 0
</span></span><span class="line"><span class="cl">D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=046d ProdID=c534 Rev=29.01
</span></span><span class="line"><span class="cl">S:  Manufacturer=Logitech
</span></span><span class="line"><span class="cl">S:  Product=USB Receiver
</span></span><span class="line"><span class="cl">C:  #Ifs= 2 Cfg#= 1 Atr=a0 MxPwr=98mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=8ms
</span></span><span class="line"><span class="cl">I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
</span></span><span class="line"><span class="cl">E:  Ad=82(I) Atr=03(Int.) MxPS=  20 Ivl=2ms
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">T:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=5000 MxCh= 6
</span></span><span class="line"><span class="cl">D:  Ver= 3.00 Cls=09(hub  ) Sub=00 Prot=03 MxPS= 9 #Cfgs=  1
</span></span><span class="line"><span class="cl">P:  Vendor=1d6b ProdID=0003 Rev=05.18
</span></span><span class="line"><span class="cl">S:  Manufacturer=Linux 5.18.3-arch1-1 xhci-hcd
</span></span><span class="line"><span class="cl">S:  Product=xHCI Host Controller
</span></span><span class="line"><span class="cl">S:  SerialNumber=0000:00:14.0
</span></span><span class="line"><span class="cl">C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=0mA
</span></span><span class="line"><span class="cl">I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
</span></span><span class="line"><span class="cl">E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=256ms
</span></span></code></pre></div><p>We already know that the output is grouped and what these characters at the most-left side mean. We now just need to map what rest of the things mean and how they relate to all what we have just learned.</p>
<p>So the first line in each group starts with <code>T</code>, which indicates the information in that line is related to topology of the device. <code>Bus</code> indicates what physical bus that device is connected to. <code>Lev</code> indicates the level of the node in the complete topology of that bus. Level 00 means it is the root hub. Next, level 01 will be any device connected to the main root hub (00) and all the devices connected to 01 hubs will be treated as level 02 devices and so on. <code>Spd</code> indicates the negotiated speed of that node. <code>MxCh</code> indicates how many devices can be connected to this device, and is 00 for anything except a hub.</p>
<p>Next line, starting with <code>D</code>, this shows the device information like <code>Ver</code> for USB version (mostly, 2 or 3 for now), <code>Cls</code> (class) of the device node. If this is marked as 00, then the interface should be read for the device class information. <code>Sub</code> indicates the sub-class of the node. <code>#Cfgs</code> indicate how many configurations this device has.</p>
<p>Next lines with <code>P</code> and <code>S</code> are usually the Vendor and Product IDs. Useful information if we want to write a driver for specific kinds of devices.</p>
<p>Then the remaining lines, starting with <code>C</code>, <code>I</code> and <code>E</code>, are the Configuration info, Interface info and the Endpoint info respectively. <code>#Ifs</code> tells about the total number of interfaces available for that device. <code>Cfg#</code> indicates the total number of available configurations for the device. <code>Atr</code> stores a hexadecimal value to indicate if the device is bus-powered(0x80), self-powered(0x40) or remote wake-up capable(0x20). <code>#Eps</code> indicates the endpoints for this alternate endpoint.</p>
<h3 id="usb-driver---code-walk-through">USB driver - code walk-through</h3>
<p>At this point, we roughly know what USB is comprised of and how it works inside linux kernel. Let&rsquo;s dig in the code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/usb.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/hid.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_connect</span><span class="p">(</span><span class="k">struct</span> <span class="n">usb_interface</span> <span class="o">*</span><span class="n">interface</span><span class="p">,</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">usb_device_id</span> <span class="o">*</span><span class="n">id</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_alert</span><span class="p">(</span><span class="s">&#34;USB plugged in.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_disconnect</span><span class="p">(</span><span class="k">struct</span> <span class="n">usb_interface</span> <span class="o">*</span><span class="n">interface</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_alert</span><span class="p">(</span><span class="s">&#34;USB disconnected.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">usb_device_id</span> <span class="n">id_table</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nf">USB_INTERFACE_INFO</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">			<span class="n">USB_INTERFACE_CLASS_HID</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">	 		<span class="n">USB_INTERFACE_SUBCLASS_BOOT</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	  		<span class="n">USB_INTERFACE_PROTOCOL_KEYBOARD</span>
</span></span><span class="line"><span class="cl">		<span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nf">USB_DEVICE</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="mh">0x058f</span><span class="p">,</span>  <span class="c1">// Vendor Id
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="mh">0x6387</span>   <span class="c1">// Product Id
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="p">{},</span>  <span class="c1">// End node - always null
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DEVICE_TABLE</span><span class="p">(</span><span class="n">usb</span><span class="p">,</span> <span class="n">id_table</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="k">struct</span> <span class="n">usb_driver</span> <span class="n">driver</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;ayedaemonUSB&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">probe</span> <span class="o">=</span> <span class="n">hello_connect</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">disconnect</span> <span class="o">=</span> <span class="n">hello_disconnect</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">.</span><span class="n">id_table</span> <span class="o">=</span> <span class="n">id_table</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="n">__init</span> <span class="nf">hello_usb</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Hello from ayedaemonUSB.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nf">usb_register</span><span class="p">(</span><span class="o">&amp;</span><span class="n">driver</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="n">__exit</span> <span class="nf">bye_usb</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Bye from ayedaemonUSB.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nf">usb_deregister</span><span class="p">(</span><span class="o">&amp;</span><span class="n">driver</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_usb</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">bye_usb</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task5&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>You should be familiar with majority of the above code. This is how a simple linux module is written.</p>
<ul>
<li>First line is always the SPDX license. Read more <a href="https://www.kernel.org/doc/html/latest/process/license-rules.html">here</a></li>
<li>Then some imports from other available header files.</li>
<li>init (<code>hello_usb</code>) and exit (<code>bye_usb</code>) as entry and exit functions for the module.</li>
<li>Macro calls for registering and unregistering both init and exit functions. Along with some module metadata macro calls.</li>
</ul>
<p>Apart from this, we have some more code segment, which we are going to talk about in brief. At first, We need to create a <code>struct usb_driver</code> so that it can hold our driver information and the <code>id_table</code>. This <code>id_table</code> is very important for all the USB device drivers, as this list tells about the devices this driver can support. There are many macros that can help to define elements for this list. Each element is <code>struct  usb_device_id</code> <sup id="fnref:13"><a href="#fn:13" class="footnote-ref" role="doc-noteref">13</a></sup>, and all the macros help to create this struct using only few values such as device class, product and vendor ids, etc.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">struct</span> <span class="n">usb_device_id</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="cm">/* which fields to match against? */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">match_flags</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for product specific matches; range is inclusive */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">idVendor</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">idProduct</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">bcdDevice_lo</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u16</span>		<span class="n">bcdDevice_hi</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for device class matches */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bDeviceClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bDeviceSubClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bDeviceProtocol</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for interface class matches */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceSubClass</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceProtocol</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* Used for vendor-specific interface matches */</span>
</span></span><span class="line"><span class="cl">	<span class="n">__u8</span>		<span class="n">bInterfaceNumber</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="cm">/* not matched against */</span>
</span></span><span class="line"><span class="cl">	<span class="kt">kernel_ulong_t</span>	<span class="n">driver_info</span>
</span></span><span class="line"><span class="cl">		<span class="nf">__attribute__</span><span class="p">((</span><span class="nf">aligned</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">kernel_ulong_t</span><span class="p">))));</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>So when we load this module into a running kernel:-</p>
<ul>
<li>the <code>hello_usb</code> function will be executed and this in-turn will execute the <code>usb_register</code> function.</li>
<li><code>usb_register</code> function will register the device driver we created with <code>struct usb_driver</code>.</li>
<li>This <code>usb_driver</code> will need few parameters like the name of the driver, functions to be called when this driver is loaded/unloaded by usb core. USB core will load this driver automatically, using hot-plug feature, when any usb device (which is supported by this driver) is plugged in.</li>
<li>Along with other fields, <code>usb_driver</code> also contains a field that stores a list of all the devices this driver supports. This is used by USB core to know when to bind this driver with the usb device.</li>
<li><code>MODULE_DEVICE_TABLE</code> is the macro that exports the <code>id_table</code> to the usb core</li>
</ul>
<h4 id="final-steps">Final steps</h4>
<p>Now,all we need is a <code>Makefile</code> to make everything a bit automated and we are good to compile and load our USB module into the running kernel.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-makefile" data-lang="makefile"><span class="line"><span class="cl"><span class="nv">CFLAGS_helloworld.o</span> <span class="o">=</span> -DDEBUG
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">obj-m</span> <span class="o">+=</span> HelloWorld.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">KDIR</span> <span class="o">?=</span> /lib/modules/<span class="k">$(</span>shell uname -r<span class="k">)</span>/build
</span></span><span class="line"><span class="cl"><span class="nv">PWD</span> <span class="o">:=</span> <span class="k">$(</span>shell <span class="nb">pwd</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">default</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> modules
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span> <span class="n">uninstall</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> clean
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">install</span><span class="o">:</span> <span class="n">default</span>
</span></span><span class="line"><span class="cl">	sudo insmod HelloWorld.ko
</span></span><span class="line"><span class="cl">	lsmod <span class="p">|</span> grep HelloWorld
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">uninstall</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	- lsmod <span class="p">|</span> grep HelloWorld
</span></span><span class="line"><span class="cl">	- sudo rmmod HelloWorld.ko
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">reload</span><span class="o">:</span> <span class="n">uninstall</span> <span class="n">clean</span> <span class="n">default</span> <span class="n">install</span>
</span></span><span class="line"><span class="cl">	@echo -e <span class="s2">&#34;\nDONE&#34;</span>
</span></span></code></pre></div><p>Just by doing <code>make install</code> we can compile and load the module into the kernel. There are multiple ways to monitor changes in kernel, for this case, I&rsquo;ll use <code>journalctl</code>, <code>udevadm</code> and <code>lsusb</code> commands to check the module messages, USB changes, and associated driver information for my device.</p>
<p>To begin with anything, we need to compile and install the module and check the messages from kernel.</p>
<p>Compile and load:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">make install
</span></span></code></pre></div><p>Check kernel logs:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">### COMMAND:-  udevadm monitor --kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">KERNEL[1736.016830] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1736.016864] add      /bus/usb/drivers/ayedaemonUSBdriver (drivers)
</span></span><span class="line"><span class="cl">KERNEL[1736.016888] add      /module/HelloWorld (module)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  journalctl --grep=usb -f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Jun 29 11:11:41 FatSaturn kernel: usbcore: registered new interface driver ayedaemonUSBdriver
</span></span><span class="line"><span class="cl">Jun 29 11:11:41 FatSaturn kernel: USB driver registered this time
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  lsmod | grep HelloWorld
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">HelloWorld             20480  0
</span></span></code></pre></div><p>The above logs helps us to identify that our module was loaded to the kernel successfully. Now time to insert the USB stick (pen-drive).</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">### COMMAND:-  udevadm monitor --kernel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">KERNEL[1981.372348] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1981.377254] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1981.378079] add      /devices/virtual/workqueue/scsi_tmf_3 (workqueue)
</span></span><span class="line"><span class="cl">KERNEL[1981.379821] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3 (scsi)
</span></span><span class="line"><span class="cl">KERNEL[1981.379930] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/scsi_host/host3 (scsi_host)
</span></span><span class="line"><span class="cl">KERNEL[1981.380070] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1981.380229] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3 (usb)
</span></span><span class="line"><span class="cl">KERNEL[1982.383440] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0 (scsi)
</span></span><span class="line"><span class="cl">KERNEL[1982.383621] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0 (scsi)
</span></span><span class="line"><span class="cl">KERNEL[1982.383811] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/scsi_device/3:0:0:0 (scsi_device)
</span></span><span class="line"><span class="cl">KERNEL[1982.384405] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/scsi_disk/3:0:0:0 (scsi_disk)
</span></span><span class="line"><span class="cl">KERNEL[1982.385312] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/bsg/3:0:0:0 (bsg)
</span></span><span class="line"><span class="cl">KERNEL[1982.389641] add      /devices/virtual/bdi/8:32 (bdi)
</span></span><span class="line"><span class="cl">KERNEL[1982.408429] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/block/sdc (block)
</span></span><span class="line"><span class="cl">KERNEL[1982.408491] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/block/sdc/sdc1 (block)
</span></span><span class="line"><span class="cl">KERNEL[1982.408532] add      /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0/block/sdc/sdc2 (block)
</span></span><span class="line"><span class="cl">KERNEL[1982.410675] bind     /devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3/1-4.3:1.0/host3/target3:0:0/3:0:0:0 (scsi)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  journalctl --grep=usb -f
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Jun 29 11:15:46 FatSaturn kernel: usb 1-4.3: new high-speed USB device number 12 using xhci_hcd
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: New USB device found, idVendor=058f, idProduct=6387, bcdDevice= 1.00
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: Product: Mass Storage
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: Manufacturer: Generic
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb 1-4.3: SerialNumber: EFEC1147
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: usb-storage 1-4.3:1.0: USB Mass Storage device detected
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn kernel: scsi host3: usb-storage 1-4.3:1.0
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn mtp-probe[8926]: checking bus 1, device 12: &#34;/sys/devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3&#34;
</span></span><span class="line"><span class="cl">Jun 29 11:15:47 FatSaturn mtp-probe[8939]: checking bus 1, device 12: &#34;/sys/devices/pci0000:00/0000:00:14.0/usb1/1-4/1-4.3&#34;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">### COMMAND:-  lsusb 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Port 3: Dev 13, If 0, Class=Mass Storage, Driver=usb-storage, 480M
</span></span></code></pre></div><p>Above output clearly shows that the pen-drive was detected but it was assigned to another driver instead of my custom driver. So we need to unbind my device with currently associated device driver and then bind it with our device driver. It is actually very easy to do in newer kernels (anything&gt;=2.6.13-rc3). There are many resources for this topic on the Internet, but I found this one <a href="https://lwn.net/Articles/143397/">short and precise article on lwn.net</a>. TL-DR; I just had to invoke 2 commands from a terminal.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo /bin/bash -c <span class="s1">&#39;echo 1-4.3:1.0 &gt; /sys/bus/usb/drivers/usb-storage/unbind&#39;</span>
</span></span><span class="line"><span class="cl">sudo /bin/bash -c <span class="s1">&#39;echo 1-4.3:1.0l &gt; /sys/bus/usb/drivers/ayedaemonUSBdriver/bind&#39;</span>
</span></span></code></pre></div><p>These are the files exposed by kernel to handle dynamic binding and unbinding from user-space. The number <code>1-4.3:1.0</code> the endpoint location specifier &hellip; I mean this is a specifier that can be used to locate the actual endpoint for the USB that needs this driver.</p>
<p>If we break it down it&rsquo;ll be much more understandable.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">##  1-4.3:1.0
</span></span><span class="line"><span class="cl">1: root_hub
</span></span><span class="line"><span class="cl">4: My USB hub (usb hub extension connected to laptop usb port)
</span></span><span class="line"><span class="cl">3: USB device connected to that hub
</span></span><span class="line"><span class="cl">1: Config number
</span></span><span class="line"><span class="cl">0: Interface number
</span></span></code></pre></div><p>To summarize, the device naming scheme is somewhat like this -&gt; <code>root_hub-hub_port.internal_port:config.interface</code>. So If I directly plug my pen-drive into my laptop USB port, it should give me something like <code>1-*:1.0</code>.. because I know I&rsquo;m plugging it to bus 1 (It&rsquo;s my laptop, I know it), and then the <code>config.interface</code> part will be same as the old one. Interesting thing to note here is that since there is no external hub connected this time, so the <code>hub_port.internal_port</code> will just be <code>hub_port</code>. So I&rsquo;m expecting only 1 value in that place. Hence, <code>1-*:1.0</code> and in the logs, I got <code>1-2:1.0</code>.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/Yq7ioTdDP5GzLSrqOw/giphy.gif#center" alt=""  />
</p>
<p>In this era of laziness and automation, we will want to do some automation for binding/unbinding. What we would need is a program that keeps on listening on the device events and help us to run our commands when a particular event occurs&hellip;. <code>udev</code> can help us do that!!! All we have to do is write a simple rule and provide it to <code>udev</code> and the rest will be taken care of.</p>
<p>To create a udev rule, paste the below text in the following file - <code>/etc/udev/rules.d/99-custom-usb.rules</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ACTION==&#34;bind&#34;, SUBSYSTEMS==&#34;usb&#34;, \
</span></span><span class="line"><span class="cl">OPTIONS=&#34;log_level=debug&#34;, \
</span></span><span class="line"><span class="cl">ATTRS{idVendor}==&#34;058f&#34;, ATTRS{idProduct}==&#34;6387&#34;, \
</span></span><span class="line"><span class="cl">RUN+=&#34;/bin/bash -c &#39;echo $kernel &gt; /sys/bus/usb/drivers/usb-storage/unbind&#39;&#34;, \
</span></span><span class="line"><span class="cl">RUN+=&#34;/bin/bash -c &#39;echo $kernel &gt; /sys/bus/usb/drivers/ayedaemonUSBdriver/bind&#39;&#34;
</span></span></code></pre></div><p>The above rule matches the USB Attributes and triggers the <code>RUN</code> commands accordingly. If you want this rule to be more generic, remove the <code>ATTRS{idVendor}</code> and <code>ATTRS{idProduct}</code>. <a href="http://reactivated.net/writing_udev_rules.html">Read here</a> to learn more about writing udev rules.</p>
<p>If you change the C code and reload the module and remove the <code>ATTRS</code> selector from the udev rule, you can get a system where any <code>usb-storage</code> kind of devices will be automatically binded with <code>Driver=ayedaemonUSBdriver</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Port 3: Dev 18, If 0, Class=Mass Storage, Driver=ayedaemonUSBdriver, 480M
</span></span><span class="line"><span class="cl">ID 058f:6387 Alcor Micro Corp. Flash Drive
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Port 1: Dev 17, If 0, Class=Mass Storage, Driver=ayedaemonUSBdriver, 480M
</span></span><span class="line"><span class="cl">ID 0930:6545 Toshiba Corp. Kingston DataTraveler 102/2.0 / HEMA Flash Drive 2 GB / PNY Attache 4GB Stick
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>Writing a Linux USB device driver is not a difficult task if one understands how USB subsystem works behind the abstractions. This article just touches the surface of USB drivers and there is still a lot more to look out for&hellip; like USB urbs. If you want to continue learning more about USB drivers, most common recommendation on internet is - <a href="https://www.makelinux.net/ldd3/?u=chp-4-sect-2.shtml"><em>Linux Device Drivers: Chapter 13. USB Drivers</em></a>. This book is somewhat dated, but the content is still relevant.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://en.wikipedia.org/wiki/USB">https://en.wikipedia.org/wiki/USB</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.usb.org/">https://www.usb.org/</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="http://www.linux-usb.org/USB-guide/book1.html">http://www.linux-usb.org/USB-guide/book1.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="http://www.linux-usb.org/usb.ids">http://www.linux-usb.org/usb.ids</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p><a href="https://www.usb.org/defined-class-codes">https://www.usb.org/defined-class-codes</a>&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p><a href="https://www.kernel.org/doc/html/latest/driver-api/usb/index.html">https://www.kernel.org/doc/html/latest/driver-api/usb/index.html</a>&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L67">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L67</a>&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:8">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/usb/ch9.h#L407">https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/usb/ch9.h#L407</a>&#160;<a href="#fnref:8" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:9">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L232">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L232</a>&#160;<a href="#fnref:9" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:10">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L82">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L82</a>&#160;<a href="#fnref:10" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:11">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L374">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L374</a>&#160;<a href="#fnref:11" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:12">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L626">https://elixir.bootlin.com/linux/latest/source/include/linux/usb.h#L626</a>&#160;<a href="#fnref:12" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:13">
<p><a href="https://elixir.bootlin.com/linux/latest/source/include/linux/mod_devicetable.h#L127">https://elixir.bootlin.com/linux/latest/source/include/linux/mod_devicetable.h#L127</a>&#160;<a href="#fnref:13" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Eudyptula Task4</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-4/</link>
      <pubDate>Fri, 17 Jun 2022 16:14:27 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-4/</guid>
      <description>Task 4 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 04 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Wonderful job in making it this far, I hope you have been having fun.
</span></span><span class="line"><span class="cl">Oh, you&#39;re getting bored, just booting and installing kernels?  Well,
</span></span><span class="line"><span class="cl">time for some pedantic things to make you feel that those kernel builds
</span></span><span class="line"><span class="cl">are actually fun!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Part of the job of being a kernel developer is recognizing the proper
</span></span><span class="line"><span class="cl">Linux kernel coding style.  The full description of this coding style
</span></span><span class="line"><span class="cl">can be found in the kernel itself, in the Documentation/CodingStyle
</span></span><span class="line"><span class="cl">file.  I&#39;d recommend going and reading that right now, it&#39;s pretty
</span></span><span class="line"><span class="cl">simple stuff, and something that you are going to need to know and
</span></span><span class="line"><span class="cl">understand.  There is also a tool in the kernel source tree in the
</span></span><span class="line"><span class="cl">scripts/ directory called checkpatch.pl that can be used to test for
</span></span><span class="line"><span class="cl">adhering to the coding style rules, as kernel programmers are lazy and
</span></span><span class="line"><span class="cl">prefer to let scripts do their work for them...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">And why a coding standard at all?  That&#39;s because of your brain (yes,
</span></span><span class="line"><span class="cl">yours, not mine, remember, I&#39;m just some dumb shell scripts).  Once your
</span></span><span class="line"><span class="cl">brain learns the patterns, the information contained really starts to
</span></span><span class="line"><span class="cl">sink in better.  So it&#39;s important that everyone follow the same
</span></span><span class="line"><span class="cl">standard so that the patterns become consistent.  In other words, you
</span></span><span class="line"><span class="cl">want to make it really easy for other people to find the bugs in your
</span></span><span class="line"><span class="cl">code, and not be confused and distracted by the fact that you happen to
</span></span><span class="line"><span class="cl">prefer 5 spaces instead of tabs for indentation.  Of course you would
</span></span><span class="line"><span class="cl">never prefer such a thing, I&#39;d never accuse you of that, it was just an
</span></span><span class="line"><span class="cl">example, please forgive my impertinence!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Anyway, the tasks for this round all deal with the Linux kernel coding
</span></span><span class="line"><span class="cl">style.  Attached to this message are two kernel modules that do not
</span></span><span class="line"><span class="cl">follow the proper Linux kernel coding style rules.  Please fix both of
</span></span><span class="line"><span class="cl">them up, and send it back to me in such a way that does follow the
</span></span><span class="line"><span class="cl">rules.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">What, you recognize one of these modules?  Imagine that, perhaps I was
</span></span><span class="line"><span class="cl">right to accuse you of the using a &#34;wrong&#34; coding style :)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Yes, the logic in the second module is crazy, and probably wrong, but
</span></span><span class="line"><span class="cl">don&#39;t focus on that, just look at the patterns here, and fix up the
</span></span><span class="line"><span class="cl">coding style, do not remove lines of code.
</span></span></code></pre></div><h3 id="coding-styles----what-and-why">Coding styles &ndash; what and why?</h3>
<p>We all have different styles and preferences in everything in life. Even while writing code, everyone loves to imprint their personalities in the code that brings originality and a sense of ownership and responsibility.</p>
<p>Coding styles are set of rules or suggestions to write code. The idea behind developing these sets of rules for coding style is very simple - to make code readable by everybody or just to make your brain habitual to a specific style so that you can easily understand the code writen by another person.</p>
<p>The code style depends mainly on the language, few decisions are made depending on the context, and if you switch from one to another. Some of these decisions might be:</p>
<ul>
<li>Comments (how and when you use them)</li>
<li>Tabs or spaces for indentation (the number of spaces is quite important)</li>
<li>Appropriate naming of variables and functions.</li>
<li>Code grouping an organization,</li>
<li>Patterns to be used or avoided.</li>
</ul>
<p><strong>But what happens when a whole team is working on one project?</strong></p>
<p>Everyone develops a certain style and for individual work, this is great&hellip; but when you need more people on your team, understanding different styles could become a problem to everyone.</p>
<p>This has been on my mind a lot lately. For instance, during a code review, I often question whether I should bring specific ways of coding into the discussion or not. How does it affect the application; Is it readable, is it easy to maintain?</p>
<p>Or perhaps I should leave it alone, thinking to myself — <em>Don’t be picky, it’s just their preference, it’s not a matter of right or wrong.</em></p>
<p>Linuc kernel developers has done an amazing job to build a coding style that is followed by mostly everybody who is getting involved in kernel development process.</p>
<h4 id="how-bad-can-it-go">How bad can it go?</h4>
<p>If we do not have a properly defined coding style, we might end up with mostly working but very unreadable code&hellip;. This can be very unhealty for a mere human being.</p>
<p>Let&rsquo;s take a simple example (In C programming language) to understand the need of coding styles.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;This is a very long line with some garbage text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar neque laoreet suspendisse interdum consectetur libero. Turpis nunc eget lorem dolor sed viverra ipsum nunc. Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus. Turpis egestas sed tempus urna et. Ornare lectus sit amet est placerat. Quam elementum pulvinar etiam non quam. Consequat semper viverra nam libero. Nisl condimentum id venenatis a condimentum vitae. Vitae proin sagittis nisl rhoncus mattis rhoncus urna neque viverra.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Above code is very simple in terms of functionality - It prints a huge paragraph. The same code can also be written in the below style&hellip;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> 
</span></span><span class="line"><span class="cl"><span class="nf">main</span>
</span></span><span class="line"><span class="cl"><span class="p">()</span> 
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="nf">printf</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="s">&#34;This is a very long line with some garbage text. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar neque laoreet suspendisse interdum consectetur libero. Turpis nunc eget lorem dolor sed viverra ipsum nunc. Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus. Turpis egestas sed tempus urna et. Ornare lectus sit amet est placerat. Quam elementum pulvinar etiam non quam. Consequat semper viverra nam libero. Nisl condimentum id venenatis a condimentum vitae. Vitae proin sagittis nisl rhoncus mattis rhoncus urna neque viverra.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">;</span><span class="k">return</span> 
</span></span><span class="line"><span class="cl"><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>I know nobody will ever write code in this style..but it is still a possible option to write a working code.</p>
<p>Or you might be familiar with the below code&hellip;. Spoiler:- This prints a rotating donut. Read <a href="https://www.a1k0n.net/2011/07/20/donut-math.html">this amazing article</a> to understand the maths behind it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl">             <span class="n">k</span><span class="p">;</span><span class="kt">double</span> <span class="nf">sin</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">         <span class="p">,</span><span class="nf">cos</span><span class="p">();</span><span class="nf">main</span><span class="p">(){</span><span class="kt">float</span> <span class="n">A</span><span class="o">=</span>
</span></span><span class="line"><span class="cl">       <span class="mi">0</span><span class="p">,</span><span class="n">B</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">z</span><span class="p">[</span><span class="mi">1760</span><span class="p">];</span><span class="kt">char</span> <span class="n">b</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1760</span><span class="p">];</span><span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\x1b</span><span class="s">[2J&#34;</span><span class="p">);</span><span class="k">for</span><span class="p">(;;</span>
</span></span><span class="line"><span class="cl">  <span class="p">){</span><span class="nf">memset</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">1760</span><span class="p">);</span><span class="nf">memset</span><span class="p">(</span><span class="n">z</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">7040</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mf">6.28</span><span class="o">&gt;</span><span class="n">j</span><span class="p">;</span><span class="n">j</span><span class="o">+=</span><span class="mf">0.07</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mf">6.28</span>
</span></span><span class="line"><span class="cl"> <span class="o">&gt;</span><span class="n">i</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="mf">0.02</span><span class="p">){</span><span class="kt">float</span> <span class="n">c</span><span class="o">=</span><span class="nf">sin</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">d</span><span class="o">=</span><span class="nf">cos</span><span class="p">(</span><span class="n">j</span><span class="p">),</span><span class="n">e</span><span class="o">=</span>
</span></span><span class="line"><span class="cl"> <span class="nf">sin</span><span class="p">(</span><span class="n">A</span><span class="p">),</span><span class="n">f</span><span class="o">=</span><span class="nf">sin</span><span class="p">(</span><span class="n">j</span><span class="p">),</span><span class="n">g</span><span class="o">=</span><span class="nf">cos</span><span class="p">(</span><span class="n">A</span><span class="p">),</span><span class="n">h</span><span class="o">=</span><span class="n">d</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="n">D</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="n">c</span><span class="o">*</span>
</span></span><span class="line"><span class="cl"> <span class="n">h</span><span class="o">*</span><span class="n">e</span><span class="o">+</span><span class="n">f</span><span class="o">*</span><span class="n">g</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="n">l</span><span class="o">=</span><span class="nf">cos</span>      <span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">m</span><span class="o">=</span><span class="nf">cos</span><span class="p">(</span><span class="n">B</span><span class="p">),</span><span class="n">n</span><span class="o">=</span><span class="n">s</span>\
</span></span><span class="line"><span class="cl"><span class="nf">in</span><span class="p">(</span><span class="n">B</span><span class="p">),</span><span class="n">t</span><span class="o">=</span><span class="n">c</span><span class="o">*</span><span class="n">h</span><span class="o">*</span><span class="n">g</span><span class="o">-</span><span class="n">f</span><span class="o">*</span>        <span class="n">e</span><span class="p">;</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">40</span><span class="o">+</span><span class="mi">30</span><span class="o">*</span><span class="n">D</span><span class="o">*</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="n">l</span><span class="o">*</span><span class="n">h</span><span class="o">*</span><span class="n">m</span><span class="o">-</span><span class="n">t</span><span class="o">*</span><span class="n">n</span><span class="p">),</span><span class="n">y</span><span class="o">=</span>            <span class="mi">12</span><span class="o">+</span><span class="mi">15</span><span class="o">*</span><span class="n">D</span><span class="o">*</span><span class="p">(</span><span class="n">l</span><span class="o">*</span><span class="n">h</span><span class="o">*</span><span class="n">n</span>
</span></span><span class="line"><span class="cl"><span class="o">+</span><span class="n">t</span><span class="o">*</span><span class="n">m</span><span class="p">),</span><span class="n">o</span><span class="o">=</span><span class="n">x</span><span class="o">+</span><span class="mi">80</span><span class="o">*</span><span class="n">y</span><span class="p">,</span>          <span class="n">N</span><span class="o">=</span><span class="mi">8</span><span class="o">*</span><span class="p">((</span><span class="n">f</span><span class="o">*</span><span class="n">e</span><span class="o">-</span><span class="n">c</span><span class="o">*</span><span class="n">d</span><span class="o">*</span><span class="n">g</span>
</span></span><span class="line"><span class="cl"> <span class="p">)</span><span class="o">*</span><span class="n">m</span><span class="o">-</span><span class="n">c</span><span class="o">*</span><span class="n">d</span><span class="o">*</span><span class="n">e</span><span class="o">-</span><span class="n">f</span><span class="o">*</span><span class="n">g</span><span class="o">-</span><span class="n">l</span>        <span class="o">*</span><span class="n">d</span><span class="o">*</span><span class="n">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">22</span><span class="o">&gt;</span><span class="n">y</span><span class="o">&amp;&amp;</span>
</span></span><span class="line"><span class="cl"> <span class="n">y</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">x</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">80</span><span class="o">&gt;</span><span class="n">x</span><span class="o">&amp;&amp;</span><span class="n">D</span><span class="o">&gt;</span><span class="n">z</span><span class="p">[</span><span class="n">o</span><span class="p">]){</span><span class="n">z</span><span class="p">[</span><span class="n">o</span><span class="p">]</span><span class="o">=</span><span class="n">D</span><span class="p">;;;</span><span class="n">b</span><span class="p">[</span><span class="n">o</span><span class="p">]</span><span class="o">=</span>
</span></span><span class="line"><span class="cl"> <span class="s">&#34;.,-~:;=!*#$@&#34;</span><span class="p">[</span><span class="n">N</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nl">N</span><span class="p">:</span><span class="mi">0</span><span class="p">];}}</span><span class="cm">/*#****!!-*/</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;</span><span class="se">\x1b</span><span class="s">[H&#34;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">1761</span><span class="o">&gt;</span><span class="n">k</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">   <span class="nf">putchar</span><span class="p">(</span><span class="n">k</span><span class="o">%</span><span class="mi">80</span><span class="o">?</span><span class="n">b</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">:</span><span class="mi">10</span><span class="p">);</span><span class="n">A</span><span class="o">+=</span><span class="mf">0.04</span><span class="p">;</span><span class="n">B</span><span class="o">+=</span>
</span></span><span class="line"><span class="cl">     <span class="mf">0.02</span><span class="p">;}}</span><span class="cm">/*****####*******!!=;:~
</span></span></span><span class="line"><span class="cl"><span class="cm">       ~::==!!!**********!!!==::-
</span></span></span><span class="line"><span class="cl"><span class="cm">         .,~~;;;========;;;:~-.
</span></span></span><span class="line"><span class="cl"><span class="cm">             ..,--------,*/</span>
</span></span></code></pre></div><p>Anyways, my point is that the code can become very unreadable and unmaintainable if no coding style guidelines are defined. Early in my journey, I engaged in all kinds of holy wars on code styles. I would read some article about why a particular convention was correct, while another was totally wrong. But I&rsquo;ve finally come to a conclusion - <strong>These things don&rsquo;t matter; Consistency and readability matters</strong>.</p>
<p>The development process of linux kernel is very chaotic with thousands of developers working completely remotely on the same code base. How do they do it without messing it all up??</p>
<p>Out of many reasons, one is that all kernel developers try best to follow the code style guidelines laid out in the official kernel documentations <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. Here they provide all the necessary details and examples to put their point. And still, it is just a recommendation not forcing anybody to be very specific about it.</p>
<h3 id="fixing-style-issue-problem">Fixing style issue problem</h3>
<p>In this task, we are provided with 2 different modules (Linux Kernel Modules)&hellip; and our job here is to fix the style coding as per the coding style.</p>
<p>You don&rsquo;t have to read the complete coding style to fix it, smart people have already built a tool that can check these issues and provide a warning to us in a clean way. Linux provides a <code>script/checkpatch.pl</code> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> script, for the same. This script can check the code for trivial style violations in patches and optionally corrects them. This tool can also be used for regular kernel source code files. Read more about this tool from official docs <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>This is not a very unique idea, today we have linters and other tools that can check the style issues and report it or fix it automatically in your source code&hellip;.in almost all the program languages. You can add one such tool in you <code>pre-commit</code> hook or most IDEs have plugins for this, you can use those too.</p>
<p>Anyways, let&rsquo;s pick up a file and run the <code>checkpatch</code> tool against it. The code looked fine to me at first&hellip; it had a good filename at top and has got indentations.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">* helloworld.c
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	  <span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	  <span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;See you later.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Just a module&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>But it still does not follow the guidelines. You can check that using the tool - <code>checkpatch.pl</code>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">## COMMAND -  ../linux/scripts/checkpatch.pl -f helloworld.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
</span></span><span class="line"><span class="cl">#1: FILE: helloworld.c:1:
</span></span><span class="line"><span class="cl">+/*
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: It&#39;s generally not useful to have the filename in the file
</span></span><span class="line"><span class="cl">#2: FILE: helloworld.c:2:
</span></span><span class="line"><span class="cl">+* helloworld.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: Block comments should align the * on each line
</span></span><span class="line"><span class="cl">#2: FILE: helloworld.c:2:
</span></span><span class="line"><span class="cl">+/*
</span></span><span class="line"><span class="cl">+* helloworld.c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">total: 0 errors, 3 warnings, 24 lines checked
</span></span></code></pre></div><p>There are 3 warnings reported by this script&hellip;</p>
<ol>
<li>Add SPDX licence info in line 1</li>
<li>Filename at top is not useful</li>
<li>Block comments should have * aligned <em>(This will be discarded because according to point 2, we are going to remove that comment block)</em></li>
</ol>
<p>Now after fixing the code according to the provided suggestions, we get the below code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;See you later.</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_exit</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Just a module&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>In other module file, we have another code that looks good at first but the <code>checkpatch</code> reults indicate otherwise.</p>
<p>Code:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/delay.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/slab.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">do_work</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">my_int</span><span class="p">,</span> <span class="kt">int</span> <span class="n">retval</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">udelay</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">		 * That was a long sleep, tell userspace about it
</span></span></span><span class="line"><span class="cl"><span class="cm">		 */</span>
</span></span><span class="line"><span class="cl">		<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;We slept a long time!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">z</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">my_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">=</span> <span class="nf">do_work</span><span class="p">(</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">my_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">my_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">my_exit</span><span class="p">);</span>
</span></span></code></pre></div><p>This module is somewhat different than what we previously saw. Apart from the regular <code>init</code> and <code>exit</code> functions, this module has an extra function that is called by <code>init</code> function. That&rsquo;s it. You don&rsquo;t have to worry about the code and other logic at this point.. just focus on coding styles.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  ../linux/scripts/checkpatch.pl -f coding_style.c
</span></span><span class="line"><span class="cl">WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
</span></span><span class="line"><span class="cl">#1: FILE: coding_style.c:1:
</span></span><span class="line"><span class="cl">+#include &lt;linux/module.h&gt;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">WARNING: void function return statements are not generally useful
</span></span><span class="line"><span class="cl">#35: FILE: coding_style.c:35:
</span></span><span class="line"><span class="cl">+	return;
</span></span><span class="line"><span class="cl">+}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">total: 0 errors, 2 warnings, 38 lines checked
</span></span></code></pre></div><p>The script gives us 2 warnings for this module.</p>
<ol>
<li>SPDX licence <em>(just as the previous one, we&rsquo;ll talk more about it later.)</em></li>
<li>void function return statements. <em>(Void functions do not return anything; no return statements are required)</em></li>
</ol>
<p>For this case, I added the SPDX licence comment at line 1 and commented the return statement. If you want, you can remove it entirely from the code. For me, the new code looks like below:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: GPL-2.0+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/delay.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/slab.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">do_work</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">my_int</span><span class="p">,</span> <span class="kt">int</span> <span class="n">retval</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="o">*</span><span class="n">my_int</span><span class="p">;</span> <span class="o">++</span><span class="n">x</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">udelay</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">		 * That was a long sleep, tell userspace about it
</span></span></span><span class="line"><span class="cl"><span class="cm">		 */</span>
</span></span><span class="line"><span class="cl">		<span class="nf">pr_debug</span><span class="p">(</span><span class="s">&#34;We slept a long time!&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">z</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">z</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">my_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">x</span> <span class="o">=</span> <span class="nf">do_work</span><span class="p">(</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">my_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// return;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">my_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">my_exit</span><span class="p">);</span>
</span></span></code></pre></div><p>Great!! you are now familiar with the coding style issues in the linux kernel code and has got the ability to fix such issues. If you want to be more automatic with this, you can also use the pre-commit hooks. Read more about git hooks from <a href="https://githooks.com/">githooks.com</a> <sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.kernel.org/doc/html/v4.10/process/coding-style.html">https://www.kernel.org/doc/html/v4.10/process/coding-style.html</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://elixir.bootlin.com/linux/latest/source/scripts/checkpatch.pl">https://elixir.bootlin.com/linux/latest/source/scripts/checkpatch.pl</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://www.kernel.org/doc/html/latest/dev-tools/checkpatch.html">https://www.kernel.org/doc/html/latest/dev-tools/checkpatch.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://githooks.com/">https://githooks.com/</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Eudyptula Task3</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-3/</link>
      <pubDate>Thu, 16 Jun 2022 16:14:27 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-3/</guid>
      <description>Task 3 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 03 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Now that you have your custom kernel up and running, it&#39;s time to modify
</span></span><span class="line"><span class="cl">it!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The tasks for this round is:
</span></span><span class="line"><span class="cl">  - take the kernel git tree from Task 02 and modify the Makefile to
</span></span><span class="line"><span class="cl">    and modify the EXTRAVERSION field.  Do this in a way that the
</span></span><span class="line"><span class="cl">    running kernel (after modifying the Makefile, rebuilding, and
</span></span><span class="line"><span class="cl">    rebooting) has the characters &#34;-eudyptula&#34; in the version string.
</span></span><span class="line"><span class="cl">  - show proof of booting this kernel.  Extra cookies for you by
</span></span><span class="line"><span class="cl">    providing creative examples, especially if done in intrepretive
</span></span><span class="line"><span class="cl">    dance at your local pub.
</span></span><span class="line"><span class="cl">  - Send a patch that shows the Makefile modified.  Do this in a manner
</span></span><span class="line"><span class="cl">    that would be acceptable for merging in the kernel source tree.
</span></span><span class="line"><span class="cl">    (Hint, read the file Documentation/SubmittingPatches and follow the
</span></span><span class="line"><span class="cl">    steps there.)
</span></span></code></pre></div><p>Linux kernel source code is very huge and compiling such source code files can be tiring, especially when you have to include several source files from different directories and type the compiling command every time you need to compile. <strong><code>Makefiles</code></strong> are the solution to automate and simplify this task.</p>
<h3 id="what-is-a-makefile">What is a Makefile??</h3>
<p>Makefile is a specially formated file which contains all the steps to compile your program in the form of rules. These rules are also sometimes referred as recipes (&hellip;but they both are totally different things🤷‍♂️) and these rules are executed by a utility called <code>make</code>. You might have used <strong>make</strong> to compile a program from source code. Most open source projects use it to compile a final executable binary, which can then be installed typically using <code>make install</code>.</p>
<h4 id="understand-with-examples">Understand with examples</h4>
<p>Let&rsquo;s start with very simple and classic example - &ldquo;Hello World&rdquo;. To begin with, create a new directory called <code>my_make_dir</code> containing a <code>Makefile</code> with below contents in it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Comment - this says hello
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">say_hello</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;Hello World&#34;</span>
</span></span></code></pre></div><p>If you run <code>make say_hello</code> inside the directory, it&rsquo;ll give below output:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">echo &#34;Hello World&#34;
</span></span><span class="line"><span class="cl">Hello World
</span></span></code></pre></div><p>We just created our first Makefile rule and triggered it to run. Here <code>say_hello</code> behaves like a function name, this is also called <strong>target</strong> and <code>echo &quot;Hello World&quot;</code> is a <strong>recipie</strong>.  In a single Makefile there can be multiple targets with multiple sets of recepies.</p>
<p>Let&rsquo;s take a look at another example now,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Comment - this says hello
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">say_hello</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;Hello World&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">say_bye</span><span class="o">:</span> <span class="n">say_hello</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;I&#39;m going now!&#34;</span>
</span></span><span class="line"><span class="cl">		<span class="nb">echo</span> <span class="s2">&#34;Bye Bye world&#34;</span>
</span></span></code></pre></div><p>In above example, we have 2 targets, namely, <code>say_hello</code> and <code>say_bye</code>.  In the target - <code>say_bye</code>, we have set <code>say_hello</code> as dependency or prerequisite. Pre-requisites are like another targets in the Makefile which should run before the intended target. So when we will invoke <code>say_bye</code> command, it&rsquo;ll first trigger the prerequisite <code>say_hello</code> and then <code>say_bye</code> will be triggered.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  make say_bye
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">echo &#34;Hello World&#34;
</span></span><span class="line"><span class="cl">Hello World
</span></span><span class="line"><span class="cl">echo &#34;I&#39;m going now!&#34;
</span></span><span class="line"><span class="cl">I&#39;m going now!
</span></span><span class="line"><span class="cl">echo &#34;Bye Bye world&#34;
</span></span><span class="line"><span class="cl">Bye Bye world
</span></span></code></pre></div><p>Another key point about make utility is that whenever it does not take any targets to trigger, it&rsquo;ll trigger the top most target present in the Makefile. In this case, it&rsquo;ll trigger <code>say_hello</code> as it is in the first target in the Makefile.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  make
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">echo &#34;Hello World&#34;
</span></span><span class="line"><span class="cl">Hello World
</span></span></code></pre></div><h4 id="more-practical-examples">More practical examples</h4>
<p>Now we know some basic terminology around Makefiles and how it works. Let&rsquo;s take a look at some more practical example that can be related to a real-world task.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="nf">all</span><span class="o">:</span> <span class="n">say_hello</span> <span class="n">generate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">say_hello</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Hello World&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">generate</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Creating empty text files...&#34;</span>
</span></span><span class="line"><span class="cl">	touch file-<span class="o">{</span>1..10<span class="o">}</span>.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Cleaning up...&#34;</span>
</span></span><span class="line"><span class="cl">	rm *.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">say_bye</span><span class="o">:</span> <span class="n">clean</span>
</span></span><span class="line"><span class="cl">	@echo <span class="s2">&#34;Bye World&#34;</span>
</span></span></code></pre></div><p>In above example,  we have got many targets, some with pre-requisites and some without those. Let&rsquo;s pick each one of them and go one by one:</p>
<ol>
<li><code>all</code> : This is the first target in the file and if we do not pass any target to <code>make</code> utility, it&rsquo;ll trigger this target by default. This has got no recipes - just a simple rule without recipes. But this rule has some pre-requisites that will run before anything (in the given order - First <code>say_hello</code> and <code>generate</code>.</li>
<li><code>say_hello</code> : This is another target that can be triggered as a single rule or as a pre-requisite for <code>all</code> target. Anyways, it&rsquo;ll simply print the following string - <code>Hello World</code>.</li>
<li><code>generate</code> : This target is responsible to generate 10 empty files ranging from 1-10. Just like <code>say_hello</code>, it can also be triggered as a single standalone target or as a pre-requisite for <code>all</code> target.</li>
<li><code>Clean</code> : This target cleans all the .txt files from the folder. Idea is to delete all the files created by <code>generate</code> target.</li>
<li><code>say_bye</code> : This target prints &ldquo;Bye World&rdquo;, but has <code>clean</code> target as a pre-requisite so it&rsquo;ll first clean and then it&rsquo;ll run it&rsquo;s own recipes.</li>
</ol>
<p><em>Note:- any line after # (hash) character will be treated as comments by make utility</em></p>
<p>Now we understand what the Makefile consists of, let&rsquo;s see how we are going to use it for our case.</p>
<ol>
<li>To get a &ldquo;Hello World&rdquo; msg and create all the files we can simply type <code>make</code>. This will trigger the first target <code>all</code>, that in turn will execute <code>say_hello</code> and <code>generate</code>.</li>
<li>Once you are done with everything and what to clean-up the mess, you can just type <code>make bye_world</code>. This target will first clean and then provide you with a goodbye message.</li>
</ol>
<p>That&rsquo;s it. Pretty easy, isn&rsquo;t it? Now let&rsquo;s bang our head with another example that is more close to the real world application.</p>
<p>For this, we need to write our program (I&rsquo;ll use C language for that, language is never a barrier for make command). Open up a text editor and write your first <code>HelloWorld.c</code> program.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Hello World</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>The above program will simply print &ldquo;Hello World&rdquo; when compiled and executed. We can write make recipes for this now.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Compile the source code
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld.o</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">c</span>
</span></span><span class="line"><span class="cl">	gcc  HelloWorld.c   -o HelloWorld.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Execute the binary
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">o</span>
</span></span><span class="line"><span class="cl">	./HelloWorld.o
</span></span></code></pre></div><p>The above <code>Makefile</code> has 2 rules with <code>HelloWorld.o</code> and <code>HelloWorld</code> as targets. Both targets have some recipes and some pre-requisites to it. Remember, the pre-requisite executes first and then the actual recipe for the target&hellip; That&rsquo;s how these rules work.</p>
<p>So if I trigger <code>HelloWorld</code> target, then it&rsquo;ll trigger the <code>HelloWorld.o</code> target as pre-requisite, which will compile the <code>HelloWorld.c</code> source code; Once the <code>HelloWorld.o</code> target is completed, it&rsquo;ll execute the generated <code>./HelloWorld.o</code> binary&hellip; This can be now further reduced to just invoking single <code>make</code> command, by making sure that <code>HelloWorld</code> target runs first by default.</p>
<p>You&rsquo;ll have to change the Makefile to get desired behaviour,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Creates a variable (this points to the compiler)
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nv">CC</span><span class="o">=</span>gcc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># First target in the file, default.
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">all</span><span class="o">:</span> <span class="n">HelloWorld</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Executes the source code
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">o</span>
</span></span><span class="line"><span class="cl">	./HelloWorld.o
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Compile the source code
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">HelloWorld.o</span><span class="o">:</span> <span class="n">HelloWorld</span>.<span class="n">c</span>
</span></span><span class="line"><span class="cl">	<span class="si">${</span><span class="nv">CC</span><span class="si">}</span>  HelloWorld.c   -o HelloWorld.o
</span></span></code></pre></div><p>Above Makefile is now good to compile and run our source code. It has got a variable that stores the compiler name, and it is used in <code>HelloWorld.o</code> target with <code>${CC}</code> syntax. I believe you understand the rest.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/nvkcS2Qc6pvId8S11b/giphy.gif#center" alt=""  />
</p>
<p>Now you can invoke <code>make</code> and it&rsquo;ll compile the source and execute the binary in a single go. One key thing to observe here is, that when we run make multiple times without changing the source code, it is not recompiling the code. This saves us a lot of time. And this is exactly why make is so de-facto automation tool for such usecases. (not &ldquo;de-facto&rdquo;, but you get it, right?)</p>
<p>Now, what about cleaning?? We gotta clean our mess. Although we don&rsquo;t have huge mess, but mess is mess and one gotta take care of his own mess. So we are going to write another rule in our Makefile.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># Deletes the executable binary file
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nf">clean</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	rm -rf HelloWorld.o
</span></span></code></pre></div><p>Now, anybody who will be using this, just needs to remember 2 commands:-</p>
<ul>
<li><code>make</code> : to actually compile and run the binary file.</li>
<li><code>make clean</code> : To remove the compiled binary file.</li>
</ul>
<h3 id="makefile-for-kernel">Makefile for kernel</h3>
<p>Linux Kernel also uses makefiles (Plural; not singular) to make the building process relatively very easy for anybody. They just have to type 2 commands and a fresh new custom kernel will be ready for them. Although, this might take a lot of time depending upon what hardware you are running on and what files are you gonna compile.</p>
<p>Take a look at the top few lines of the <code>Makefile</code> in the top most directory of source tree.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="c"># SPDX-License-Identifier: GPL-2.0
</span></span></span><span class="line"><span class="cl"><span class="c"></span><span class="nv">VERSION</span> <span class="o">=</span> <span class="m">5</span>
</span></span><span class="line"><span class="cl"><span class="nv">PATCHLEVEL</span> <span class="o">=</span> <span class="m">19</span>
</span></span><span class="line"><span class="cl"><span class="nv">SUBLEVEL</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="nv">EXTRAVERSION</span> <span class="o">=</span> -ExtraVersionText
</span></span><span class="line"><span class="cl"><span class="nv">NAME</span> <span class="o">=</span> Superb Owl
</span></span></code></pre></div><p>This tells about a lot of things related to version and name given to that version. We can see our <code>EXTRAVERSION</code> which I&rsquo;ve changed in the file (for Task 3 - Eudyptula Challenge).</p>
<p>Reading further down, we have so many sections, separated with comment blocks. These comment blocks are simple and grep-able, give them a try. Once we are comfortable with the idea of Makefiles and linux kernel, we can now connect all the dots and understand how things are linked together.</p>
<ul>
<li>We started with a <code>.config</code> file, that contains all the required kernel configurations. This file is then read by the top-level <code>Makefile</code> in linux kernel directory.</li>
<li>This Makefile is responsible for building 2 major products: <code>vmlinux</code> &amp; <code>modules</code>. To achive this, <strong>make</strong> goes recursively into the sub-directories of kernel source tree and builds and compiles everything. The list of directories is determined using the <code>.config</code> file&hellip;. because that&rsquo;s what we want to compile.</li>
</ul>
<p>According to the official kernel docs, people have four different relationships with the kernel Makefiles.</p>
<ul>
<li>Some will simply build kernel using commands like <code>make menuconfig</code> and <code>make</code></li>
<li>Some will work with device drivers or other kernel features and will have to deal with kbuild makefiles for each subsystem they are working on.</li>
<li>A few will be working with architecture specific code and will be responsible for arch makefiles.</li>
<li>And then, there are kbuild developers&hellip;. people who work on the kernel build system itself.</li>
</ul>
<p>There are many things that a kernel developer needs to understand when he/she is working on kernel features. One of those many things is to understand kernel build makefiles. If you want, read more about important segments of a kernel makefile from <a href="https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#the-kbuild-files">official documentations here</a>.<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>Now we know what makefile is, how it works and little bit about kernel makefile. Now the last part of the task - to make a patch of modified Makefile. This is very easy with git&hellip; you know <em>git</em> right?</p>
<p><img loading="lazy" src="https://media.giphy.com/media/hs1wBxNGuR7z2LyzHT/giphy.gif#center" alt=""  />
</p>
<p>Just do <code>git diff Makefile</code> in linux kernel source directory. Executing this command should give you output like below.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-diff" data-lang="diff"><span class="line"><span class="cl"><span class="gh">diff --git a/Makefile b/Makefile
</span></span></span><span class="line"><span class="cl"><span class="gh">index 1a6678d81..25e909b50 100644
</span></span></span><span class="line"><span class="cl"><span class="gh"></span><span class="gd">--- a/Makefile
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+++ b/Makefile
</span></span></span><span class="line"><span class="cl"><span class="gi"></span><span class="gu">@@ -2,7 +2,7 @@
</span></span></span><span class="line"><span class="cl"><span class="gu"></span> VERSION = 5
</span></span><span class="line"><span class="cl"> PATCHLEVEL = 19
</span></span><span class="line"><span class="cl"> SUBLEVEL = 0
</span></span><span class="line"><span class="cl"><span class="gd">-EXTRAVERSION = -rc2
</span></span></span><span class="line"><span class="cl"><span class="gd"></span><span class="gi">+EXTRAVERSION = -ExtraVersionText
</span></span></span><span class="line"><span class="cl"><span class="gi"></span> NAME = Superb Owl
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> # *DOCUMENTATION*
</span></span></code></pre></div><p>But this is not a patch&hellip; it is just a diff, showing what things changed. To make a actual patch you need to do more than this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">## After modifying the Makefile</span>
</span></span><span class="line"><span class="cl">git add Makefile
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;Modified Makefile&#34;</span>
</span></span><span class="line"><span class="cl">git format-patch -1 HEAD -- Makefile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## OUTPUT - 0001-modified-makefile.patch</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl"># COMMAND -  cat 0001-modified-makefile.patch
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">From 45176125f95a5606ab4334f334634e19492f4928 Mon Sep 17 00:00:00 2001
</span></span><span class="line"><span class="cl">From: ayedaemon &lt;ris3234@gmail.com&gt;
</span></span><span class="line"><span class="cl">Date: Sat, 18 Jun 2022 10:54:16 +0530
</span></span><span class="line"><span class="cl">Subject: [PATCH] modified makefile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl"> Makefile | 2 +-
</span></span><span class="line"><span class="cl"> 1 file changed, 1 insertion(+), 1 deletion(-)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">diff --git a/Makefile b/Makefile
</span></span><span class="line"><span class="cl">index b815ea3..7d97ece 100644
</span></span><span class="line"><span class="cl">--- a/Makefile
</span></span><span class="line"><span class="cl">+++ b/Makefile
</span></span><span class="line"><span class="cl">@@ -1,6 +1,6 @@
</span></span><span class="line"><span class="cl"> VERSION = 5
</span></span><span class="line"><span class="cl"> PATCHLEVEL = 19
</span></span><span class="line"><span class="cl"> SUBLEVEL = 0
</span></span><span class="line"><span class="cl">-EXTRAVERSION = -rc2
</span></span><span class="line"><span class="cl">+EXTRAVERSION = -ExtraVersionText
</span></span><span class="line"><span class="cl"> NAME = Superb Owl
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">--
</span></span><span class="line"><span class="cl">2.36.1
</span></span></code></pre></div><p>Now this gives you a patch file in an email format. That&rsquo;s convinient if you just want generate a patch and send it to someone using CLI mail client tools. Your work as a bug fixer/ feature developer/ etc is done once you have submitted the patch.</p>
<h4 id="submit-the-patch-but-where">Submit the patch!! But where??</h4>
<p>Linux kernel developers have also made automation scripts for you that actually finds the maintainers for a file.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./scripts/get_maintainer.pl -f Makefile
</span></span></code></pre></div><p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="n">Masahiro</span> <span class="n">Yamada</span> <span class="o">&lt;</span><span class="n">masahiroy</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">maintainer</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Michal</span> <span class="n">Marek</span> <span class="o">&lt;</span><span class="n">michal</span><span class="o">.</span><span class="n">lkml</span><span class="err">@</span><span class="n">markovi</span><span class="o">.</span><span class="n">net</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">maintainer</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Nick</span> <span class="n">Desaulniers</span> <span class="o">&lt;</span><span class="n">ndesaulniers</span><span class="err">@</span><span class="n">google</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Nick</span> <span class="n">Terrell</span> <span class="o">&lt;</span><span class="n">terrelln</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">maintainer</span><span class="p">:</span><span class="n">ZSTD</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Alexei</span> <span class="n">Starovoitov</span> <span class="o">&lt;</span><span class="n">ast</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Daniel</span> <span class="n">Borkmann</span> <span class="o">&lt;</span><span class="n">daniel</span><span class="err">@</span><span class="n">iogearbox</span><span class="o">.</span><span class="n">net</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Andrii</span> <span class="n">Nakryiko</span> <span class="o">&lt;</span><span class="n">andrii</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Martin</span> <span class="n">KaFai</span> <span class="n">Lau</span> <span class="o">&lt;</span><span class="n">kafai</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Song</span> <span class="n">Liu</span> <span class="o">&lt;</span><span class="n">songliubraving</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Yonghong</span> <span class="n">Song</span> <span class="o">&lt;</span><span class="n">yhs</span><span class="err">@</span><span class="n">fb</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">John</span> <span class="n">Fastabend</span> <span class="o">&lt;</span><span class="n">john</span><span class="o">.</span><span class="n">fastabend</span><span class="err">@</span><span class="n">gmail</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">KP</span> <span class="n">Singh</span> <span class="o">&lt;</span><span class="n">kpsingh</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">Nathan</span> <span class="n">Chancellor</span> <span class="o">&lt;</span><span class="n">nathan</span><span class="err">@</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">supporter</span><span class="p">:</span><span class="n">CLANG</span><span class="o">/</span><span class="n">LLVM</span> <span class="n">BUILD</span> <span class="n">SUPPORT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Tom</span> <span class="n">Rix</span> <span class="o">&lt;</span><span class="n">trix</span><span class="err">@</span><span class="n">redhat</span><span class="o">.</span><span class="n">com</span><span class="o">&gt;</span> <span class="p">(</span><span class="n">reviewer</span><span class="p">:</span><span class="n">CLANG</span><span class="o">/</span><span class="n">LLVM</span> <span class="n">BUILD</span> <span class="n">SUPPORT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">linux</span><span class="o">-</span><span class="n">kbuild</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">KERNEL</span> <span class="n">BUILD</span> <span class="o">+</span> <span class="n">files</span> <span class="n">below</span> <span class="n">scripts</span><span class="o">/</span> <span class="p">(</span><span class="n">unless</span> <span class="n">mai</span><span class="o">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">linux</span><span class="o">-</span><span class="n">kernel</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">netdev</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">bpf</span><span class="err">@</span><span class="n">vger</span><span class="o">.</span><span class="n">kernel</span><span class="o">.</span><span class="n">org</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">BPF</span> <span class="p">(</span><span class="n">Safe</span> <span class="n">dynamic</span> <span class="n">programs</span> <span class="ow">and</span> <span class="n">tools</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="n">llvm</span><span class="err">@</span><span class="n">lists</span><span class="o">.</span><span class="n">linux</span><span class="o">.</span><span class="n">dev</span> <span class="p">(</span><span class="n">open</span> <span class="n">list</span><span class="p">:</span><span class="n">CLANG</span><span class="o">/</span><span class="n">LLVM</span> <span class="n">BUILD</span> <span class="n">SUPPORT</span><span class="p">)</span>
</span></span></code></pre></div><p>The above list gives you the recipients list for you patch. Before submitting your patch, please read <a href="https://www.kernel.org/doc/html/latest/process/submitting-patches.html">the official kernel documentations</a><sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> to know mode about the patch submissions.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/fvmbkNjNwBlHCG3Yin/giphy.gif#center" alt=""  />
</p>
<h4 id="how-do-they-apply-my-patch">how do they apply my patch??</h4>
<p>Maintainers (or the person you just submitted your patch) will check your patch and if everything is good, they&rsquo;ll apply your patch to their codebase.</p>
<p><code>git</code> provides an easy way to do that using the patch file&hellip; just type below command and the patch will be applied.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git apply 0001-modified-makefile.patch
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>Linux kernel is very huge project which involves tons of people. This looks very chaotic and scary, but it works!! Among many other tools/scripts, <strong>Git</strong> and <strong>Makefiles</strong> are the 2 important tools this chaotic process relies upon. One should have good understanding about these tools to take part in the development process of kernel.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#the-kbuild-files">https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#the-kbuild-files</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.kernel.org/doc/html/latest/process/submitting-patches.html">https://www.kernel.org/doc/html/latest/process/submitting-patches.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Eudyptula Task2</title>
      <link>https://ayedaemon.github.io/post/2022/06/eudyptula-task-2/</link>
      <pubDate>Wed, 01 Jun 2022 15:14:27 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2022/06/eudyptula-task-2/</guid>
      <description>Task 2 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 02 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Now that you have written your first kernel module, it&#39;s time to take
</span></span><span class="line"><span class="cl">off the training wheels and move on to building a custom kernel.  No
</span></span><span class="line"><span class="cl">more distro kernels for you, for this task you must run your own kernel.
</span></span><span class="line"><span class="cl">And use git!  Exciting isn&#39;t it!  No, oh, ok...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The tasks for this round is:
</span></span><span class="line"><span class="cl">  - download Linus&#39;s latest git tree from git.kernel.org (you have to
</span></span><span class="line"><span class="cl">    figure out which one is his, it&#39;s not that hard, just remember what
</span></span><span class="line"><span class="cl">    his last name is and you should be fine.)
</span></span><span class="line"><span class="cl">  - build it, install it, and boot it.  You can use whatever kernel
</span></span><span class="line"><span class="cl">    configuration options you wish to use, but you must enable
</span></span><span class="line"><span class="cl">    CONFIG_LOCALVERSION_AUTO=y.
</span></span><span class="line"><span class="cl">  - show proof of booting this kernel.  Bonus points for you if you do
</span></span><span class="line"><span class="cl">    it on a &#34;real&#34; machine, and not a virtual machine (virtual machines
</span></span><span class="line"><span class="cl">    are acceptable, but come on, real kernel developers don&#39;t mess
</span></span><span class="line"><span class="cl">    around with virtual machines, they are too slow.  Oh yeah, we aren&#39;t
</span></span><span class="line"><span class="cl">    real kernel developers just yet.  Well, I&#39;m not anyway, I&#39;m just a
</span></span><span class="line"><span class="cl">    script...)  Again, proof of running this kernel is up to you, I&#39;m
</span></span><span class="line"><span class="cl">    sure you can do well.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Hint, you should look into the &#39;make localmodconfig&#39; option, and base
</span></span><span class="line"><span class="cl">your kernel configuration on a working distro kernel configuration.
</span></span><span class="line"><span class="cl">Don&#39;t sit there and answer all 1625 different kernel configuration
</span></span><span class="line"><span class="cl">options by hand, even I, a foolish script, know better than to do that!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">After doing this, don&#39;t throw away that kernel and git tree and
</span></span><span class="line"><span class="cl">configuration file.  You&#39;ll be using it for later tasks, a working
</span></span><span class="line"><span class="cl">kernel configuration file is a precious thing, all kernel developers
</span></span><span class="line"><span class="cl">have one they have grown and tended to over the years.  This is the
</span></span><span class="line"><span class="cl">start of a long journey with yours, don&#39;t discard it like was a broken
</span></span><span class="line"><span class="cl">umbrella, it deserves better than that.
</span></span></code></pre></div><h1 id="what-why">What, why?</h1>
<p>Kernel is the main component of any operating system and is also referred as  the &ldquo;Heart of the Operating System&rdquo;. It is at the core of all the layers present in OS and can have complete access to all the hardware (CPU, disk, RAM, etc). Therefore, it runs on very high privileges. Basically it handles most of the hardware related tasks (Allocate memory, CPU scheduling, etc) and most of the process related tasks (Copying file from/to disk, Uploading/Downloading, opening browser to read this blog, etc)</p>
<p><strong>Wait, what? Does it have control to everything we do on our computers?</strong></p>
<p>A big YES and small no. It is responsible to send data across multiple resources in your system and it can intercept everything there. But it depends if it can understand what it sees.</p>
<p>Kernel has mainly 4 tasks:</p>
<ol>
<li>Keep track of the memory - who is using it and how much; And where.</li>
<li>Decides who uses CPU, when and for how long</li>
<li>Takes data from processes and passes sensible code to hardware for processing it and vise-versa.</li>
<li>Receives requests via system calls (API calls; but not Web API calls) from processes. This is used to do low level stuff and build amazing tools like docker.</li>
</ol>
<p>Talking to kernel is difficult and can be dangerous if not used properly. Most of the times, user does not need to talk to kernel directly, and have got few layers of abstraction on top of it - Device drivers, system libraries, CLI shells, GUI shells (Graphical thing which comes up, when you start your system), etc.</p>
<p>This gives rise to the idea of 2 spaces - user space and kernel space. Kernel space is the memory segment that is used only by kernel and users stay out of it. Another is user space memory segment, where user can do all what he wants.</p>
<p>The rough mind map would look something like below</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[ [ [ [Hardware] --&gt; Kernel ] --&gt; OS ]  --&gt; Process(browser)]
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># If process fails in OS, damage is small and might be recovered by kernel.
</span></span><span class="line"><span class="cl"># If kernel crashes, Your system goes down.
</span></span><span class="line"><span class="cl"># If hardware fails, you cry!!
</span></span></code></pre></div><p>This is the complete bundle which makes up your system.  Now what I want to take out of this whole jibber-jabber is that a <strong>kernel</strong> is a <strong><em>piece of software</em></strong> that works with hardware and other user-friendly softwares to solve your problems or play games and have fun.</p>
<p>Since it is a piece of software, we can download it and replace old versions with new versions (manually or via a script/program/whatever). Another option for tech savvy people is to custom compile it. There could be many reasons to compile a linux kernel by yourself, few possible reasons are:-</p>
<ul>
<li>You want to know how it is done.</li>
<li>You might want to brag about it and feel superior and very tech savvy.</li>
<li>You want to face &ldquo;I use arch BTW&rdquo; community. (FYI, I use arch BTW!!)</li>
<li>You want optimal performance on specific hardware and architecture.</li>
<li>You might want to disable/enable some kernel features.</li>
<li>You might want to add support for extra hardware.</li>
<li>You are solving eudyptula challenge, just like me :)</li>
</ul>
<p>Regardless of why, knowing how to compile a linux kernel is very useful and cool.</p>
<p><img loading="lazy" src="https://media.giphy.com/media/dCLyraFCJhaLUsG3dX/giphy.gif#center" alt=""  />
</p>
<h3 id="getting-the-source-code-for-kernel">Getting the source code for kernel.</h3>
<p>Getting source code for kernel is very easy. You just need to go to <a href="https://kernel.org/">kernel.org</a> and download the required files. I&rsquo;ll be compiling <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/">Linus Torvalds&rsquo;s git tree</a> source code on <code>archlinux/archlinux</code> vagrant box.<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Use git to download the linux kernel source code. (just the latest commit =&gt; --depth=1)</span>
</span></span><span class="line"><span class="cl">git clone --depth<span class="o">=</span><span class="m">1</span> git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
</span></span></code></pre></div><p>Linux kernel is very huge software and might take up a minute to download (depends upon your connectivity). This is one of the reasons for why most of the extended functionalities are provided via loadable kernel modules. If you don&rsquo;t know about kernel modules the read <a href="https://ayedaemon.github.io/post/eudyptula/eudyptula-task-1/">Eudyptula Task1</a> blog.</p>
<p>Inside the cloned directory, we have multiple files and sub-directories. Each sub-directory is for specified purpose like <code>arch</code> contains files for different system architecture and <code>security</code> contains files for <code>selinux</code> , <code>apparmor</code> and other security related files. In short, linux kernel is developed by thousands of developers in collaboration and not everybody knows about each file present in the source code and yet they have an understanding of where they have to make changes to achieve their goal. Very neat management!!</p>
<h3 id="compiling-linux-kernel">Compiling Linux kernel</h3>
<p>Just like every configurable software, linux kernel also provide configuration support via <code>.config</code> file. We can either use other kernel&rsquo;s config file or write a config file by ourselves.</p>
<h4 id="creating-own-config-file-from-scratch">Creating own config file from scratch</h4>
<p>Creating own config file from scratch can be a bad idea for someone who is doing it for very first time. But if you still want to do it, I&rsquo;m not gonna stop you. You can make the use of <code>Makefile</code> by typing <code>make config</code> from inside the kernel source code directory and then you&rsquo;ll have to simply answer <code>yes or no</code> for all the configurable options that kernel supports. <a href="https://www.linuxtopia.org/online_books/linux_kernel/kernel_configuration/ch05.html#id2564226">Read more here</a></p>
<h4 id="using-existing-config-file">Using existing config file</h4>
<p>You can copy the config file of your existing kernel and use it as a base config to make further changes. This is a very efficient method if there are only few changes you need to make. Most of the kernel developers have their own config files which they have fine-tuned in so many years. To know about how to get config file for your linux system <a href="https://superuser.com/questions/287371/obtain-kernel-config-from-currently-running-linux-system">read this stackoverflow thread</a>. For my vagrant system, I can check my running kernel&rsquo;s config file using below command</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ls /proc/config.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">zcat /proc/config.gz  <span class="p">|</span> grep  <span class="s2">&#34;.*CONFIG_&#34;</span> <span class="p">|</span> wc -l
</span></span><span class="line"><span class="cl"><span class="c1"># Output = 9128</span>
</span></span></code></pre></div><p>There are total <code>9128</code> configurable options here and it is very impractical to make all the proper changes with a text editor in one go, so  instead, we will do it with some <a href="https://en.wikipedia.org/wiki/Text-based_user_interface">TUI script</a>. Below script will copy the config file to working directory and start the TUI for you. Navigate to <code>linux</code> source code directory and run the below script.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Copy config file and take a backup for later review</span>
</span></span><span class="line"><span class="cl">zcat /proc/config.gz &gt; .config
</span></span><span class="line"><span class="cl">cp .config ../old.config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install requirements to run `make menuconfig`</span>
</span></span><span class="line"><span class="cl">sudo pacman -S --noconfirm --needed<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	pkg-config ncurses <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	gcc <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	flex <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>	bison
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Update config file.</span>
</span></span><span class="line"><span class="cl">make menuconfig
</span></span></code></pre></div><p>Linux kernel has a lot of make options and the best way to check supporting make options is via <code>make help</code> command. After executing <code>make menuconfig</code>, a TUI will open in shell which will help you to update, save and load the new configuration. This command uses the <code>.config</code> file from current directory to pre-fill the old config options, this makes it very easy for us to just focus on what we want to change.</p>
<p>For my config file, I simply enabled the <code>CONFIG_PRINTK_CALLER</code>   and <code>CONFIG_LOCALVERSION_AUTO</code> features of the kernel&hellip; and then saved the file with a filename - <code>new.config</code> (I want to keep it backed up for future tasks). We can compare the changed values from the old <code>.config</code> and newer <code>new.config</code> and see the difference.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">diff .config ../old.config  <span class="p">|</span> grep -i -E <span class="s1">&#39;localver|printk&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#   &lt; CONFIG_LOCALVERSION=&#34;ayedaemon&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   &gt; CONFIG_LOCALVERSION=&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   &lt; CONFIG_PRINTK_CALLER=y</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   &gt; # CONFIG_PRINTK_CALLER is not set</span>
</span></span></code></pre></div><p>Now we have very few steps left to be done. We need to <strong><em>compile the kernel</em></strong>, then <strong><em>install modules</em></strong> and finally, <strong><em>install kerrnel</em></strong>. Run below commands to get this done.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Update .config with newer config file
</span></span><span class="line"><span class="cl">mv -v new.config .config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Backup the newer config file
</span></span><span class="line"><span class="cl">cp -v .config ../new.config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Install some more dependencies
</span></span><span class="line"><span class="cl">sudo pacman -S --noconfirm --needed \
</span></span><span class="line"><span class="cl">	bc \
</span></span><span class="line"><span class="cl">	cpio   # If on arch based distro or using my vagrantfile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Compile kernel (might require your input) - use -j4 to make it build faster
</span></span><span class="line"><span class="cl">make -j4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Install modules (takes some time) - user -j4 to make it build faster
</span></span><span class="line"><span class="cl">sudo make modules_install -j4
</span></span></code></pre></div><p>If you are use LILO bootloader, then the kernel make file will do the job for you with this command - <code>sudo make install</code>. But if you are using GRUB, then you will have to make some manual steps by running below commands.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># Copy kernel image to /boot
</span></span><span class="line"><span class="cl">sudo cp arch/x86_64/boot/bzImage /boot/vmlinuz-ayedaemonlinux
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Copy system.map to /boot
</span></span><span class="line"><span class="cl">sudo cp System.map /boot/System-ayedaemonlinux.map
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Copy config file to /boot (just to be safe)
</span></span><span class="line"><span class="cl">sudo cp .config /boot/ayedaemonlinux.kernel.config
</span></span></code></pre></div><p>Let&rsquo;s take a minute to see what we just did. After we configured the linux kernel using <code>make</code> and <code>.config</code> file, we compiled the kernel with our configuration requirements and then installed all the modules required. Once this is done, we got 2 important files we need :-</p>
<ol>
<li><code>vmlinuz</code> =&gt; Is the actual kernel file. Yes it is the kernel you were waiting for so long. If you fancy, do 	<code>file /boot/vmlinuz-ayedaemonlinux</code> and check the results.</li>
<li><code>System.map</code> =&gt; This is the map file which stores the kernel symbol table information. <a href="https://rlworkman.net/system.map/">Read more about it here</a></li>
</ol>
<p>Anyways, we need these files in our <code>/boot/</code> directory so that our boot-loader can load our compiled kernel. But our boot-loader is dumb, it can not simply detect the files from <code>/boot/</code> and show us options on the boot-loader screen, we will have to do that as well. You might also need to generate a <code>initrd</code> file depending upon what configurations you are using on your system. If you are following the steps from this blog, then you need <strong>initrd</strong> for sure. <strong>Initrd</strong> is the program that helps your kernel to load and boot up properly by providing the modules support that are not built into the kernel at compile time. In this blog, we have not compiled all the modules in the kernel that our kernel might need at boot time, so we will create a <code>initrd</code> file and then we can tell our boot loader about our custom kernel.</p>
<p>Use <code>mkinitcpio</code> command to generate a initrd file and then update bootloader config using <code>grub-mkconfig</code> command. If you want this kernel to be default, then you&rsquo;ll have to make proper changes to the boot config file. Read more about it from <a href="https://wiki.archlinux.org/title/GRUB/Tips_and_tricks#Changing_the_default_menu_entry">arch wiki</a> or <a href="https://stackoverflow.com/questions/44422745/change-default-kernel-version-in-grub">stackoverflow</a>. If you are someone who prefers easy workarounds, you can also select the new kernel from the grub menu at boot time; Just make sure that <code>GRUB_TIMEOUT</code> variable (from <code>/etc/default/grub</code>) is not set to zero.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl"># generate initramfs
</span></span><span class="line"><span class="cl">sudo mkinitcpio -k 5.18.0ayedaemon-g8ab2afa23bd1 -g /boot/initramfs-ayedaemonlinux.img
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># update grub config - add entry to boot menu
</span></span><span class="line"><span class="cl">sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># Setup grub boot order if you want to - else use the lazy way
</span></span></code></pre></div><p>Output:-</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">#  sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Generating grub configuration file ...
</span></span><span class="line"><span class="cl">Found linux image: /boot/vmlinuz-linux
</span></span><span class="line"><span class="cl">Found initrd image: /boot/initramfs-linux.img
</span></span><span class="line"><span class="cl">Found fallback initrd image(s) in /boot:  initramfs-linux-fallback.img
</span></span><span class="line"><span class="cl">Found linux image: /boot/vmlinuz-ayedaemonlinux
</span></span><span class="line"><span class="cl">Found initrd image: /boot/initramfs-ayedaemonlinux.img
</span></span><span class="line"><span class="cl">Warning: os-prober will not be executed to detect other bootable partitions.
</span></span><span class="line"><span class="cl">Systems on them will not be added to the GRUB boot configuration.
</span></span><span class="line"><span class="cl">Check GRUB_DISABLE_OS_PROBER documentation entry.
</span></span><span class="line"><span class="cl">done
</span></span></code></pre></div><p>From the output of last command, we can see that my <code>ayedaemonlinux</code> was detected by grub and it also updated the <code>/boot/grub/grub.cfg</code> file with current detections. Now, lets reboot and hope everything works as expected. Select the custom kernel from grub menu if needed and boot into it. If successfull, you can check the kernel version and other information with <code>uname</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl"># Before Reboot --&gt; uname -a
</span></span><span class="line"><span class="cl">Linux archlinux 5.18.1-arch1-1 #1 SMP PREEMPT_DYNAMIC Mon, 30 May 2022 17:53:11 +0000 x86_64 GNU/Linux
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"># After Reboot --&gt; uname -a
</span></span><span class="line"><span class="cl">Linux archlinux 5.18.0ayedaemon-g8ab2afa23bd1 #1 SMP PREEMPT_DYNAMIC Wed Jun 1 16:54:51 UTC 2022 x86_64 GNU/Linux
</span></span></code></pre></div><p>We just compiled our very own first kernel and since we have not changed much of the kernel parameters and no user-space programs are affected with this. But we get our name on the kernel tag!!</p>
<p><img loading="lazy" src="https://media.giphy.com/media/jurcfxao8M3yzHmCjS/giphy.gif#center" alt=""  />
</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Arch is a rolling distro and the packages can be easily upgraded to latest versions available. No <code>&lt;package-name&gt; too old</code> kind of errors.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>Eudyptula Task1</title>
      <link>https://ayedaemon.github.io/post/2022/05/eudyptula-task-1/</link>
      <pubDate>Wed, 25 May 2022 15:14:27 +0530</pubDate>
      
      <guid>https://ayedaemon.github.io/post/2022/05/eudyptula-task-1/</guid>
      <description>Task 1 for Eudyptula challenge</description>
      <content:encoded><![CDATA[<h3 id="what-is-this">What is this?</h3>
<blockquote>
<p>The <a href="http://eudyptula-challenge.org/">Eudyptula Challenge</a> is a series of programming exercises for the Linux kernel, that start from a very basic “Hello world” kernel module, moving on up in complexity to getting patches accepted into the main Linux kernel source tree.</p>
</blockquote>
<p>Unfortunately, this project is not accepting any new applicants right now. So I decided to gather tasks details from other online sources and complete them locally.</p>
<h3 id="task-1">Task-1</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">This is Task 01 of the Eudyptula Challenge
</span></span><span class="line"><span class="cl">------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Write a Linux kernel module, and stand-alone Makefile, that when loaded
</span></span><span class="line"><span class="cl">prints to the kernel debug log level, &#34;Hello World!&#34;  Be sure to make
</span></span><span class="line"><span class="cl">the module be able to be unloaded as well.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">The Makefile should build the kernel module against the source for the
</span></span><span class="line"><span class="cl">currently running kernel, or, use an environment variable to specify
</span></span><span class="line"><span class="cl">what kernel tree to build it against.
</span></span></code></pre></div><p>Linux provides a powerful and expansive API for applications, but sometimes that’s not enough. Interacting with a piece of hardware or conducting operations that require access to privileged information in the system can require a kernel module. In this task we have to write a kernel module that basically prints &ldquo;Hello World!&rdquo;.</p>
<h3 id="what-is-a-kernel-module">What is a Kernel Module?</h3>
<p>A Linux kernel module is a piece of compiled binary code that is inserted directly into the Linux kernel, running at ring 0, the lowest and least protected ring of execution in the x86–64 processor. Code here runs completely unchecked but operates at incredible speed and has access to everything in the system.</p>
<p>A loadable kernel module (LKM) is a mechanism for adding code to, or removing code from, the Linux kernel at run time. They are ideal for device drivers, enabling the kernel to communicate with the hardware without it having to know how the hardware works. The alternative to LKMs would be to build the code for each and every driver into the Linux kernel.</p>
<p>Without this modular capability, the Linux kernel would be very large, as it would have to support every driver that would ever be needed for the system to work properly. You would also have to rebuild the kernel every time you wanted to add new hardware or update a device driver.</p>
<p>Kernel modules run in kernel space and applications run in user space, and both kernel space and user space have their own unique memory address spaces that do not overlap. This approach ensures that applications running in user space have a consistent view of the hardware, regardless of the hardware platform. The kernel services are then made available to the user space in a controlled way through the use of system calls. The kernel also prevents individual user-space applications from conflicting with each other or from accessing restricted resources through the use of protection levels (e.g., superuser versus regular user permissions).</p>
<h3 id="prepare-system-for-building-lkms">Prepare system for building LKMs</h3>
<p>The system must be prepared to build kernel code, and to do this you must have the Linux headers installed on your device. On a typical Linux desktop machine you can use your package manager to locate the correct package to install. For example, under 64-bit Centos7 you can use the below code. Sometimes the package manager provides multiple version of headers, then you must install the headers for the exact version of your kernel build.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Update system</span>
</span></span><span class="line"><span class="cl">sudo yum update -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Install headers</span>
</span></span><span class="line"><span class="cl">sudo yum install -y kernel-devel kernel-headers
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Check headers</span>
</span></span><span class="line"><span class="cl">ls /usr/src/kernels/<span class="k">$(</span>uname -r<span class="k">)</span>
</span></span></code></pre></div><h3 id="write-first-module---hello-world">Write first module - Hello World</h3>
<p>The LKM code is very different from the regular user-space C program. Typical computer programs are reasonably straightforward. A loader allocates the memory for the program, then loads the program and other shared libraries into memory. Instruction Execution begins at some entrypoint (typically <code>main()</code> in C/C++ programs). On exit, OS identifies any memory leaks and frees lost memory to pool.</p>
<p>The LKMs are not applications - For a start there is no <code>main()</code>  and no <code>printf()</code> functions!!. They also do not have any automatic cleanup. Interestingly, they also do not have any floating-point support. In LKMs, the kernel module have atleast 2 entrypoint like functions; These functions executes at loading or unloading of the LKM.</p>
<p>The above can be a lot to digest all at once but it is important that they are addressed. Now, we can wrap our minds around the below code and understand how it works.</p>
<p>To start with, we need a <code>HelloWorld.c</code> file with  2 function definitions - <code>hello_world_init()</code> and <code>hello_world_exit()</code>. We then register first function to be executed when the LKM is loaded in the memory and the later is registered to be executed at unloading of the LKM. There are few extra functions that configure the metadata for the created module.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/init.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/module.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;linux/kernel.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_LICENSE</span><span class="p">(</span><span class="s">&#34;GPL&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_AUTHOR</span><span class="p">(</span><span class="s">&#34;ayedaemon&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">MODULE_DESCRIPTION</span><span class="p">(</span><span class="s">&#34;Eudyptula task1&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">int</span> <span class="nf">hello_world_init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printk</span><span class="p">(</span><span class="n">KERN_DEBUG</span> <span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">static</span> <span class="kt">void</span> <span class="nf">hello_world_exit</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">printk</span><span class="p">(</span><span class="n">KERN_DEBUG</span> <span class="s">&#34;Bye Bye World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">module_init</span><span class="p">(</span><span class="n">hello_world_init</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nf">module_exit</span><span class="p">(</span><span class="n">hello_world_exit</span><span class="p">);</span>
</span></span></code></pre></div><p>In kernel space, we do not have access to <code>printf()</code> functions, instead we have a very similar in usage function called <code>printk()</code><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, and you can call it from anywhere withing the LKM code. Read more about <code>printk()</code> from <a href="https://www.kernel.org/doc/html/latest/core-api/printk-basics.html">here</a>.<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>Now that we’ve constructed the simplest possible module, let’s understand the important parts in detail:</p>
<ul>
<li>
<p>The “includes” cover the required header files necessary for Linux kernel development.</p>
</li>
<li>
<p><code>MODULE_LICENSE</code> can be set to a variety of values depending on the license<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> of the module. Other following 2 lines are also a part of module metadata.</p>
</li>
<li>
<p>At the end of the file, we call module_init and module_exit to tell the kernel which functions are or loading and unloading functions. This gives us the freedom to name the functions whatever we like.</p>
</li>
</ul>
<h3 id="-make-makefile">&hellip; make Makefile</h3>
<p>A Makefile is required to build the kernel module — in fact, it is a special <strong>kbuild</strong> Makefile. Below is the <code>Makefile</code> used to build the above LKM code.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Makefile" data-lang="Makefile"><span class="line"><span class="cl"><span class="nv">obj-m</span> <span class="o">+=</span> HelloWorld.o
</span></span><span class="line"><span class="cl"><span class="nv">KDIR</span> <span class="o">:=</span> /lib/modules/<span class="k">$(</span>shell uname -r<span class="k">)</span>/build
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">all</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> modules
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">clean</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">	<span class="k">$(</span>MAKE<span class="k">)</span> -C <span class="k">$(</span>KDIR<span class="k">)</span> <span class="nv">M</span><span class="o">=</span><span class="k">$(</span>PWD<span class="k">)</span> clean
</span></span></code></pre></div><p>First line of this Makefile is called <em>goal definition</em> and it defines the module to be built.  The rest of the Makefile is a regular makefile. Here, <code>-C</code> option switches the directory to the kernel directory before performing any make tasks. The <code>M=$(PWD)</code> variable assignment tells the make command where the actual project files exist, which helps make to return back to the project directory from kernel directory.</p>
<p>All going well, the process to build the kernel module should be straightforward, provided that you have installed the Linux headers as described earlier. The steps are as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ ls
</span></span><span class="line"><span class="cl">HelloWorld.c  Makefile  README.md
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ make
</span></span><span class="line"><span class="cl">make -C /lib/modules/3.10.0-1160.62.1.el7.x86_64/build M=/vagrant_data/task-1 modules
</span></span><span class="line"><span class="cl">make[1]: Entering directory `/usr/src/kernels/3.10.0-1160.62.1.el7.x86_64&#39;
</span></span><span class="line"><span class="cl">  CC [M]  /vagrant_data/task-1/HelloWorld.o
</span></span><span class="line"><span class="cl">  Building modules, stage 2.
</span></span><span class="line"><span class="cl">  MODPOST 1 modules
</span></span><span class="line"><span class="cl">  CC      /vagrant_data/task-1/HelloWorld.mod.o
</span></span><span class="line"><span class="cl">  LD [M]  /vagrant_data/task-1/HelloWorld.ko
</span></span><span class="line"><span class="cl">make[1]: Leaving directory `/usr/src/kernels/3.10.0-1160.62.1.el7.x86_64&#39;
</span></span></code></pre></div><p>Once the module is successfully buit, we can test it by loading the module using <code>insmod</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ ls -l *.ko
</span></span><span class="line"><span class="cl">-rw-r--r--. 1 vagrant vagrant 101880 May 25 18:03 HelloWorld.ko
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ sudo insmod HelloWorld.ko
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ dmesg | tail -1
</span></span><span class="line"><span class="cl">[35803.038855] Hello World!
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ lsmod | head -2
</span></span><span class="line"><span class="cl">Module                  Size  Used by
</span></span><span class="line"><span class="cl">HelloWorld             12496  0
</span></span></code></pre></div><p>The metadata information coded in the LKM can be checked with <code>modinfo</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ modinfo HelloWorld.ko
</span></span><span class="line"><span class="cl">filename:       /vagrant_data/task-1/HelloWorld.ko
</span></span><span class="line"><span class="cl">description:    Eudyptula task1
</span></span><span class="line"><span class="cl">author:         ayedaemon
</span></span><span class="line"><span class="cl">license:        GPL
</span></span><span class="line"><span class="cl">retpoline:      Y
</span></span><span class="line"><span class="cl">rhelversion:    7.9
</span></span><span class="line"><span class="cl">srcversion:     7969E1C9B651C03B53BA6B2
</span></span><span class="line"><span class="cl">depends:
</span></span><span class="line"><span class="cl">vermagic:       3.10.0-1160.62.1.el7.x86_64 SMP mod_unload modversions
</span></span></code></pre></div><p>At last, the module can be unloaded easily with <code>rmmod</code> command.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[vagrant@centos7 task-1]$ sudo rmmod HelloWorld.ko
</span></span><span class="line"><span class="cl">[vagrant@centos7 task-1]$ dmesg | tail -2
</span></span><span class="line"><span class="cl">[35803.038855] Hello World!
</span></span><span class="line"><span class="cl">[35983.753824] Bye Bye World!
</span></span></code></pre></div><h3 id="conclusion">Conclusion</h3>
<p>Hopefully you have built your first loadable kernel module (LKM). Despite the simplicity of the functionality of this module there was a lot of material to cover — by the end of this article: you should have a broad idea of how loadable kernel modules work; you should have your system configured to build, load and unload such modules; and, you should be able to define custom parameters for your LKMs.</p>
<p>Just remember that you are completely on your own in kernel land. There are no backstops or second chances for your code. If you’re quoting a project for a client, be sure to double, if not triple, the anticipated debugging time. Kernel code has to be as perfect as possible to ensure the integrity and reliability of the systems that will run it.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>If there is no <code>\n</code> character at the end of the <code>printk()</code> string, then the next <code>printk()</code>  string will also be printed in dmesg. I was able to see both <code>Hello World!</code> and <code>Bye Bye World</code> at the same time when I was either loading or unloading the module.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://www.kernel.org/doc/html/latest/core-api/printk-basics.html">https://www.kernel.org/doc/html/latest/core-api/printk-basics.html</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>Linux kernel licensing rules - <a href="https://www.kernel.org/doc/html/latest/process/license-rules.html">https://www.kernel.org/doc/html/latest/process/license-rules.html</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
